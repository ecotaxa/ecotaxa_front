/*! For license information please see src_modules_form-submit_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_form-submit_js"],{"./src/modules/form-submit.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormSubmit\": () => (/* binding */ FormSubmit)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n\n\nlet instance = null;\nconst formcss = {\n  invalid: 'invalid',\n  inputvalidate: 'input-validate'\n}\nclass FormSubmit {\n  handlers = [];\n  form = null;\n  listener = null;\n  constructor(form, options = {}) {\n    if (!instance) {\n      if (!form) return;\n      const defaultOptions = {};\n      this.options = Object.assign(defaultOptions, options);\n      this.form = form instanceof HTMLElement ? form : document.querySelector(form);\n      this.validateFields(true);\n      this.init();\n      instance = this;\n    }\n    return instance;\n  }\n  init() {\n    // init the form ( options like beforeunload etc...)\n    this.form.addEventListener('submit', async (e) => {\n      console.log('----------------formsubmit', e)\n      const res = await this.submitForm();\n      e.preventDefault();\n    });\n    // check if there is a password confirm input\n    this.form.querySelectorAll('input[data-match]').forEach(input => {\n      //\n      const match = input.dataset.match;\n      if (!match) return;\n      const target = document.getElementById(match);\n      if (!target) return;\n      const invalid = (input.dataset.matchinvalid) ? input.dataset.matchinvalid : \"no match\";\n      const label = input.closest('label');\n      const check_match = (item, itemtarget) => {\n        if (item.value !== itemtarget.value) {\n          item.setCustomValidity(invalid);\n          itemtarget.setCustomValidity(invalid);\n          if (input != item) {\n            if (label) label.classList.add(formcss.invalid);\n            input.classList.add(formcss.inputvalidate);\n          }\n        } else {\n          item.setCustomValidity(\"\");\n          itemtarget.setCustomValidity(\"\");\n          item.dataset.invalid = '';\n          itemtarget.dataset.invalid = '';\n          if (input != item) {\n            if (label) label.classList.remove(formcss.invalid);\n            input.classList.remove(formcss.inputvalidate);\n\n          }\n        }\n        item.reportValidity();\n        itemtarget.reportValidity();\n        item.focus();\n      };\n      [input, target].forEach(item => {\n        item.addEventListener('keyup', (e) => {\n          const itemtarget = (item === input) ? target : input;\n          check_match(item, itemtarget);\n        });\n      });\n\n    });\n  }\n\n  validateField(field) {\n\n    const get_message = (field) => {\n      let message = 'invalid';\n      if (field.required) message = (field.dataset.required) ? field.dataset.required : ((this.form.dataset.required) ? this.form.dataset.required : 'invalid');\n      if (message === 'invalid') message = (field.dataset.invalid) ? field.dataset.invalid : ((this.form.dataset.invalid) ? this.form.dataset.invalid : 'invalid input');\n      return message;\n    }\n\n\n    field.value = dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(field.value);\n    const rep = field.checkValidity();\n    const label = field.closest('.form-box') ? field.closest('.form-box').querySelector('label') : null;\n\n    if (rep && label) label.classList.remove(formcss.invalid);\n\n    else if (!rep) {\n      if (label) {\n        label.dataset.invalid = get_message(field);\n        label.classList.add(formcss.invalid);\n      }\n\n    }\n\n    if (field.classList.contains('tomselected') && field.nextElementSibling) {\n      field.nextElementSibling.classList.add(formcss.inputvalidate);\n    } else field.classList.add(formcss.inputvalidate);\n\n    return rep;\n  }\n\n  validateFields(init = false) {\n\n    // todo: complete validation foreach field type\n    let resp = true;\n\n    this.form.querySelectorAll('input,textarea, select').forEach(field => {\n      if (init === true) {\n        if (!field.dataset.listen) {\n          ['change', 'blur'].forEach(evt => {\n            field.addEventListener(evt, (e) => {\n              this.validateField(e.currentTarget);\n            });\n          });\n          field.dataset.listen = true;\n        }\n      } else {\n        const rep = this.validateField(field);\n        resp = (resp && rep);\n      }\n\n\n    });\n    return resp;\n  }\n  addHandler(handler) {\n    this.handlers.push(handler);\n  }\n  fieldEnable() {\n    this.form.querySelectorAll('input[data-sub=\"enable\"]').forEach(input => {\n      input.removeAttribute('disabled');\n    });\n  }\n  async submitHandler() {\n    if (!this.validateFields()) return false;\n    if (this.handlers.length === 0) return true;\n    let resp = true;\n    // series\n    /*  for (const handler of this.handlers) {\n          const rep = await handler()\n          resp = (resp && rep)\n      }*/\n    // concurrent\n    await Promise.all(this.handlers.map(async handler => {\n      const rep = await handler();\n      resp = (resp && rep);\n    }));\n    if (resp === true) this.handlers = [];\n    console.log('resp', resp)\n    return resp;\n  }\n  async submitForm() {\n    if (this.validateFields(false)) {\n      const yessubmit = await this.submitHandler();\n      if (yessubmit) {\n        this.fieldEnable();\n        this.form.submit();\n      } else return false;\n    } else return false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/form-submit.js\n")}}]);