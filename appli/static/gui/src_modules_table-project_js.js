/*! For license information please see src_modules_table-project_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_table-project_js"],{"./src/modules/table-project.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   initImport: () => (/* binding */ initImport)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ "./src/modules/utils.js");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ "./src/modules/modules-config.js");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deep-equal */ "./node_modules/deep-equal/index.js");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(deep_equal__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.lastused = "last-used";\nconst initImport = async (state) => {\n  const {\n    DataImport\n  } = await Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_tom-select_dist_js_plugins_caret_position_js-node_modules_tom-select_dis-6094fa"), __webpack_require__.e("src_modules_js-tom-select_js"), __webpack_require__.e("src_modules_project-privileges_js"), __webpack_require__.e("src_modules_data-import_js-src_css_tom-select_css")]).then(__webpack_require__.bind(__webpack_require__, /*! ../modules/data-import.js */ "./src/modules/data-import.js"));\n  state.importfields = state.grid.columns.filter(column => (column.selectcells));\n\n  state.importfields = (state.importfields.length) ? state.importfields[0].selectcells : null;\n  state.grid.columns.forEach((column, index) => {\n    const key = column.name;\n    const domheadings = state.dom.querySelectorAll(\'thead th\');\n    if (state.importfields.indexOf(key) >= 0) {\n      domheadings[index].dataset.name = key;\n    }\n    // set headings dataset values for import module\n    if (column.hasOwnProperty(\'selectcells\')) {\n      domheadings[index].dataset.selectcells = column.selectcells;\n\n      if (column.what) domheadings[index].dataset.what = column.what;\n    }\n\n    [\'autocomplete\', \'parts\', \'value\'].forEach(prop => {\n      if (column.hasOwnProperty(prop)) domheadings[index].dataset[prop] = column[prop];\n    });\n\n  });\n  state.dataImport = new DataImport(state);\n  state.waitdiv.remove();\n}\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(state) {\n\n\n\n  // get the css fixed length of progress bar\n\n  let progressw = 0;\n  if (document.styleSheets && document.styleSheets.length && document.styleSheets[0].cssRules) {\n    Object.values(document.styleSheets[0].cssRules).forEach((rule, i) => {\n      if (rule.selectorText && rule.selectorText.trim() === \'.progress data\') {\n        progressw = rule.style.cssText.split(\';\');\n        progressw.forEach(r => {\n          r = r.split(\':\');\n          if (r[0].trim() === \'max-width\' && r.length > 1) {\n            progressw = parseInt(r[1].trim());\n            return;\n          }\n        });\n      };\n      if (progressw > 0) return;\n    });\n  }\n  progressw = (progressw > 0) ? progressw : 64;\n  state.cellidname = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid;\n\n  state.initImport = initImport;\n  if (state.params.lastused) {\n    const lastused = JSON.parse(state.params.lastused);\n    state.setRowAttributes = (state, tr, id) => {\n      if (id && lastused.indexOf(id) >= 0) {\n        tr.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.lastused);\n      }\n      return tr;\n    }\n  }\n  return {\n    contact: (value, rowIndex, cellIndex, td = {}) => {\n      const about = (Array.isArray(value)) ? Boolean(value[1]) : false;\n      value = (Array.isArray(value)) ? String(value[0]).trim() : String(value).trim();\n      if (value === null) value = ``;\n      let node = [];\n      //cell value is an array with title and  boolean which tells if about is autho or not\n      // display stats and info about the project if ok\n      const id = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid);\n      // contact\n      let contact = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.contact);\n      let iscontact = false;\n      if (contact === null) {\n        contact = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.managers);\n        contact = (contact && contact.length) ? contact[0] : null;\n      } else iscontact = true;\n\n      if (contact) {\n        const nodecontact = {\n          nodename: "A",\n          attributes: {\n            href: `mailto:${contact.email}`,\n            class: "contact",\n            target: "_blank"\n          },\n          childnodes: [state.setTextNode(contact.name)]\n        };\n        if (iscontact) nodecontact.attributes["data-contact"] = iscontact;\n        node = [state.setTextNode(value), nodecontact];\n      } else node = [state.setTextNode(value)];\n      if (about === true) {\n        td.childnodes = [{\n          nodename: "DETAILS",\n          attributes: {\n            "data-id": id,\n            "data-what": _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.about\n          },\n          childnodes: [{\n            nodename: "SUMMARY",\n            childnodes: node\n          }]\n        }];\n      } else td.childnodes = node;\n      return td;\n    },\n    imports: (value, rowIndex, cellIndex, td = {}) => {\n      const id = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid);\n      const column = state.grid.columns[cellIndex];\n      if (column.hasOwnProperty(\'selectcells\')) {\n        let btns = [],\n          txt = (state.params.btn) ? state.params.btn : \'import\';\n\n        switch (column.what) {\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.taxo:\n            ((column.parts) ? column.parts : column.selectcells).forEach((v, index) => {\n              let impid = state.getCellData(rowIndex, v);\n              impid = (impid === null || deep_equal__WEBPACK_IMPORTED_MODULE_2___default()(impid, {})) ? ` disabled` : ``;\n              if (index > 0) txt = (state.params.btn1) ? state.params.btn1 : \'extra\';\n              btns.push({\n                nodename: "BUTTON",\n                attributes: {\n                  class: `btn is-preset${impid}`,\n                  type: \'button\'\n                },\n                childnodes: [{\n                  nodename: "I",\n                  attributes: {\n                    class: `icon-md  ${((impid === ``)? `icon-plus-sm`:``)}`,\n                    type: \'button\'\n                  },\n                  childnodes: []\n                }, state.setTextNode(txt)]\n              });\n            });\n            break;\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.settings:\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.privileges:\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.fields:\n            btns.push({\n              nodename: "BUTTON",\n              attributes: {\n                class: `btn is-preset`,\n                type: \'button\'\n              },\n              childnodes: [state.setTextNode(txt)]\n            });\n            break;\n        }\n        td.childnodes = btns;\n      } else td.childnodes = [];\n      return td;\n    },\n    controls: (value, rowIndex, cellIndex, td = {}) => {\n      let controls = [];\n      const id = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid);\n      Object.entries(value).forEach(([key, action]) => {\n        let node = {\n          nodename: "A"\n        };\n        switch (key) {\n          case "A":\n            node.attributes = {\n              class: "btn is-annotate order-1",\n              href: `/prj/${id}`\n            };\n            break;\n          case "V":\n            node.attributes = {\n              class: "btn is-view order-1",\n              href: `/prj/${id}`\n            };\n\n            break;\n          case "M":\n            node.attributes = {\n              class: "btn is-manage order-2",\n              href: `/gui/prj/edit/${id}`\n            };\n            break;\n          case "R":\n            const contact = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.contact);\n            node.attributes = {\n              class: "btn is-request order-2",\n              href: `mailto:${contact.email}?${id}`\n            };\n            break;\n        }\n\n        node.childnodes = [state.setTextNode(action)];\n        controls.push(node);\n      });\n      td.attributes = (td.hasOwnProperty(\'attributes\')) ? td.attributes : {};\n      td.attributes["class"] = (td.attributes["class"]) ? td.attributes["class"] + " " + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.table.controls : _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.table.controls;\n      td.childnodes = controls;\n      return td;\n    },\n    progress: (value, rowIndex, cellIndex, td = {}) => {\n      if (value === null) value = 0;\n      // fixed in px  displays better than %\n      value = (parseInt(value) - parseFloat(value).toFixed(2) == 0) ? parseInt(value) : parseFloat(value).toFixed(2);\n      const pct = parseFloat(value * (progressw / 100)).toFixed(2)\n      const node = {\n        nodename: "DATA",\n        attributes: {\n          style: `width:${pct}px`,\n          "data-w": `${pct}`\n        },\n      }\n\n      td.attributes = (td.hasOwnProperty(\'attributes\')) ? td.attributes : {};\n      td.attributes["class"] = (td.attributes["class"]) ? td.attributes["class"] + " " + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress : _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress;\n      td.childnodes = [state.setTextNode(String(value) + \'%\'), node];\n      return td;\n    },\n    license: (value, rowIndex, cellIndex, td = {}) => {\n      td.html = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_license)(value, true);\n      return td;\n    },\n    privileges: (value, rowIndex, cellIndex, td = {}) => {\n\n      if (!value || value === ``) td.childnodes = [state.setTextNode(``)];\n      let rights = [];\n      Object.entries(value).forEach(([right, members]) => {\n        let mb = [];\n        if (members.length) {\n          members.forEach(member => {\n            mb.push(member.name);\n          });\n          rights.push({\n            nodename: "DIV",\n            attributes: {\n              class: "rights",\n              "data-r": right\n            },\n            childnodes: [state.setTextNode(mb.join(`, `))]\n          });\n        }\n      });\n      td.childnodes = rights;\n      return td;\n    },\n    taxons: (value, rowIndex, cellIndex, td = {}) => {\n      if (value === null) td.childnodes = [state.setTextNode(``)];\n      const num = Object.keys(value).length;\n      if (num > 0) {\n        value = Object.values(value).join(\', \');\n        td.childnodes = [{\n          nodename: "DIV",\n          attributes: {\n            class: _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.table.tip,\n            "data-num": num\n          },\n          childnodes: [state.setTextNode(value)]\n        }];\n      } else td.childnodes = [state.setTextNode(``)];\n      return td;\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/table-project.js\n')}}]);