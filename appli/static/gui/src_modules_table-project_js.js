/*! For license information please see src_modules_table-project_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_table-project_js"],{"./src/modules/table-project.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ "./src/modules/utils.js");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ "./src/modules/modules-config.js");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deep-equal */ "./node_modules/deep-equal/index.js");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(deep_equal__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst init_import = async (state) => {\n  const {\n    DataImport\n  } = await Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_tom-select_dist_js_tom-select_base_min_js"), __webpack_require__.e("src_modules_project-privileges_js"), __webpack_require__.e("src_modules_data-import_js-src_css_tom-select_css")]).then(__webpack_require__.bind(__webpack_require__, /*! ../modules/data-import.js */ "./src/modules/data-import.js"));\n  Object.entries(state.columns).forEach(([key, column], index) => {\n    const domheadings = state.grid.dom.querySelectorAll(\'thead th\');\n    if (state.importfields.indexOf(key) >= 0) {\n      domheadings[index].dataset.name = key;\n    }\n    // set headings dataset values for import module\n\n    if (column.hasOwnProperty(\'selectcells\')) {\n      domheadings[index].dataset.selectcells = column.selectcells;\n      if (column.what) domheadings[index].dataset.what = column.what;\n    }\n\n    [\'autocomplete\', \'parts\', \'value\'].forEach(prop => {\n      if (column.hasOwnProperty(prop)) domheadings[index].dataset[prop] = column[prop];\n    });\n    state.dataImport = new DataImport(state.grid, state.params.import);\n    state.waitdiv.remove();\n  });\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(state) {\n\n  state.initImport = async () => {\n    if (state.importfields) await init_import(state);\n  };\n\n\n  return {\n    contact: (value, td, rowIndex, cellIndex) => {\n      const about = (Array.isArray(value)) ? Boolean(value[1]) : false;\n      value = (Array.isArray(value)) ? value[0] : value;\n      if (value === null) value = ``;\n      let node = [];\n      //cell value is an array with title and  boolean which tells if about is autho or not\n      // display stats and info about the project if ok\n      const id = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid);\n      // contact\n      let contact = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.contact);\n      let iscontact = false;\n      if (contact === null) {\n        contact = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.managers);\n        contact = (contact && contact.length) ? contact[0] : null;\n      } else iscontact = true;\n      if (contact) {\n        const nodecontact = {\n          nodeName: "A",\n          attributes: {\n            href: `mailto:${contact.email}`,\n            class: "contact",\n            target: "_blank"\n          },\n          childNodes: [state.setTextNode(contact.name)]\n        };\n        if (iscontact) nodecontact.attributes["data-contact"] = iscontact;\n        node = [state.setTextNode(value), nodecontact];\n      } else node = [state.setTextNode(value)];\n      if (about === true) {\n        td.childNodes = [{\n          nodeName: "DETAILS",\n          attributes: {\n            "data-id": id,\n            "data-what": _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.about\n          },\n          childNodes: [{\n            nodeName: "SUMMARY",\n            childNodes: node\n          }]\n        }];\n      } else td.childNodes = node;\n    },\n    imports: (value, td, rowIndex, cellIndex) => {\n      const id = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid);\n      const column = Object.values(state.columns)[cellIndex];\n      if (column.hasOwnProperty(\'selectcells\')) {\n        let btns = [],\n          txt = (state.params.btn) ? state.params.btn : \'import\';\n\n        switch (column.what) {\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.taxo:\n            ((column.parts) ? column.parts : column.selectcells).forEach((v, index) => {\n              let impid = state.getCellData(rowIndex, v);\n              impid = (impid === null || deep_equal__WEBPACK_IMPORTED_MODULE_2___default()(impid, {})) ? ` disabled` : ``;\n              if (index > 0) txt = (state.params.btn1) ? state.params.btn1 : \'extra\';\n              btns.push({\n                nodeName: "BUTTON",\n                attributes: {\n                  class: `btn is-preset${impid}`\n                },\n                childNodes: [{\n                  nodeName: "I",\n                  attributes: {\n                    class: `icon-md  ${((impid === ``)? `icon-plus-sm`:``)}`\n                  },\n                  childNodes: []\n                }, state.setTextNode(txt)]\n              });\n            });\n            break;\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.settings:\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.privileges:\n          case _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.fields:\n            btns.push({\n              nodeName: "BUTTON",\n              attributes: {\n                class: `btn is-preset`\n              },\n              childNodes: [state.setTextNode(txt)]\n            });\n            break;\n        }\n        td.childNodes = btns;\n      } else td.childNodes = [];\n\n    },\n    controls: (value, td, rowIndex, cellIndex) => {\n      let controls = [];\n      const id = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.projid);\n      Object.entries(value).forEach(([key, action]) => {\n        let node = {\n          nodeName: "A"\n        };\n        switch (key) {\n          case "A":\n            node.attributes = {\n              class: "btn is-annotate order-1",\n              href: `/prj/${id}`\n            };\n            break;\n          case "V":\n            node.attributes = {\n              class: "btn is-view order-1",\n              href: `/prj/${id}`\n            };\n\n            break;\n          case "M":\n            node.attributes = {\n              class: "btn is-manage order-2",\n              href: `/gui/prj/edit/${id}`\n            };\n            break;\n          case "R":\n            const contact = state.getCellData(rowIndex, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.models.contact);\n            node.attributes = {\n              class: "btn is-request order-2",\n              href: `mailto:${contact.email}?${id}`\n            };\n            break;\n        }\n\n        node.childNodes = [state.setTextNode(action)];\n        controls.push(node);\n      });\n      td.attributes = (td.hasOwnProperty(\'attributes\')) ? td.attributes : {};\n      td.attributes["class"] = (td.attributes["class"]) ? td.attributes["class"] + " " + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.table.controls : _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.table.controls;\n      td.childNodes = controls;\n    },\n    progress: (value, td, rowIndex, cellIndex) => {\n      if (value === null) value = 0;\n      value = (parseInt(value) - parseFloat(value).toFixed(2) == 0) ? parseInt(value) : parseFloat(value).toFixed(2);\n      const pct = parseFloat(value * (64 / 100)).toFixed(2)\n      const node = {\n        nodeName: "DATA",\n        attributes: {\n          style: `width:${pct}%`,\n          "data-w": `${pct}`\n        },\n      }\n\n      td.attributes = (td.hasOwnProperty(\'attributes\')) ? td.attributes : {};\n      td.attributes["class"] = (td.attributes["class"]) ? td.attributes["class"] + " " + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress : _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress;\n      td.childNodes = [state.setTextNode(String(value) + \'%\'), node];\n    },\n    license: (value, td, rowIndex, cellIndex) => {\n      return (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_license)(value);\n    },\n    privileges: (value, td, rowIndex, cellIndex) => {\n\n      if (!value || value === ``) td.childNodes = [state.setTextNode(``)];\n      let rights = [];\n      Object.entries(value).forEach(([right, members]) => {\n        let mb = [];\n        if (members.length) {\n          members.forEach(member => {\n            mb.push(member.name);\n          });\n          rights.push({\n            nodeName: "DIV",\n            attributes: {\n              class: "rights",\n              "data-r": right\n            },\n            childNodes: [state.setTextNode(mb.join(`, `))]\n          });\n        }\n      });\n      td.childNodes = rights;\n    },\n    taxons: (value, td, rowIndex, cellIndex) => {\n      if (value === null) td.childNodes = [state.setTextNode(``)];\n      const num = Object.keys(value).length;\n      if (num > 0) {\n        value = Object.values(value).join(\', \');\n        td.childNodes = [{\n          nodeName: "DIV",\n          attributes: {\n            class: _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.table.tip,\n            "data-num": num\n          },\n          childNodes: [state.setTextNode(value)]\n        }];\n      } else td.childNodes = [state.setTextNode(``)];\n\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/table-project.js\n')}}]);