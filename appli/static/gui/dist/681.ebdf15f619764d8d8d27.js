/*! For license information please see 681.ebdf15f619764d8d8d27.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[681],{681:(e,t,i)=>{i.d(t,{JsDirToZip:()=>h});var s=i(4860),n=i(9861);const a=new Set(["zip","gz","png","jpg","jpeg","pdf","doc","docx","ppt","pptx","xls","xlsx","heic","heif","7z","bz2","rar","gif","webp","webm","mp4","mov","mp3","aifc"]),l=".tsv,.png,.jpg, .jpeg,.zip,.gz,.7z,.bz2";let r=null;const o=1073741824;class h{_events={};eventnames={ready:"ready",follow:"follow",endzip:"endzip",complete:"complete",endreaddir:"endreaddir",gzip:"gzip",sendfile:"sendfile",bigfile:"bigfile",terminate:"terminate",pending:"pending",errorfile:"errorfile",counter:"counter",clientcounter:"clientcounter",reject:"reject",message:"message",error:"error",init:"init"};constructor(e={}){if(r)return r;const t={uploadurl:"/gui/files/upload",largefile:o,accept:l.split(",")};return this.options={...t,...e},this.init(),r=this,r}init(){(0,s.UO)(this),this.initProps(),this.on(this.eventnames.init,(async e=>{!1===this.isActive()?(console.log("reset terminate event end"),await this.reset(),this.emit(this.eventnames.complete,{name:this.eventnames.ready}),this.endreaddir=!1):console.log(" partly finshed ",e)})),this.on(this.eventnames.endzip,(e=>{!e.bigfile&&this.zip?this.zip.end():e.bigfile&&this.gzipped&&console.log(" -------------------------gzipped end ",this.gzipped);const t=this.buildMessage(e,{name:this.eventnames.sendfile});console.log("endzip%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",t),this.emit(this.eventnames.complete,t)})),this.on(this.eventnames.sendfile,(async e=>{const t=e.bigfile?await this.gzipped.getFile():await this.getFile();if(e.bigfile){const t=(e.path?e.path:"").replace(e.bigfile,"");this.sendChunk(t)}else this.sendZipFile(t,e.path?e.path:"",null)})),this.on(this.eventnames.bigfile,(e=>{console.log("onsendchunk",e);const t=(e.path?e.path:"").replace(e.bigfile,"");this.sendChunk(t)})),this.on(this.eventnames.endreaddir,(e=>{this.endreaddir=!0,this.checkProcessed(e)})),this.on(this.eventnames.counter,(async e=>{this.endcounter=!1,this.counter[e.name]+=1,this.emit(this.eventnames.clientcounter,e),"zip"===e.name&&this.counter.scan===this.counter.zip&&(this.endcounter=!0,this.checkProcessed(e)),"zip"===e.name&&this.callback&&await this.callback()}))}initProps(){this.zip=null,this.zipname=null,this.filestream=null,this.streamhandle=null,this.gzipped=null,this.sizetozip=0,this.part=0,this.continue=null,this.endcounter=!1,this.counter={scan:0,zip:0,reject:0},this.handlers=[]}async reset(){this.initProps(),await this.initStorage()}isActive(){return null!==this.zip||null!==this.continue||null!==this.gzipped||!0!==this.endreaddir}async initZip(){const e=this;this.pos=0,this.sizetozip=0,console.log("==================newzip"),this.zip=new n.qQ(((t,i,s)=>{if(t)return console.log("error",t),!1;e.streamhandle.write(i,{at:e.pos}),e.pos+=i.length,s&&(e.streamhandle.close(),console.log("final-----------------------------*******************************-",e.pos))})),this.zipOnData(),this.continue&&await this.continue()}checkProcessed(e){if(!0===this.endreaddir&&!0===this.endcounter){const t=this.buildMessage(e,{name:this.eventnames.endzip});this.emit(this.eventnames.complete,t)}}zipOnData(e=null){const t=(e=null===e?this.zip:e).ondata;e.ondata=(i,s,n)=>{t(i,s,n),n&&(e.d=null,e.u.at(-1).d=null)}}buildMessage(e,t={}){return e.hasOwnProperty("part")?t.part=e.part:this.part=0,e.hasOwnProperty("bigfile")&&(t.bigfile=e.bigfile),e.hasOwnProperty("path")&&(t.path=e.path),t}async quotaEstimate(){navigator&&navigator.storage&&navigator.storage.estimate&&navigator.storage.estimate().then((e=>{const t=(e.usage/e.quota*100).toFixed(2),i=(0,s.Y2)(e.quota-e.usage);this.emit(this.eventnames.message,{id:"quota",name:"console",message:"you've used "+t+"% of the available storage ("+i+")."})}))}async initStorage(){navigator&&navigator.storage&&navigator.storage.estimate?(await this.cleanStorage(),this.quotaEstimate()):this.emit(this.eventnames.message,{name:"error",message:"no navigator storage"})}async createLocalStream(e,t={"application/zip":[".zip"]}){const i=await navigator.storage.getDirectory(),s={types:[{description:"Temp file",accept:t}],create:!0},n=await i.getFileHandle(e,s),a=await n.createWritable();return{filestream:n,streamhandle:a}}async scanCommon(e,t={}){if(this.endreaddir=!1,null===this.zip){console.log("scancommmon zipname",e),e=""===(e=e.split(s.hx)[0]).trim()?"temp":e;const n=t&&t.type?t.type:".zip";this.zipname=(t.zipname?t.zipname:e)+n;await this.searchStorage(this.zipname)&&(this.zipname="1_"+this.zipname);const{filestream:a,streamhandle:l}=await this.createLocalStream(this.zipname);this.filestream=a,this.streamhandle=l;if(this.part=0,await this.initZip(),!this.jsScanDir){const{JsScanDir:e}=await i.e(162).then(i.bind(i,4162));this.jsScanDir=new e}this.jsScanDir.processFile=async(e,t)=>{this.acceptFile(e)?(this.callback=t,await this.processFile(e)):this.rejectFile(e,t)}}}async scanBrowse(e,t={}){const i=e instanceof FileList?Array.from(e):"directory"===e.kind?await Array.fromAsync(e.values()):Array.isArray(e)?e:[e];i[0].name;let n=e instanceof FileList?i[0].webkitRelativePath:null;n=n?n.split(s.hx):[""],n.length&&n.pop(),n=n.join(s.hx);const a=e instanceof FileList?n:"directory"===e.kind?e.name:"";await this.scanCommon(a,t),await this.jsScanDir.processEntries(i,a,(()=>{this.dirComplete()}))}async scanHandle(e,t={}){await this.scanCommon(e.name,t),!0===e.isDirectory?await this.jsScanDir.readDirectory(e,(()=>{this.dirComplete()})):!0===e.isFile&&await this.jsScanDir.processFile(e,(()=>{this.dirComplete()}))}dirComplete(){this.emit(this.eventnames.endreaddir,{name:this.eventnames.endreaddir})}addHandler(e){this.handlers.push(e)}async execHandler(){if(this.handlers.length>0){const e=this.handlers.shift();console.log("handler",e),await e()}}async gzipBigFile(e,t){if(console.log("gzipbigfilepath",t),null!==this.gzipped)return void await this.addHandler((async()=>{await this.gzipBigFile(e,t)}));this.dt=Date.now(),t=0===t.indexOf(s.hx)?t.substr(1):t;const i=e.name.slice(e.name.lastIndexOf(".")+1);if(a.has(i))this.gzipped=e,this.emit(this.eventnames.counter,{name:"zip",path:t,size:e.size}),this.emit(this.eventnames.complete,{name:this.eventnames.bigfile,bigfile:e.name,path:t});else{let i=e.name+".gz";this.emit(this.eventnames.complete,{name:this.eventnames.gzip,bigfile:e.name,path:t,size:e.size}),console.log(" gzipp ///////////////////////////////////////////////////",t);const{filestream:s,streamhandle:a}=await this.createLocalStream(i,{"application/gzip":[".gz"]});let l=0;const r=this,o=new n.JZ({level:6,filename:t});o.ondata=(i,n,o)=>{i?(console.log("gzip err",i),this.onError(this.eventnames.errorfile,{bigfile:e.name,path:t,size:e.size})):(a.write(n,{at:l}),l+=n.length,o&&(console.log("final BIGFILE%%%%%%%%%%%%%%%%%%%%"+r.eventnames.bigfile,t),console.log("timetogzzip",(Date.now()-r.dt)/1e3),a.close(),r.gzipped=s,r.emit(r.eventnames.counter,{name:"zip",path:t,size:e.size}),r.emit(r.eventnames.complete,{name:r.eventnames.bigfile,bigfile:e.name,path:t})))};const h=!1;await this.readFile(e,t,o,h)}}async partZip(){this.part+=1,this.emit(this.eventnames.complete,{name:this.eventnames.endzip,part:this.part})}async readFile(e,t,i,s=!0){const n=this,a=e.stream().getReader();for(;;){const{done:l,value:r}=await a.read();if(l){i.push(new Uint8Array(0),!0),!0===s&&n.emit(n.eventnames.counter,{name:"zip",path:t,size:i.size?i.size:e.size});break}i.push(r)}}async zipStream(e,t){const i=t.slice(t.lastIndexOf(".")+1),s=a.has(i)?new n.uZ(t):e.size>this.options.largefile?new n.hw(t,{level:6}):new n.D8(t,{level:6});this.zip.add(s),await this.readFile(e,t,s)}async addFileToZipStream(e,t,i=!0){!0===i&&this.emit(this.eventnames.counter,{name:"scan",path:t,size:e.size}),this.continue=null,e.size>=o?this.gzipBigFile(e,t):(this.sizetozip+=e.size,this.sizetozip>=o?(this.continue=async()=>{await this.zipStream(e,t)},this.partZip()):await this.zipStream(e,t))}acceptFile(e){const t=e.name,i=t.slice(t.lastIndexOf(".")+1);return l.includes(i)}rejectFile(e,t=null){const i=e.fullPath?e.fullPath:e.webkitRelativePath;this.counter.reject+=1,this.emit(this.eventnames.reject,{name:this.eventnames.reject,path:i}),null!==t&&t()}async processFile(e){const t=e.fullPath?e.fullPath:e.webkitRelativePath;e.file((async e=>{await this.addFileToZipStream(e,t)}))}onError(e,t=null){switch(t=t||{},e){case this.eventnames.init:t.name=this.eventnames.init;break;case this.eventnames.errorfile:console.log("errorfile",t);default:t.name=this.eventnames.follow}this.emit(this.eventnames.error,t)}async searchStorage(e){const t=await navigator.storage.getDirectory();for await(const[i,s]of t.entries())if(e===i)return!0;return!1}async cleanStorage(e=null){e=e||await navigator.storage.getDirectory();for await(const[t,i]of e.entries())try{await e.removeEntry(t),console.log(" Success remove storage ",t)}catch(e){console.log(" error remove storage "+t,e)}}async endFetch(e,t=!1){if(e.name=this.eventnames.terminate,this.continue)return this.streamhandle=await this.filestream.createWritable(),e.name=this.eventnames.follow,this.emit(this.eventnames.follow,e),void await this.initZip();if(e.hasOwnProperty("bigfile")&&!1!==e.bigfile){if(this.gzipped=null,this.handlers.length>0)return e.name=this.eventnames.follow,this.emit(this.eventnames.follow,e),console.log(" handlers to do",e),void(this.handlers.length>0&&await this.execHandler())}else this.zip=null;this.emit(this.eventnames.complete,e)}async sendChunk(e,t=0,i=0,s=o){console.log("send chunk ",this.gzipped);const n=await this.gzipped.getFile(),a=Math.min(t+s,n.size);if(a===n.size)this.sendZipFile(n,e,null,!0);else{const l=n.slice(t,a);l.name=i+"_"+n.name,this.sendZipfile(l,e,(()=>{i++,(t+=a)<=n.size&&this.sendChunk(e,t,i,s)}),!0)}return i}async getFile(e=null){e=null===e?this.filestream:e;return await e.getFile()}async sendZipFile(e,t,i=null,n=!1){const a={name:this.eventnames.pending,path:t};n&&(a.bigfile=e.name),this.emit(this.eventnames.complete,a);const l=new FormData;t=t+(t.slice(-1)===s.hx?"":s.hx)+e.name,l.append("path",t),l.append("file",e,e.name),this.part?l.append("part",this.part):null!==i&&l.append("ischunk",!0),fetch(this.options.uploadurl,{method:"POST",credentials:"include",body:l}).then((async e=>{console.log("response----------------------",e),console.log("callbackchunk-------------------------------",i),a.path=t,200===e.status?null!==i?await i():await this.endFetch(a):this.onError(this.eventnames.error,a)}))}}}}]);