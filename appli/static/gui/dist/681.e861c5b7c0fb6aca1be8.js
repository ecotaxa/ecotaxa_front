/*! For license information please see 681.e861c5b7c0fb6aca1be8.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[681],{681:(e,a,n)=>{n.a(e,(async(e,i)=>{try{n.d(a,{JsDirToZip:()=>u});var t=n(4860),o=n(9861),l=n(2438),r=n(8468),s=e([l]);l=(s.then?(await s)():s)[0];const c=new Set(["zip","gz","png","jpg","jpeg","pdf","doc","docx","ppt","pptx","xls","xlsx","heic","heif","7z","bz2","rar","gif","webp","webm","mp4","mov","mp3","aifc"]),p=".tsv,.png,.jpg, .jpeg,.zip,.gz,.7z,.bz2",d=1073741824;function u(e={}){const a={ready:"ready",follow:"follow",complete:"complete",endreaddir:"endreaddir",gzip:"gzip",endzip:"endzip",sendfile:"sendfile",bigfile:"bigfile",terminate:"terminate",pending:"pending",errorfile:"errorfile",counter:"counter",reject:"reject",message:"message",error:"error",init:"init"};let i,s;const u={uploadurl:"/gui/files/upload",largefile:d,accept:p.split(",")},f=(e={...u,...e}).listener?e.listener:m;Object.freeze(e);const m=(0,t.UP)();async function g(){s.pos=0,s.sizetozip=0,console.log("==================newzip"),s.zip=new o.qQ(((e,a,n)=>{if(e)return console.log("error",e),!1;s.streamhandle.write(a,{at:self.pos}),s.pos+=a.length,n&&(s.streamhandle.close(),console.log("final-----------------------------*******************************-",s.pos))})),function(e=null){const a=(e=null===e?s.zip:e).ondata;e.ondata=(n,i,t)=>{a(n,i,t),t&&(e.d=null,e.u.at(-1).d=null)}}(),s.follow&&await s.follow()}function w(e){if(!0===s.endreaddir&&!0===s.endcounter){const n=z(e,{name:a.endzip});l.j.emit(a.complete,n,f)}}function z(e,a={}){return e.hasOwnProperty("part")?a.part=e.part:s.part=0,e.hasOwnProperty("bigfile")&&(a.bigfile=e.bigfile),e.hasOwnProperty("path")&&(a.path=e.path),a}async function h(){navigator&&navigator.storage&&navigator.storage.estimate&&navigator.storage.estimate().then((e=>{const n=(e.usage/e.quota*100).toFixed(2),i=(0,t.Y2)(e.quota-e.usage);l.j.emit(a.message,{id:"quota",name:"console",message:"you've used "+n+"% of the available storage ("+i+")."},f)}))}async function y(e,a={"application/zip":[".zip"]}){const n=await navigator.storage.getDirectory(),i={types:[{description:"Temp file",accept:a}],create:!0},t=await n.getFileHandle(e,i),o=await t.createWritable();return{filestream:t,streamhandle:o}}async function b(e,o={}){if(s.endreaddir=!1,null===s.zip){e=""===(e=e.split(t.hx)[0]).trim()?"temp":e;const r=o&&o.type?o.type:".zip";s.zipname=(o.zipname?o.zipname:e)+r;await async function(e){const a=await navigator.storage.getDirectory();for await(const[n,i]of a.entries())if(e===n)return!0;return!1}(s.zipname)&&(s.zipname="1_"+s.zipname);const{filestream:c,streamhandle:u}=await y(s.zipname);s.filestream=c,s.streamhandle=u;if(s.part=0,await g(),!i){const{JsScanDir:e}=await n.e(162).then(n.bind(n,4162));i=e((async(e,n)=>{!function(e){const a=e.name,n=a.slice(a.lastIndexOf(".")+1);return p.includes(n)}(e)?function(e,n=null){const i=e.fullPath?e.fullPath:e.webkitRelativePath;s.counter.reject+=1,l.j.emit(a.reject,{name:a.reject,path:i},f),null!==n&&n()}(e,n):(s.callback=n,await async function(e){const n=e.fullPath?e.fullPath:e.webkitRelativePath;e.file((async e=>{await async function(e,n,i=!0){!0===i&&l.j.emit(a.counter,{name:"scan",path:n,size:e.size},m);s.follow=null,e.size>=d?v(e,n):(s.sizetozip+=e.size,s.sizetozip>=d?(s.follow=async()=>{await x(e,n)},async function(){s.part+=1,l.j.emit(a.complete,{name:a.endzip,part:s.part},f)}()):await x(e,n))}(e,n)}))}(e))}))}}}function j(){l.j.emit(a.endreaddir,{name:a.endreaddir},m)}async function v(e,n){if(null!==s.gzipped)return void await(i=async()=>{await v(e,n)},void s.handlers.push(i));var i;let r=Date.now();n=0===n.indexOf(t.hx)?n.substr(1):n;const p=e.name.slice(e.name.lastIndexOf(".")+1);if(c.has(p))s.gzipped=e,l.j.emit(a.counter,{name:"zip",path:n,size:e.size},m),l.j.emit(a.complete,{name:a.bigfile,bigfile:e.name,path:n},f);else{let i=e.name+".gz";l.j.emit(a.complete,{name:a.gzip,bigfile:e.name,path:n,size:e.size},f);const{filestream:t,streamhandle:c}=await y(i,{"application/gzip":[".gz"]});let p=0;const d=new o.JZ({level:6,filename:n});d.ondata=(i,o,d)=>{i?(console.log("gzip err",i),P(a.errorfile,{bigfile:e.name,path:n,size:e.size})):(c.write(o,{at:p}),p+=o.length,d&&(console.log("final BIGFILE%%%%%%%%%%%%%%%%%%%%"+a.bigfile,n),console.log("timetogzzip",(Date.now()-r)/1e3),c.close(),s.gzipped=t,l.j.emit(a.counter,{name:"zip",path:n,size:e.size},m),l.j.emit(a.complete,{name:a.bigfile,bigfile:e.name,path:n},f)))};const u=!1;await k(e,n,d,u)}}async function k(e,n,i,t=!0){const o=e.stream().getReader();for(;;){const{done:r,value:s}=await o.read();if(r){i.push(new Uint8Array(0),!0),!0===t&&l.j.emit(a.counter,{name:"zip",path:n,size:i.size?i.size:e.size},m);break}i.push(s)}}async function x(a,n){const i=n.slice(n.lastIndexOf(".")+1),t=c.has(i)?new o.uZ(n):a.size>e.largefile?new o.hw(n,{level:6}):new o.D8(n,{level:6});s.zip.add(t),await k(a,n,t)}function P(e,n=null){switch(n=n||{},e){case a.init:n.name=a.init;break;case a.errorfile:console.log("errorfile",n);default:n.name=a.follow}l.j.emit(a.error,n,f)}async function F(e,n=!1){if(e.name=a.terminate,s.follow)return s.streamhandle=await s.filestream.createWritable(),e.name=a.follow,l.j.emit(a.follow,e,f),void await g();if(e.hasOwnProperty("bigfile")&&!1!==e.bigfile){if(s.gzipped=null,s.handlers.length>0)return e.name=a.follow,l.j.emit(a.follow,e,f),console.log(" handlers to do",e),void(s.handlers.length>0&&await async function(){if(s.handlers.length>0){const e=s.handlers.shift();await e()}}())}else s.zip=null;l.j.emit(a.complete,e,f)}async function D(e,a=0,n=0,i=d){console.log("send chunk ",s.gzipped);const t=await s.gzipped.getFile(),o=Math.min(a+i,t.size);if(o===t.size)await O(t,e,null,!0);else{const l=t.slice(a,o);l.name=n+"_"+t.name,await sendZipfile(l,e,(async()=>{n++,(a+=o)<=t.size&&await D(e,a,n,i)}),!0)}return n}async function O(n,i,o=null,r=!1){const c={name:a.pending,path:i};r&&(c.bigfile=n.name),l.j.emit(a.complete,c,f);const p=new FormData;i=i+(i.slice(-1)===t.hx?"":t.hx)+n.name,p.append("path",i),p.append("file",n,n.name),s.part?p.append("part",s.part):null!==o&&p.append("ischunk",!0),fetch(e.uploadurl,{method:"POST",credentials:"include",body:p}).then((async e=>{console.log("response----------------------",e),console.log("callbackchunk-------------------------------",o),c.path=i,200===e.status?null!==o?(console.log("callbackchunk not null"),await o()):await F(c):P(a.error,c)}))}return s={zip:null,zipname:null,filestream:null,streamhandle:null,gzipped:null,sizetozip:0,part:0,follow:null,endcounter:!1,endreaddir:!1,callback:null,pos:0,counter:{scan:0,zip:0,reject:0},handlers:[]},l.j.on(a.init,(async e=>{0==(null!==s.zip||null!==s.follow||null!==s.gzipped||!0!==s.endreaddir)?(await async function(){s={zip:null,zipname:null,filestream:null,streamhandle:null,gzipped:null,sizetozip:0,part:0,follow:null,endcounter:!1,endreaddir:!1,callback:null,pos:0,counter:{scan:0,zip:0,reject:0},handlers:[]},await async function(){navigator&&navigator.storage&&navigator.storage.estimate?(await async function(e=null){e=e||await navigator.storage.getDirectory();for await(const[a,n]of e.entries())try{await e.removeEntry(a),console.log(" Success remove storage ",a)}catch(e){console.log(" error remove storage "+a,e)}}(),h()):l.j.emit(a.message,{name:"error",message:"no navigator storage"},m)}()}(),l.j.emit(a.complete,{name:a.ready},f),s.endreaddir=!1):console.log("partly finshed ",e)}),m),l.j.on(a.endzip,(e=>{!e.bigfile&&s.zip?s.zip.end():e.bigfile&&s.gzipped&&console.log("--gzipped end",s.gzipped),console.log("endzip%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");const n=z(e,{name:a.sendfile});l.j.emit(a.complete,n,f)}),m),l.j.on(a.sendfile,(async e=>{const a=e.bigfile?await s.gzipped.getFile():await async function(e=null){e=null===e?s.filestream:e;const a=await e.getFile();return a}();e.bigfile?D((e.path?e.path:"").replace(e.bigfile,"")):O(a,e.path?e.path:"",null)}),m),l.j.on(a.endreaddir,(e=>{s.endreaddir=!0,w(e)}),m),l.j.on(a.counter,(async e=>{s.endcounter=!1,s.counter[e.name]+=1,l.j.emit(a.counter,e,f),"zip"===e.name&&s.counter.scan===s.counter.zip&&(s.endcounter=!0,w(e)),"zip"===e.name&&s.callback&&await s.callback()}),m),{uuid:m,eventnames:a,scanBrowse:async function(e,a={}){const n=e instanceof FileList?Array.from(e):"directory"===e.kind?await Array.fromAsync(e.values()):Array.isArray(e)?e:[e];n[0].name;let o=e instanceof FileList?n[0].webkitRelativePath:null;o=o?o.split(t.hx):[""],o.length&&o.pop(),o=o.join(t.hx);const l=e instanceof FileList?o:"directory"===e.kind?e.name:"";await b(l,a),await i.processEntries(n,l,(()=>{j()}))},scanHandle:async function(e,a={}){await b(e.name,a),!0===e.isDirectory?await i.readDirectory(e,(()=>{j()})):!0===e.isFile&&await i.processFile(e,(()=>{j()}))},quotaEstimate:h,browserRequired:function(){const e=(0,r.o0)(),n={android:{chrome:109,opera:74,firefox:111,samsungbrowser:21,webview:109},ios:!1,other:{chrome:86,edge:86,opera:72,firefox:111}};let i=e.os.toLowerCase();i=i in["android","ios"]?i:"other";const t=e.name.toLowerCase(),o=parseInt(e.version.split(".")[0]);!1===(n[i]&&n[i][t]&&n[i][t]<=o)&&l.j.emit(a.message,{id:"browser",name:"browser",message:"your browser does not have a required functionnality. Please upgrade or use a valid browser and version :"+JSON.stringify(n).replaceAll('"',"")},f)}}}i()}catch(f){i(f)}}))}}]);