/*! For license information please see 249.0d05fae51316360f80c5.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[249],{6249:(e,i,t)=>{t.d(i,{JsDirToZip:()=>h});var s=t(7737),n=t(3778);const a=new Set(["zip","gz","png","jpg","jpeg","pdf","doc","docx","ppt","pptx","xls","xlsx","heic","heif","7z","bz2","rar","gif","webp","webm","mp4","mov","mp3","aifc"]),l=".tsv,.png,.jpg, .jpeg,.zip,.gz,.7z,.bz2";let o=null;const r=1073741824;class h{_events={};eventnames={ready:"ready",follow:"follow",endzip:"endzip",complete:"complete",endreaddir:"endreaddir",gzip:"gzipfile",sendfile:"sendfile",bigfile:"bigfile",terminate:"terminate",pending:"pending",getfile:"getzipfile",counter:"counter",message:"message",error:"error"};zip=null;zipname=null;filestream=null;streamhandle=null;gzipped=null;sizetozip=0;part=0;continue=null;constructor(e={}){if(o)return o;const i={uploadurl:"/gui/files/upload",largefile:4194304,accept:l.split(",")};return this.options={...i,...e},console.log("thisopts",this.options),this.init(),o=this,o}init(){(0,s.TG)(this),this.initStorage(),this.reset(),this.on(this.eventnames.ready,(e=>{e.bigfile||e.part||(console.log("reset terminate"),this.reset())}))}reset(){this.zip=null,this.zipname=null,this.filestream=null,this.streamhandle=null,this.gzipped=null,this.sizetozip=0,this.part=0,this.continue=null,console.log(" dirzip reset"),this.counter={scan:0,zip:0},this.initStorage()}async initZip(){const e=this;this.pos=0,this.sizetozip=0,console.log("==================newzip"),this.zip=new n.sZ(((i,t,s)=>{if(i)return console.log("error",i),!1;e.streamhandle.write(t,{at:e.pos}),e.pos+=t.length,s&&(e.streamhandle.close(),console.log("final-----------------------------*******************************-",e.pos))})),this.continue?await this.continue():(this.on(this.eventnames.endzip,(e=>{!e.bigfile&&this.zip?(this.zip.end(),console.log("zipend",this.zip),console.log("fstrem",this.filestream)):e.bigfile&&this.gzipped&&console.log("-------------------------gzipped end ",this.gzipped);const i={name:this.eventnames.sendfile};e.part?i.part=e.part:this.part=0,e.hasOwnProperty("bigfile")&&(i.bigfile=e.bigfile),e.hasOwnProperty("path")&&(i.path=e.path),console.log("endzip%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",e),this.emit(this.eventnames.complete,i)})),this.on(this.eventnames.sendfile,(async e=>{console.log("eventsendfile",e);let i=e.bigfile?await this.getFile(this.gzipped):await this.getFile();console.log("sendfile",i),this.sendZipFile(i,e.path?e.path:"",null,e.bigfile?e.bigfile:null)})),this.on(this.eventnames.bigfile,(e=>{console.log("onsendchunk",e),this.sendChunk(e.path?e.path:"")})),this.on(this.eventnames.endreaddir,(e=>{this.endreaddir=!0,e.hasOwnProperty("name")&&e.name===this.eventnames.endzip&&this.emit(this.eventnames.complete,{name:this.eventnames.endzip})})),this.on(this.eventnames.counter,(async e=>{this.counter[e.name]+=1,this.endreaddir&&"zip"===e.name&&this.counter.scan===this.counter.zip&&this.emit(this.eventnames.complete,{name:this.eventnames.endzip}),"zip"===e.name&&this.callback&&await this.callback()})))}async quotaEstimate(){navigator&&navigator.storage&&navigator.storage.estimate&&navigator.storage.estimate().then((e=>{const i=(e.usage/e.quota*100).toFixed(2),t=(0,s.VB)(e.quota-e.usage);this.emit(this.eventnames.message,{id:"quota",name:"console",message:"you've used "+i+"% of the available storage ("+t+")."})}))}async initStorage(){navigator&&navigator.storage&&navigator.storage.estimate?(await this.cleanStorage(),this.quotaEstimate()):this.emit(this.eventnames.message,{name:"error",message:"no navigator storage"})}async createLocalStream(e,i={"application/zip":[".zip"]}){const t=await navigator.storage.getDirectory(),s={types:[{description:"Temp file",accept:i}],create:!0},n=await t.getFileHandle(e,s),a=await n.createWritable();return{filestream:n,streamhandle:a}}async scanCommon(e,i={}){if(this.endreaddir=!1,null===this.zip){console.log("scancommmon zipname",e),e=""===(e=e.split(s.QX)[0]).trim()?"temp":e;const n=i&&i.type?i.type:".zip";this.zipname=(i.zipname?i.zipname:e)+n;await this.searchStorage(this.zipname)&&(this.zipname="1_"+this.zipname);const{filestream:a,streamhandle:l}=await this.createLocalStream(this.zipname);this.filestream=a,this.streamhandle=l;if(this.part=0,await this.initZip(),!this.jsScanDir){const{JsScanDir:e}=await t.e(284).then(t.bind(t,5614));this.jsScanDir=new e}this.jsScanDir.processFile=async(e,i)=>{this.acceptFile(e)?(this.callback=i,await this.processFile(e)):this.rejectFile(e)}}}async scanBrowse(e,i={}){console.log("pick",e);const t=e instanceof FileList?Array.from(e):"directory"===e.kind?await Array.fromAsync(e.values()):Array.isArray(e)?e:[e];console.log("entr"+typeof e,t[0]);t[0].name;let n=e instanceof FileList?t[0].webkitRelativePath:null;n=n?n.split(s.QX):[""],n.length&&n.pop(),n=n.join(s.QX);const a=e instanceof FileList?n:"directory"===e.kind?e.name:"";console.log("dirtozip^path",a),await this.scanCommon(a,i),await this.jsScanDir.processEntries(t,a,(()=>{this.dirComplete()}))}async scanHandle(e,i={}){await this.scanCommon(e.name,i),!0===e.isDirectory?await this.jsScanDir.readDirectory(e,(()=>{this.dirComplete()})):!0===e.isFile&&await this.jsScanDir.processFile(e,(()=>{this.dirComplete()}))}dirComplete(){console.log("direcomplete"),this.emit(this.eventnames.endreaddir,{name:this.eventnames.endzip})}async sendBigFile(e,i){console.log("sendbigfilepath",i),this.dt=Date.now(),i=0===i.indexOf("/")?i.substr(1):i;const t=e.name.slice(e.name.lastIndexOf(".")+1);if(a.has(t))this.gzipped=e,this.emit(this.eventnames.counter,{name:"zip",filepath:i,size:e.size}),this.emit(this.eventnames.complete,{name:this.eventnames.bigfile,bigfile:i});else{this.emit(this.eventnames.gzip,{name:this.eventnames.gzip,bigfile:i,size:e.size});let s=e.name.split(t);s.pop(),s=s.join(t)+"gz",console.log("bigfile ext="+t,s);const{filestream:a,streamhandle:l}=await this.createLocalStream(s,{"application/gzip":[".gz"]});let o=0;const r=this,h=new n._f({level:9,filename:i});h.ondata=(e,t)=>{t?(console.log("final BIGFILE%%%%%%%%%%%%%%%%%%%%"+r.eventnames.bigfile,i),r.emit(r.eventnames.complete,{name:r.eventnames.bigfile,bigfile:i}),l.close(),console.log("timetozip",(Date.now()-this.dt)/1e3),r.gzipped=a,console.log("big file *******************"+i,r.gzipped)):(l.write(e,{at:o}),o+=e.length)},await this.readFile(e,i,h)}}async partZip(){this.part+=1,this.emit(this.eventnames.complete,{name:this.eventnames.endzip,part:this.part})}async readFile(e,i,t){const s=this,n=e.stream().getReader();for(;;){const{done:a,value:l}=await n.read();if(a){t.push(new Uint8Array(0),!0),s.emit(s.eventnames.counter,{name:"zip",filepath:i,size:t.size?t.size:e.size});break}t.push(l)}}async zipStream(e,i){console.log("filepath",i);const t=i.slice(i.lastIndexOf(".")+1),s=a.has(t)?new n.Ud(i):e.size>this.options.largefile?new n.wL(i,{level:6}):new n.Tf(i,{level:6});this.zip.add(s),await this.readFile(e,i,s)}async addFileToZipStream(e,i){this.emit(this.eventnames.counter,{name:"scan",filepath:i,size:e.size}),this.continue=null,e.size>=r?await this.sendBigFile(e,i):(this.sizetozip+=e.size,this.sizetozip>=r?(this.continue=async()=>{await this.zipStream(e,i)},this.partZip()):await this.zipStream(e,i))}acceptFile(e){const i=e.name,t=i.slice(i.lastIndexOf(".")+1);return l.includes(t)}rejectFile(e){console.log("reject",e)}async processFile(e){const i=e.fullPath?e.fullPath:e.webkitRelativePath;e.file((async e=>{await this.addFileToZipStream(e,i)}))}onError(){this.cleanStorage(),this.emit(this.eventnames.error,{name:"reload"})}async searchStorage(e){const i=await navigator.storage.getDirectory();for await(const[t,s]of i.entries())if(e===t)return console.log("key",t),!0;return!1}async cleanStorage(e=null){}async endFetch(e,i=!1){if(e.name=this.eventnames.terminate,e.hasOwnProperty("bigfile")&&""!==e.bigfile&&e.bigfile)e.bigfile=this.gzipped.name,this.gzipped=null;else if(this.continue)return this.streamhandle=await this.filestream.createWritable(),this.emit(this.eventnames.follow),void await this.initZip();this.emit(this.eventnames.complete,e)}async sendChunk(e,i=0,t=0,s=r){console.log("send chunk ",this.gzipped),console.log("chunkpath",e);const n=this.gzipped?await this.getFile(this.gzipped):await this.getFile();console.log("file",n),(e=e.split("/")).pop(),e=e.join("/");const a=Math.min(i+s,n.size);if(console.log("end---",a),a===n.size)this.sendZipFile(n,e,null,!0);else{const l=n.slice(i,a);l.name=t+"_"+n.name,this.sendZipfile(l,e,(()=>{t++,(i+=a)<=n.size&&this.sendChunk(e,i,t,s)}),!0)}return t}async getFile(e=null){e=null===e?this.filestream:e;return await e.getFile()}async sendZipFile(e,i,t=null,n=!1){console.log("sendzipfile------------_______________________"+n,e);const a=n?{bigfile:e.name}:{};this.emit(this.eventnames.pending,a),console.log("callbackchunk---sendzip",t);const l=new FormData;l.append("path",i+(i.slice(-1)===s.QX?"":s.QX)+e.name),l.append("file",e,e.name),this.part?l.append("part",this.part):null!==t&&l.append("ischunk",!0),fetch(this.options.uploadurl,{method:"POST",credentials:"include",body:l}).then((async e=>{console.log("response----------------------",e),console.log("callbackchunk-------------------------------",t),a.path=i,200===e.status?null!==t?await t():await this.endFetch(a):console.log("error",e)}))}}}}]);