/*! For license information please see src_modules_js-tabs_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-tabs_js"],{"./src/modules/js-tabs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsTabs: () => (/* binding */ JsTabs)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.es.mjs\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n\n\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.shared = '[data-shared]';\n\nfunction createJsTabs() {\n  let togglewhat, toggledisable, toggleshared;\n\n  function applyTo(item) {\n    if (!item.jstabs) {\n      let btns = item.querySelectorAll(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tabcontrol);\n      if (btns.length === 0) {\n        btns = item.querySelectorAll(((item.dataset.selector) ? item.dataset.selector : 'legend'));\n\n      }\n      toggledisable = (item.dataset.toggledisable) ? true : false;\n      togglewhat = (item.dataset.togglewhat) ? item.dataset.togglewhat : null;\n      toggleshared = (item.dataset.toggleshared) ? true : false;\n      let l = 0;\n      btns.forEach((btn, index) => {\n        const target = (btn.dataset.target) ? item.querySelector('#' + btn.dataset.target) : btn.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tab);\n        if (!target) return;\n        const ev = (item.dataset.event) ? item.dataset.event : 'click';\n        btn.style.left = l + 'px';\n\n\n        l += parseInt(btn.offsetWidth) + 20;\n        btn.addEventListener(ev, (e) => {\n          if (e.currentTarget.disabled === true) {\n            e.preventDefault();\n            return;\n          }\n          const oldactive = item.dataset.selector ? target.parentElement.querySelector('.' + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active) : item.querySelector(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tab + '.' + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active);\n          if (oldactive !== null) {\n            oldactive.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active);\n            toggleTab(oldactive, false);\n          }\n          target.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active);\n          toggleTab(target, true);\n        });\n        if ((index === 0 && target.parentElement.querySelectorAll('.' + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active).length === 0) || target.classList.contains(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active)) {\n          target.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active);\n          toggleTab(target, true);\n        } else {\n          target.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active);\n          toggleTab(target, false);\n        }\n      });\n      const activeitem= item.querySelector(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tab,'.'+_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active);\n      if (activeitem) toggleTab(activeitem, true);\n      if (!item.dataset.toggle) toggleDisplayListener(item, btns);\n      item.jstabs = true;\n    }\n  }\n\n  function toggleTab(tab, show) {\n    let what = (togglewhat) ? document.getElementById(togglewhat) : null;\n    let tabcontents = tab.querySelectorAll(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tabcontent);\n    if (tabcontents.length === 0) tabcontents = [tab];\n    tabcontents.forEach(tabcontent => {\n      if (show === true) tabcontent.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n      else if (!tab.classList.contains(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.active)) tabcontent.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n      if (toggleshared) {\n            // for elements shared between tabs and displayed on tab activation\n            tab.querySelectorAll(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.shared).forEach(shared => {\n              const sharedcontent = tab.parentElement.querySelector('#' + shared.dataset.shared);\n              sharedcontent.parent = sharedcontent.parentElement;\n\n              if (show) {\n                sharedcontent.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n                shared.append(sharedcontent);\n                replaceLabels(shared, sharedcontent);\n              } else {\n                sharedcontent.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n                if (sharedcontent.parent) {\n                  sharedcontent.parent.append(sharedcontent);\n                  delete sharedcontent.parent;\n                }\n              }\n            });\n          }\n      if (toggledisable === true) {\n        tabcontent.querySelectorAll('input, select, button, textarea').forEach(el => {\n          if (show) {\n            el.disabled = false;\n            if (el.dataset.checked) {\n              el.checked = el.dataset.checked;\n              delete el.dataset.checked;\n            }\n          } else {\n            el.disabled = true;\n            if (el.checked) {\n              el.dataset.checked = el.checked;\n              el.removeAttribute('checked');\n            }\n          }\n        });\n        if (what) what.value = tabcontent.dataset.what;\n        if (show) {\n          const form = tab.closest('form');\n          if (tabcontent.dataset.path && form !== null) {\n            form.setAttribute('action', tabcontent.dataset.path);\n            // only used in export - to do  generic\n\n            window.history.replaceState({\n              additionalInformation: 'Updated by jsTabs'\n            }, document.title, window.location.origin + tabcontent.dataset.path + window.location.search);\n          }\n        }\n      }\n    });\n  }\n\n  function replaceLabels(shared, sharedcontent) {\n    // sort of a hack to set every option and label in import my files\n    const separator = '|';\n    const replaces = (shared.dataset.replaces) ? shared.dataset.replaces.split(separator) : null;\n    const values = (shared.dataset.values) ? shared.dataset.values.split(separator) : null;\n    if (replaces !== null && values !== null) {\n      replaces.forEach((rep, index) => {\n        let target = sharedcontent.querySelector(rep);\n        if (target) target.innerHTML = dompurify__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sanitize(values[index]);\n        else {\n          target = sharedcontent.querySelector('[data-' + rep + ']');\n          if (target) target.dataset[rep] = dompurify__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sanitize(values[index]);\n        }\n      });\n    }\n  }\n\n  function toggleDisplayListener(item, btns) {\n    // flat/ tabs display\n    const dismiss = item.querySelector('[data-dismiss=\"tabs\"]');\n    const toggle_tab = ((index, btn, show) => {\n      btn.disabled = show;\n      toggleTab(btn.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tab), show);\n    })\n    if (dismiss)  {\n    dismiss.addEventListener('click', (e) => {\n      const icon = item.querySelector('.tabs-display');\n      btns.forEach((btn, index) => toggle_tab(index, btn, (item.classList.contains(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.tabs.name))));\n      item.classList.toggle(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.component.tabs.name);\n      icon.classList.toggle('expand');\n      icon.classList.toggle('shrink');\n    });\n    if (item.dataset.expandall) dismiss.click();\n     }\n\n  }\n  return {\n    applyTo\n  }\n}\nconst JsTabs = createJsTabs();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/js-tabs.js\n")}}]);