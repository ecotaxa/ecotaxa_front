/*! For license information please see src_modules_js-taxomapping_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-taxomapping_js"],{"./src/modules/js-taxomapping.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TaxoMapping: () => (/* binding */ TaxoMapping)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n//from css tricks\n// used in tables about project stats details\n// used in tables imports when cells contains lots of data\n// apply mostly to details tags\n\nconst css = {\n  line: 'taxoline',\n  mapline: 'mapping-line',\n  cancel: 'cancel-line'\n};\nclass TaxoMapping {\n  // animation and specific display on accordions list / details tag open\n  numlines = 0;\n\n  constructor(line) {\n    if (!line instanceof HTMLElement) return;\n    if (!line.taxomapping) {\n      const keepname = (line.dataset.name) ? line.dataset.name : null;\n      if (keepname === null) return null;\n      this.keepname = keepname;\n      this.init(line);\n      line.taxomapping = this;\n\n    }\n    return line.taxomapping;\n  }\n\n\n  init(line) {\n    if (line.dataset.addline) {\n      let controls = {};\n      ['select', 'replace'].forEach(selector => {\n        controls[selector] = line.querySelector('[name=\"item-' + selector + '\"]');\n      });\n      this.linecontrols = controls;\n      controls = null;\n      let btn = line.querySelector('.' + line.dataset.addline);\n      btn = (btn === null) ? this.createBtn(line) : btn;\n      btn.addEventListener('click', (e) => {\n        this.addLine(line);\n      });\n      this.btn = btn;\n    }\n    this.beforeSubmit(line);\n  }\n  createBtn(line) {\n    const btn = document.createElement('div');\n    btn.classList.add(line.dataset.addline);\n    btn.insertAdjacentHTML('afterbegin', `<i class=\"icon icon-plus-sm block mx-auto\"></i>`);\n    btn.textContent = (line.dataset.addtext) ? dompurify__WEBPACK_IMPORTED_MODULE_0___default()(line.dataset.addtext).sanitize() : 'Add';\n    line.append(btn);\n    return btn;\n  }\n  addLine(line) {\n\n    // verify values not \"\" for select and replace inputs\n    let cando = true;\n    Object.values(this.linecontrols).forEach(input => {\n      console.log('inputvalue', new String(input.value))\n      const inputvalue = new String(input.value);\n      cando = cando && (inputvalue.length > 0);\n    });\n    console.log('cando', cando)\n    if (cando === false) {\n      this.btn.dataset.title = (line.dataset.notselected) ? line.dataset.notselected : 'select values to replace';\n      return;\n    } else if (this.btn.dataset.title) delete this.btn.dataset.title;\n    const newline = document.createElement('div');\n    newline.classList.add(css.line);\n    newline.classList.add('pb-2');\n    this.numlines++;\n\n    Object.values(this.linecontrols).forEach(input => {\n      const keep = document.createElement('div');\n      keep.classList.add(css.mapline);\n      keep.classList.add('mr-2');\n      if (input.tomselect) {\n        input = line.querySelector('.ts-control > div');\n        keep.dataset.value = input.dataset.value;\n        keep.textContent = input.textContent;\n        keep.dataset.replace = this.numlines;\n        input.dataset.value = \"\";\n        input.textContent = \"\";\n      } else {\n        keep.dataset.value = input.options[input.selectedIndex].value;\n        keep.textContent = input.options[input.selectedIndex].text;\n        newline.dataset.index = input.selectedIndex;\n        keep.dataset.select = this.numlines;\n        input.options[input.selectedIndex].disabled = true;\n        input.selectedIndex = -1;\n      }\n      input.parentElement.insertBefore(keep, input);\n      newline.append(keep);\n    });\n    this.btnCancel(newline, (line.dataset.cancel) ? line.dataset.cancel : 'cancel');\n    line.parentElement.insertBefore(newline, line);\n  }\n\n  btnCancel(item, text) {\n    const cancel = document.createElement('div');\n    cancel.id = 'cancel_' + this.numlines;\n    cancel.classList.add(css.cancel);\n    ['action', 'name'].forEach(data => {\n      delete cancel.dataset[data];\n    });\n    item.append(cancel);\n    cancel.insertAdjacentHTML('afterbegin', `<i class=\"icon icon-cancel absolute centered\"></i>`);\n    cancel.addEventListener('click', (e) => {\n      this.linecontrols.select.options[item.dataset.index].disabled = false;\n      item.remove();\n    });\n  }\n\n  beforeSubmit(item) {\n    const form = item.closest('form');\n    if (form === null) return;\n    const format_mapping_field = async () => {\n      const keephidden = document.createElement('input');\n      keephidden.type = 'hidden';\n      keephidden.name = this.keepname;\n      const mapping = {};\n      form.querySelectorAll('[data-select]').forEach(el => {\n        const replace = el.parentElement.querySelector('[data-replace=\"' + el.dataset.select + '\"]');\n        if (replace !== null) mapping[el.dataset.value] = replace.dataset.value;\n      });\n      keephidden.value = JSON.stringify(mapping);\n      form.append(keephidden);\n      return true;\n    };\n\n    if (form.formsubmit) {\n      form.formsubmit.addHandler(format_mapping_field);\n    } else form.addEventListener('submit', (e) => {\n      format_mapping_field();\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9qcy10YXhvbWFwcGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGdEQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9qcy10YXhvbWFwcGluZy5qcz9iYTUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vZnJvbSBjc3MgdHJpY2tzXG4vLyB1c2VkIGluIHRhYmxlcyBhYm91dCBwcm9qZWN0IHN0YXRzIGRldGFpbHNcbi8vIHVzZWQgaW4gdGFibGVzIGltcG9ydHMgd2hlbiBjZWxscyBjb250YWlucyBsb3RzIG9mIGRhdGFcbi8vIGFwcGx5IG1vc3RseSB0byBkZXRhaWxzIHRhZ3NcbmltcG9ydCBET01QdXJpZnkgZnJvbSAnZG9tcHVyaWZ5JztcbmNvbnN0IGNzcyA9IHtcbiAgbGluZTogJ3RheG9saW5lJyxcbiAgbWFwbGluZTogJ21hcHBpbmctbGluZScsXG4gIGNhbmNlbDogJ2NhbmNlbC1saW5lJ1xufTtcbmV4cG9ydCBjbGFzcyBUYXhvTWFwcGluZyB7XG4gIC8vIGFuaW1hdGlvbiBhbmQgc3BlY2lmaWMgZGlzcGxheSBvbiBhY2NvcmRpb25zIGxpc3QgLyBkZXRhaWxzIHRhZyBvcGVuXG4gIG51bWxpbmVzID0gMDtcblxuICBjb25zdHJ1Y3RvcihsaW5lKSB7XG4gICAgaWYgKCFsaW5lIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHJldHVybjtcbiAgICBpZiAoIWxpbmUudGF4b21hcHBpbmcpIHtcbiAgICAgIGNvbnN0IGtlZXBuYW1lID0gKGxpbmUuZGF0YXNldC5uYW1lKSA/IGxpbmUuZGF0YXNldC5uYW1lIDogbnVsbDtcbiAgICAgIGlmIChrZWVwbmFtZSA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgICB0aGlzLmtlZXBuYW1lID0ga2VlcG5hbWU7XG4gICAgICB0aGlzLmluaXQobGluZSk7XG4gICAgICBsaW5lLnRheG9tYXBwaW5nID0gdGhpcztcblxuICAgIH1cbiAgICByZXR1cm4gbGluZS50YXhvbWFwcGluZztcbiAgfVxuXG5cbiAgaW5pdChsaW5lKSB7XG4gICAgaWYgKGxpbmUuZGF0YXNldC5hZGRsaW5lKSB7XG4gICAgICBsZXQgY29udHJvbHMgPSB7fTtcbiAgICAgIFsnc2VsZWN0JywgJ3JlcGxhY2UnXS5mb3JFYWNoKHNlbGVjdG9yID0+IHtcbiAgICAgICAgY29udHJvbHNbc2VsZWN0b3JdID0gbGluZS5xdWVyeVNlbGVjdG9yKCdbbmFtZT1cIml0ZW0tJyArIHNlbGVjdG9yICsgJ1wiXScpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmxpbmVjb250cm9scyA9IGNvbnRyb2xzO1xuICAgICAgY29udHJvbHMgPSBudWxsO1xuICAgICAgbGV0IGJ0biA9IGxpbmUucXVlcnlTZWxlY3RvcignLicgKyBsaW5lLmRhdGFzZXQuYWRkbGluZSk7XG4gICAgICBidG4gPSAoYnRuID09PSBudWxsKSA/IHRoaXMuY3JlYXRlQnRuKGxpbmUpIDogYnRuO1xuICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgdGhpcy5hZGRMaW5lKGxpbmUpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmJ0biA9IGJ0bjtcbiAgICB9XG4gICAgdGhpcy5iZWZvcmVTdWJtaXQobGluZSk7XG4gIH1cbiAgY3JlYXRlQnRuKGxpbmUpIHtcbiAgICBjb25zdCBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBidG4uY2xhc3NMaXN0LmFkZChsaW5lLmRhdGFzZXQuYWRkbGluZSk7XG4gICAgYnRuLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsIGA8aSBjbGFzcz1cImljb24gaWNvbi1wbHVzLXNtIGJsb2NrIG14LWF1dG9cIj48L2k+YCk7XG4gICAgYnRuLnRleHRDb250ZW50ID0gKGxpbmUuZGF0YXNldC5hZGR0ZXh0KSA/IERPTVB1cmlmeShsaW5lLmRhdGFzZXQuYWRkdGV4dCkuc2FuaXRpemUoKSA6ICdBZGQnO1xuICAgIGxpbmUuYXBwZW5kKGJ0bik7XG4gICAgcmV0dXJuIGJ0bjtcbiAgfVxuICBhZGRMaW5lKGxpbmUpIHtcblxuICAgIC8vIHZlcmlmeSB2YWx1ZXMgbm90IFwiXCIgZm9yIHNlbGVjdCBhbmQgcmVwbGFjZSBpbnB1dHNcbiAgICBsZXQgY2FuZG8gPSB0cnVlO1xuICAgIE9iamVjdC52YWx1ZXModGhpcy5saW5lY29udHJvbHMpLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ2lucHV0dmFsdWUnLCBuZXcgU3RyaW5nKGlucHV0LnZhbHVlKSlcbiAgICAgIGNvbnN0IGlucHV0dmFsdWUgPSBuZXcgU3RyaW5nKGlucHV0LnZhbHVlKTtcbiAgICAgIGNhbmRvID0gY2FuZG8gJiYgKGlucHV0dmFsdWUubGVuZ3RoID4gMCk7XG4gICAgfSk7XG4gICAgY29uc29sZS5sb2coJ2NhbmRvJywgY2FuZG8pXG4gICAgaWYgKGNhbmRvID09PSBmYWxzZSkge1xuICAgICAgdGhpcy5idG4uZGF0YXNldC50aXRsZSA9IChsaW5lLmRhdGFzZXQubm90c2VsZWN0ZWQpID8gbGluZS5kYXRhc2V0Lm5vdHNlbGVjdGVkIDogJ3NlbGVjdCB2YWx1ZXMgdG8gcmVwbGFjZSc7XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmICh0aGlzLmJ0bi5kYXRhc2V0LnRpdGxlKSBkZWxldGUgdGhpcy5idG4uZGF0YXNldC50aXRsZTtcbiAgICBjb25zdCBuZXdsaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbmV3bGluZS5jbGFzc0xpc3QuYWRkKGNzcy5saW5lKTtcbiAgICBuZXdsaW5lLmNsYXNzTGlzdC5hZGQoJ3BiLTInKTtcbiAgICB0aGlzLm51bWxpbmVzKys7XG5cbiAgICBPYmplY3QudmFsdWVzKHRoaXMubGluZWNvbnRyb2xzKS5mb3JFYWNoKGlucHV0ID0+IHtcbiAgICAgIGNvbnN0IGtlZXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGtlZXAuY2xhc3NMaXN0LmFkZChjc3MubWFwbGluZSk7XG4gICAgICBrZWVwLmNsYXNzTGlzdC5hZGQoJ21yLTInKTtcbiAgICAgIGlmIChpbnB1dC50b21zZWxlY3QpIHtcbiAgICAgICAgaW5wdXQgPSBsaW5lLnF1ZXJ5U2VsZWN0b3IoJy50cy1jb250cm9sID4gZGl2Jyk7XG4gICAgICAgIGtlZXAuZGF0YXNldC52YWx1ZSA9IGlucHV0LmRhdGFzZXQudmFsdWU7XG4gICAgICAgIGtlZXAudGV4dENvbnRlbnQgPSBpbnB1dC50ZXh0Q29udGVudDtcbiAgICAgICAga2VlcC5kYXRhc2V0LnJlcGxhY2UgPSB0aGlzLm51bWxpbmVzO1xuICAgICAgICBpbnB1dC5kYXRhc2V0LnZhbHVlID0gXCJcIjtcbiAgICAgICAgaW5wdXQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAga2VlcC5kYXRhc2V0LnZhbHVlID0gaW5wdXQub3B0aW9uc1tpbnB1dC5zZWxlY3RlZEluZGV4XS52YWx1ZTtcbiAgICAgICAga2VlcC50ZXh0Q29udGVudCA9IGlucHV0Lm9wdGlvbnNbaW5wdXQuc2VsZWN0ZWRJbmRleF0udGV4dDtcbiAgICAgICAgbmV3bGluZS5kYXRhc2V0LmluZGV4ID0gaW5wdXQuc2VsZWN0ZWRJbmRleDtcbiAgICAgICAga2VlcC5kYXRhc2V0LnNlbGVjdCA9IHRoaXMubnVtbGluZXM7XG4gICAgICAgIGlucHV0Lm9wdGlvbnNbaW5wdXQuc2VsZWN0ZWRJbmRleF0uZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICBpbnB1dC5zZWxlY3RlZEluZGV4ID0gLTE7XG4gICAgICB9XG4gICAgICBpbnB1dC5wYXJlbnRFbGVtZW50Lmluc2VydEJlZm9yZShrZWVwLCBpbnB1dCk7XG4gICAgICBuZXdsaW5lLmFwcGVuZChrZWVwKTtcbiAgICB9KTtcbiAgICB0aGlzLmJ0bkNhbmNlbChuZXdsaW5lLCAobGluZS5kYXRhc2V0LmNhbmNlbCkgPyBsaW5lLmRhdGFzZXQuY2FuY2VsIDogJ2NhbmNlbCcpO1xuICAgIGxpbmUucGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUobmV3bGluZSwgbGluZSk7XG4gIH1cblxuICBidG5DYW5jZWwoaXRlbSwgdGV4dCkge1xuICAgIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNhbmNlbC5pZCA9ICdjYW5jZWxfJyArIHRoaXMubnVtbGluZXM7XG4gICAgY2FuY2VsLmNsYXNzTGlzdC5hZGQoY3NzLmNhbmNlbCk7XG4gICAgWydhY3Rpb24nLCAnbmFtZSddLmZvckVhY2goZGF0YSA9PiB7XG4gICAgICBkZWxldGUgY2FuY2VsLmRhdGFzZXRbZGF0YV07XG4gICAgfSk7XG4gICAgaXRlbS5hcHBlbmQoY2FuY2VsKTtcbiAgICBjYW5jZWwuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgYDxpIGNsYXNzPVwiaWNvbiBpY29uLWNhbmNlbCBhYnNvbHV0ZSBjZW50ZXJlZFwiPjwvaT5gKTtcbiAgICBjYW5jZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgdGhpcy5saW5lY29udHJvbHMuc2VsZWN0Lm9wdGlvbnNbaXRlbS5kYXRhc2V0LmluZGV4XS5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgaXRlbS5yZW1vdmUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGJlZm9yZVN1Ym1pdChpdGVtKSB7XG4gICAgY29uc3QgZm9ybSA9IGl0ZW0uY2xvc2VzdCgnZm9ybScpO1xuICAgIGlmIChmb3JtID09PSBudWxsKSByZXR1cm47XG4gICAgY29uc3QgZm9ybWF0X21hcHBpbmdfZmllbGQgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCBrZWVwaGlkZGVuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgIGtlZXBoaWRkZW4udHlwZSA9ICdoaWRkZW4nO1xuICAgICAga2VlcGhpZGRlbi5uYW1lID0gdGhpcy5rZWVwbmFtZTtcbiAgICAgIGNvbnN0IG1hcHBpbmcgPSB7fTtcbiAgICAgIGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc2VsZWN0XScpLmZvckVhY2goZWwgPT4ge1xuICAgICAgICBjb25zdCByZXBsYWNlID0gZWwucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1yZXBsYWNlPVwiJyArIGVsLmRhdGFzZXQuc2VsZWN0ICsgJ1wiXScpO1xuICAgICAgICBpZiAocmVwbGFjZSAhPT0gbnVsbCkgbWFwcGluZ1tlbC5kYXRhc2V0LnZhbHVlXSA9IHJlcGxhY2UuZGF0YXNldC52YWx1ZTtcbiAgICAgIH0pO1xuICAgICAga2VlcGhpZGRlbi52YWx1ZSA9IEpTT04uc3RyaW5naWZ5KG1hcHBpbmcpO1xuICAgICAgZm9ybS5hcHBlbmQoa2VlcGhpZGRlbik7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuXG4gICAgaWYgKGZvcm0uZm9ybXN1Ym1pdCkge1xuICAgICAgZm9ybS5mb3Jtc3VibWl0LmFkZEhhbmRsZXIoZm9ybWF0X21hcHBpbmdfZmllbGQpO1xuICAgIH0gZWxzZSBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XG4gICAgICBmb3JtYXRfbWFwcGluZ19maWVsZCgpO1xuICAgIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/js-taxomapping.js\n")}}]);