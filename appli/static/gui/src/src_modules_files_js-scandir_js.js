/*! For license information please see src_modules_files_js-scandir_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_files_js-scandir_js"],{"./src/modules/files/js-scandir.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsScanDir: () => (/* binding */ JsScanDir)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/utils.js */ \"./src/modules/utils.js\");\n\nlet instance = null;\n\nclass JsScanDir {\n  _events = {};\n  eventnames = {\n    complete: 'complete',\n    processed: 'file.processed',\n    error: 'file.error',\n  }\n  nextaction;\n  constructor() {\n    if (instance) return instance;\n    this.init();\n    instance = this;\n    return instance;\n  }\n\n  init(container) {\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    this.on(this.eventnames.error, (e) => {\n      console.log('scandir receive error message', e)\n    })\n    this.on(this.eventnames.processed, async (e) => {\n      console.log('e', e)\n    })\n  }\n\n  async processFile(entry, callback = null) {\n    console.log('process scandir', entry)\n    if (callback) await callback();\n  }\n\n  stopOnError(err) {\n    console.log('err', err);\n  }\n  fileType(data) {\n    const mime_type = (signature) => {\n      switch (signature) {\n        case '89504E47':\n          return 'image/png';\n        case '47494638':\n          return 'image/gif';\n        case '25504446':\n          return 'application/pdf';\n        case 'FFD8FFDB':\n        case 'FFD8FFE0':\n        case 'FFD8FFE1':\n          return 'image/jpeg';\n        case '504B0304':\n          return 'application/zip';\n        case 'EFBBBF22':\n          return 'text/tsv'; //'text/tab-separated-values';\n        default:\n          console.log('unknownsign', signature)\n          return 'unknown';\n      }\n    }\n    const uint = new Uint8Array(data);\n    let bytes = []\n    for (let i = 0; i < 4; i++) {\n      bytes.push(uint[i].toString(16))\n    }\n    data = bytes.join('').toUpperCase();\n    return {\n      input: uint,\n      mimetype: mime_type(data)\n    };\n  }\n\n\n  async readDirectory(dir, oncomplete) {\n    const self = this;\n    let errored = false;\n    let direntries = [];\n    const on_error = onerror ? onerror : (err) => {\n      console.log('on_error', err)\n      if (!errored) {\n        errored = true;\n      }\n    };\n    const reader = dir.createReader();\n    const on_read = async function(ents) {\n      if (ents.length && !errored) {\n        direntries = [...direntries, ...ents];\n        await reader.readEntries(on_read, on_error);\n      } else if (!errored) {\n        const complete = async function() {\n          if (oncomplete && direntries.length === 0) {\n            oncomplete();\n          } else {\n            const entry = direntries.shift();\n            if (entry.isDirectory) await self.readDirectory(entry, complete);\n            else await self.processFile(entry, complete);\n          }\n        }\n        await complete();\n      } else {\n        console.log('treat error readdir');\n      }\n    }\n    await reader.readEntries(on_read, on_error);\n  }\n\n  async processEntries(entries, path, oncomplete) {\n    // showDirectoryPicker\n    const self = this;\n    const complete = async () => {\n      if (entries.length) {\n        const entry = await entries.shift();\n        const nestedpath = `${path}/${entry.name}`;\n        const kind = (entry.kind) ? entry.kind : (entry instanceof File) ? \"file\" : \"directory\";\n        if (kind === \"file\") {\n          if (!entry.webkitRelativePath) Object.defineProperty(entry, \"webkitRelativePath\", {\n            configurable: true,\n            enumerable: true,\n            get: () => nestedpath,\n          });\n          if (entry instanceof File) entry.file = async (func) => {\n            await func(entry, nestedpath);\n          }\n          else entry.file = async (func) => {\n            entry.getFile().then(async file => {\n              await func(file, nestedpath);\n            });\n          }\n          await self.processFile(entry, complete);\n        } else if (kind === \"directory\") {\n          const direntries = await Array.fromAsync(entry.values());\n          await self.processEntries(direntries, nestedpath, complete);\n        }\n      } else if (oncomplete) oncomplete();\n    }\n    await complete();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9maWxlcy9qcy1zY2FuZGlyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRWdDO0FBQ2hDOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLG9FQUFpQjtBQUNyQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixLQUFLLEdBQUcsV0FBVztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL2ZpbGVzL2pzLXNjYW5kaXIuanM/OTIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhZGRfY3VzdG9tX2V2ZW50c1xufSBmcm9tICcuLi8uLi9tb2R1bGVzL3V0aWxzLmpzJztcbmxldCBpbnN0YW5jZSA9IG51bGw7XG5cbmV4cG9ydCBjbGFzcyBKc1NjYW5EaXIge1xuICBfZXZlbnRzID0ge307XG4gIGV2ZW50bmFtZXMgPSB7XG4gICAgY29tcGxldGU6ICdjb21wbGV0ZScsXG4gICAgcHJvY2Vzc2VkOiAnZmlsZS5wcm9jZXNzZWQnLFxuICAgIGVycm9yOiAnZmlsZS5lcnJvcicsXG4gIH1cbiAgbmV4dGFjdGlvbjtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKGluc3RhbmNlKSByZXR1cm4gaW5zdGFuY2U7XG4gICAgdGhpcy5pbml0KCk7XG4gICAgaW5zdGFuY2UgPSB0aGlzO1xuICAgIHJldHVybiBpbnN0YW5jZTtcbiAgfVxuXG4gIGluaXQoY29udGFpbmVyKSB7XG4gICAgYWRkX2N1c3RvbV9ldmVudHModGhpcyk7XG4gICAgdGhpcy5vbih0aGlzLmV2ZW50bmFtZXMuZXJyb3IsIChlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnc2NhbmRpciByZWNlaXZlIGVycm9yIG1lc3NhZ2UnLCBlKVxuICAgIH0pXG4gICAgdGhpcy5vbih0aGlzLmV2ZW50bmFtZXMucHJvY2Vzc2VkLCBhc3luYyAoZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ2UnLCBlKVxuICAgIH0pXG4gIH1cblxuICBhc3luYyBwcm9jZXNzRmlsZShlbnRyeSwgY2FsbGJhY2sgPSBudWxsKSB7XG4gICAgY29uc29sZS5sb2coJ3Byb2Nlc3Mgc2NhbmRpcicsIGVudHJ5KVxuICAgIGlmIChjYWxsYmFjaykgYXdhaXQgY2FsbGJhY2soKTtcbiAgfVxuXG4gIHN0b3BPbkVycm9yKGVycikge1xuICAgIGNvbnNvbGUubG9nKCdlcnInLCBlcnIpO1xuICB9XG4gIGZpbGVUeXBlKGRhdGEpIHtcbiAgICBjb25zdCBtaW1lX3R5cGUgPSAoc2lnbmF0dXJlKSA9PiB7XG4gICAgICBzd2l0Y2ggKHNpZ25hdHVyZSkge1xuICAgICAgICBjYXNlICc4OTUwNEU0Nyc6XG4gICAgICAgICAgcmV0dXJuICdpbWFnZS9wbmcnO1xuICAgICAgICBjYXNlICc0NzQ5NDYzOCc6XG4gICAgICAgICAgcmV0dXJuICdpbWFnZS9naWYnO1xuICAgICAgICBjYXNlICcyNTUwNDQ0Nic6XG4gICAgICAgICAgcmV0dXJuICdhcHBsaWNhdGlvbi9wZGYnO1xuICAgICAgICBjYXNlICdGRkQ4RkZEQic6XG4gICAgICAgIGNhc2UgJ0ZGRDhGRkUwJzpcbiAgICAgICAgY2FzZSAnRkZEOEZGRTEnOlxuICAgICAgICAgIHJldHVybiAnaW1hZ2UvanBlZyc7XG4gICAgICAgIGNhc2UgJzUwNEIwMzA0JzpcbiAgICAgICAgICByZXR1cm4gJ2FwcGxpY2F0aW9uL3ppcCc7XG4gICAgICAgIGNhc2UgJ0VGQkJCRjIyJzpcbiAgICAgICAgICByZXR1cm4gJ3RleHQvdHN2JzsgLy8ndGV4dC90YWItc2VwYXJhdGVkLXZhbHVlcyc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgY29uc29sZS5sb2coJ3Vua25vd25zaWduJywgc2lnbmF0dXJlKVxuICAgICAgICAgIHJldHVybiAndW5rbm93bic7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHVpbnQgPSBuZXcgVWludDhBcnJheShkYXRhKTtcbiAgICBsZXQgYnl0ZXMgPSBbXVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICBieXRlcy5wdXNoKHVpbnRbaV0udG9TdHJpbmcoMTYpKVxuICAgIH1cbiAgICBkYXRhID0gYnl0ZXMuam9pbignJykudG9VcHBlckNhc2UoKTtcbiAgICByZXR1cm4ge1xuICAgICAgaW5wdXQ6IHVpbnQsXG4gICAgICBtaW1ldHlwZTogbWltZV90eXBlKGRhdGEpXG4gICAgfTtcbiAgfVxuXG5cbiAgYXN5bmMgcmVhZERpcmVjdG9yeShkaXIsIG9uY29tcGxldGUpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBsZXQgZXJyb3JlZCA9IGZhbHNlO1xuICAgIGxldCBkaXJlbnRyaWVzID0gW107XG4gICAgY29uc3Qgb25fZXJyb3IgPSBvbmVycm9yID8gb25lcnJvciA6IChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdvbl9lcnJvcicsIGVycilcbiAgICAgIGlmICghZXJyb3JlZCkge1xuICAgICAgICBlcnJvcmVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHJlYWRlciA9IGRpci5jcmVhdGVSZWFkZXIoKTtcbiAgICBjb25zdCBvbl9yZWFkID0gYXN5bmMgZnVuY3Rpb24oZW50cykge1xuICAgICAgaWYgKGVudHMubGVuZ3RoICYmICFlcnJvcmVkKSB7XG4gICAgICAgIGRpcmVudHJpZXMgPSBbLi4uZGlyZW50cmllcywgLi4uZW50c107XG4gICAgICAgIGF3YWl0IHJlYWRlci5yZWFkRW50cmllcyhvbl9yZWFkLCBvbl9lcnJvcik7XG4gICAgICB9IGVsc2UgaWYgKCFlcnJvcmVkKSB7XG4gICAgICAgIGNvbnN0IGNvbXBsZXRlID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKG9uY29tcGxldGUgJiYgZGlyZW50cmllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIG9uY29tcGxldGUoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZW50cnkgPSBkaXJlbnRyaWVzLnNoaWZ0KCk7XG4gICAgICAgICAgICBpZiAoZW50cnkuaXNEaXJlY3RvcnkpIGF3YWl0IHNlbGYucmVhZERpcmVjdG9yeShlbnRyeSwgY29tcGxldGUpO1xuICAgICAgICAgICAgZWxzZSBhd2FpdCBzZWxmLnByb2Nlc3NGaWxlKGVudHJ5LCBjb21wbGV0ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGF3YWl0IGNvbXBsZXRlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZygndHJlYXQgZXJyb3IgcmVhZGRpcicpO1xuICAgICAgfVxuICAgIH1cbiAgICBhd2FpdCByZWFkZXIucmVhZEVudHJpZXMob25fcmVhZCwgb25fZXJyb3IpO1xuICB9XG5cbiAgYXN5bmMgcHJvY2Vzc0VudHJpZXMoZW50cmllcywgcGF0aCwgb25jb21wbGV0ZSkge1xuICAgIC8vIHNob3dEaXJlY3RvcnlQaWNrZXJcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBjb25zdCBjb21wbGV0ZSA9IGFzeW5jICgpID0+IHtcbiAgICAgIGlmIChlbnRyaWVzLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBlbnRyeSA9IGF3YWl0IGVudHJpZXMuc2hpZnQoKTtcbiAgICAgICAgY29uc3QgbmVzdGVkcGF0aCA9IGAke3BhdGh9LyR7ZW50cnkubmFtZX1gO1xuICAgICAgICBjb25zdCBraW5kID0gKGVudHJ5LmtpbmQpID8gZW50cnkua2luZCA6IChlbnRyeSBpbnN0YW5jZW9mIEZpbGUpID8gXCJmaWxlXCIgOiBcImRpcmVjdG9yeVwiO1xuICAgICAgICBpZiAoa2luZCA9PT0gXCJmaWxlXCIpIHtcbiAgICAgICAgICBpZiAoIWVudHJ5LndlYmtpdFJlbGF0aXZlUGF0aCkgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVudHJ5LCBcIndlYmtpdFJlbGF0aXZlUGF0aFwiLCB7XG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgZ2V0OiAoKSA9PiBuZXN0ZWRwYXRoLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmIChlbnRyeSBpbnN0YW5jZW9mIEZpbGUpIGVudHJ5LmZpbGUgPSBhc3luYyAoZnVuYykgPT4ge1xuICAgICAgICAgICAgYXdhaXQgZnVuYyhlbnRyeSwgbmVzdGVkcGF0aCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2UgZW50cnkuZmlsZSA9IGFzeW5jIChmdW5jKSA9PiB7XG4gICAgICAgICAgICBlbnRyeS5nZXRGaWxlKCkudGhlbihhc3luYyBmaWxlID0+IHtcbiAgICAgICAgICAgICAgYXdhaXQgZnVuYyhmaWxlLCBuZXN0ZWRwYXRoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhd2FpdCBzZWxmLnByb2Nlc3NGaWxlKGVudHJ5LCBjb21wbGV0ZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoa2luZCA9PT0gXCJkaXJlY3RvcnlcIikge1xuICAgICAgICAgIGNvbnN0IGRpcmVudHJpZXMgPSBhd2FpdCBBcnJheS5mcm9tQXN5bmMoZW50cnkudmFsdWVzKCkpO1xuICAgICAgICAgIGF3YWl0IHNlbGYucHJvY2Vzc0VudHJpZXMoZGlyZW50cmllcywgbmVzdGVkcGF0aCwgY29tcGxldGUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG9uY29tcGxldGUpIG9uY29tcGxldGUoKTtcbiAgICB9XG4gICAgYXdhaXQgY29tcGxldGUoKTtcbiAgfVxuXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/files/js-scandir.js\n")}}]);