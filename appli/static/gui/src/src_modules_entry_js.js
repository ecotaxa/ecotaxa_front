/*! For license information please see src_modules_entry_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_entry_js"],{"./src/modules/entry.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Entry: () => (/* binding */ Entry),\n/* harmony export */   EntryControls: () => (/* binding */ EntryControls),\n/* harmony export */   entryOptions: () => (/* binding */ entryOptions),\n/* harmony export */   entryTypes: () => (/* binding */ entryTypes)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\n/* harmony import */ var _modules_tooltip_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/tooltip.js */ \"./src/modules/tooltip.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst toolTip=(0,_modules_tooltip_js__WEBPACK_IMPORTED_MODULE_4__.ToolTip)();\nconst entryTypes = Object.freeze({\n  node: \"N\",\n  branch: \"B\",\n  root: \"R\",\n  discard: \"D\",\n  discarded: \"X\"\n});\nconst entryOptions = {\n  selector: '[data-name]',\n  tags: {\n    tag: 'ul',\n    subtag: 'li',\n    label: 'span'\n  },\n  selectors: {\n    entries: '.entries'\n  },\n  draggables: [],\n  prefix: `entry`,\n  css: {\n    on: 'on',\n    entryN: 'entryN',\n    entryB: 'entryB',\n    entryR: 'entryR',\n    entryD: 'entryD',\n    editable: 'editable',\n    dragging: 'dragging',\n    dragover: 'dragover',\n    dragitem: 'dragitem',\n    selected: 'selected',\n  },\n  event: {\n    name: 'eventEntry'\n  }\n};\n\nclass Entry {\n  eventnames = {\n    attach: 'attach',\n    control: 'control'\n  };\n  name;\n  type;\n  label;\n  entries = [];\n  event = {\n    listener: window,\n    name: entryOptions.event.name,\n    init: {\n      bubbles: false,\n      cancelable: true\n    },\n  };\n\n\n  constructor(entry, options = {}) {\n    this.name = entry.name;\n    this.type = entry.type;\n    this.id = entry.id;\n    this.parent = entry.parent;\n    this.options = { ...entryOptions,\n      ...options\n    };\n    this.uuid = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.generate_uuid)();\n\n    this.eventnames = { ...this.eventnames,\n      ...this.options.eventnames\n    };\n    this.label = (options.label) ? options.label : null;\n    this.event = {\n      name: entryOptions.event.name,\n      listener: (options.listener) ? options.listener : this.uuid\n    };\n    this.init(entry);\n    return this;\n  }\n  init(entry) {\n    const dataset = {\n      name: this.name,\n      type: this.type\n    }\n    if (this.label !== null) dataset.label = this.label;\n    const el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.tags.subtag, {\n      draggable: this.isDraggable(),\n      dataset: dataset,\n    });\n    const cl = `${this.options.prefix}${this.type}`;\n    if([entryTypes.branch,entryTypes.root,entryTypes.discard].indexOf(this.type)>=0 ) this.icon= (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span',{class:'ico-'+cl},el);\n    this.label = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.tags.label, {\n      class: cl,\n      text: (entry.label) ? entry.label : entry.name\n    }, el);\n    this.container = el;\n    this.loaded = this.container.dataset.loaded = false;\n    this.initEvents();\n  }\n  initEvents() {this.addListeners();}\n  getParent() {\n    return this.parent;\n  }\n  getLabelElement() {\n    return this.label;\n  }\n  getParentElement() {\n    return this.container.parentElement.closest(this.options.selector);\n  }\n\n  getEntries() {\n    return this.entries;\n  }\n  getEntriesElement(create = false) {\n    let entries = this.container.querySelector(this.options.selectors.entries);\n    if (create && entries === null) {\n      return (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.tags.tag, {\n        class: this.options.selectors.entries.substr(1)\n      }, this.container);\n    }\n    return entries;\n  }\n\n  appendEntry(entry) {\n    if (entry.parent && entry.parent.entries) {\n      const n = entry.parent.entries.indexOf(entry);\n      delete entry.parent.entries[n];\n    }\n    entry.parent = this;\n    this.entries.push(entry);\n    const parent = this.getEntriesElement(true);\n    parent.append(entry.container);\n    return entry;\n  }\n  /* when extended */\n  newEntry(entry) {\n    return new Entry(entry, this.options);\n  }\n  /** extra attr , styles , types  */\n  setAttributes(entry) {\n    return entry;\n  }\n  extraStyles(entry) {}\n  setDiscard() {}\n  /*end extra attr , styles , types  */\n  createEntry(entry) {\n    this.options.css.icons = [];\n    entry = this.setAttributes(entry);\n    this.extraStyles(entry);\n    const new_entry = this.newEntry(entry, this.options);\n    this.appendEntry(new_entry);\n    new_entry.addListeners();\n    new_entry.setDiscard();\n    return new_entry;\n  }\n  findEntry(name) {\n    const entries = this.getEntries();\n    for (const entry of entries) {\n      if (entry.name === name) return entry;\n    }\n    return null;\n  }\n  //\n  createListEntries(listentries) {\n    const direntry = this.getEntriesElement(true);\n    listentries.forEach(entries => {\n      entries.forEach((entry) => {\n        const new_entry = this.createEntry(entry);\n      });\n    });\n  }\n  removeEntries() {\n    this.entries = [];\n    const el = this.getEntriesElement();\n    if (el) el.remove();\n  }\n  isActive() {\n    return this.active;\n  }\n\n  toggleActive() {\n    this.setOn(!this.active);\n    }\n\n  toggleOpen() {\n    this.setOpen(!this.open);\n  }\n\n  setSelected(selected = true) {\n    const cl = this.options.css.selected;\n    if (selected === true) this.container.classList.add(cl);\n    else this.container.classList.remove(cl);\n    this.setOn(selected);\n  }\n  setOn(on = true) {\n    this.active = on;\n  }\n\n  setOpen(on = true) {\n  const set_open= () => {\n    this.open = on;\n    if (on === true) this.container.classList.add(this.options.css.on);\n    else this.container.classList.remove(this.options.css.on);}\n    if (!this.loaded && on)  this.list().then(() => {\n        set_open();\n    }); else set_open();\n\n  }\n\n  setOff() {\n    this.setSelected(false);\n  }\n  getListeners() {\n    let listeners = [];\n    const self = this;\n    let func;\n      if (this.type === entryTypes.node) {\n        func = (e) => {\n          e.stopImmediatePropagation();\n          this.toggleActive();\n          this.emitEvent();\n        }\n      } else {\n      func = (e) => {\n      e.stopImmediatePropagation();\n      this.branchListener(() => {\n        this.emitEvent(this.eventnames.attach);\n      });\n    };}\n    listeners.unshift({\n      name: 'click',\n      target: 'label',\n      func: func\n    });\n    if ([entryTypes.root, entryTypes.branch, entryTypes.discard].indexOf(this.type)>=0) {\n          // display list only on  icon click\n    func = (e) => {\n          e.stopImmediatePropagation();\n          this.toggleOpen();\n     }\n    listeners.unshift({\n      name: 'click',\n      target: 'icon',\n      func: func\n    });\n    toolTip.applyTo(this.icon,'click to display children of this entry');}\n    toolTip.applyTo(this.label,'click to activate tools on this entry', () => {return (this.active!==true);});\n    return listeners;\n  }\n\n  isBranch(checkroot = true) {\n    const branchtypes = [entryTypes.branch];\n    if (checkroot && branchtypes.indexOf(entryTypes.root) < 0) branchtypes.push(entryTypes.root);\n    return (branchtypes.indexOf(this.type) >= 0)\n  }\n  isDiscarded() {\n    return ([entryTypes.discarded].indexOf(this.type) >= 0)\n  }\n  emitEvent(action = null, ev = null) {\n    const self = this;\n    const detail = {\n      entry: self,\n    }\n    if (action) detail.action = action;\n    if (ev) detail.event = ev;\n    else ev = this.eventnames.control;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.event.name, detail, this.event.listener);\n  }\n  moveHandlers() {\n    return [{\n      name: 'dragstart',\n      func: (e) => {\n        this.handleDragStart(e);\n      }\n    }, {\n      name: 'dragend',\n      func: (e) => {\n        this.handleDragEnd(e);\n      }\n    }];\n  }\n  dropHandlers() {\n    return [{\n      name: 'dragover',\n      func: (e) => {\n        this.handleDragOver(e);\n      }\n    }, {\n      name: 'drop',\n      func: (e) => {\n        this.handleDrop(e);\n      }\n    }];\n  }\n  branchListener(callback = null) {\n    this.toggleActive();\n    if (this.isActive()) this.branchActivate(callback).then(() => {\n      this.emitEvent();\n    });\n  }\n  addListeners() {\n    const listeners = this.getListeners();\n    for (const listener of listeners) {\n      const el = (listener.target === 'label') ? this.getLabelElement() : ((listener.target=='icon')? this.icon : this.container);\n      el.addEventListener(listener.name, listener.func);\n    }\n  }\n  removeListeners(listeners) {\n    for (const listener in listeners) {\n      const el = (listener.target === 'label') ? this.getLabelElement() : this.container;\n      el.removeEventListener(listener.label, listener.func);\n    }\n  }\n  destroy() {\n    this.container.remove();\n  }\n\n  handleDragStart(e) {\n    e.stopImmediatePropagation();\n    this.container.classList.add(this.options.css.dragging);\n    e.dataTransfer.effectAllowed = 'move';\n    this.emitEvent('dragstart', e);\n  }\n  handleDragOver(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.emitEvent('dragover', e);\n    return;\n  }\n  handleDragEnd(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.container.classList.remove(this.options.css.dragging);\n    this.emitEvent('dragend', e);\n  }\n  resetDragOver() {\n    document.querySelectorAll('.' + this.options.css.dragover).forEach(el => {\n      el.classList.remove(this.options.css.dragover);\n    });\n  }\n  handleDrop(e) {\n    /***/\n    e.stopImmediatePropagation();\n    this.emitEvent('drop', e);\n  }\n  setWait() {\n\n    this.loaded = this.container.dataset.loaded = false;\n    this.container.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.wait);\n  }\n  setLoaded() {\n    this.container.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.wait);\n    this.loaded = this.container.dataset.loaded = true;\n  }\n  findEntry(name, type) {\n    const entries = this.getEntries();\n    for (const entry of entries) {\n      if (entry.name === name && entry.type === type) return entry;\n    }\n    return null;\n  }\n\n  async branchActivate(callback = null) {\n   /* if (!this.loaded) this.list().then(() => {\n      if (callback) callback(this);\n    });\n    else */if (callback) callback(this);\n  }\n  getCurrentPath() {\n    const current_path = (entry, branchs = []) => {\n      if (entry.name) {\n        branchs.push(entry.name);\n        entry = entry.getParent();\n        if (entry !== null) return current_path(entry, branchs);\n      }\n      return branchs;\n    }\n    let branchs = current_path(this);\n    if (branchs.length > 1) branchs = branchs.reverse();\n    return branchs;\n  }\n  async jsonEntries(response) {\n    const json = await response.json();\n    return json;\n  }\n  isDraggable() {\n    return (this.options.draggables && this.options.draggables.indexOf(this.type) >= 0);\n  }\n  async list() {\n    if (this.type === entryTypes.node) return;\n    const url = (this.getUrl) ? this.getUrl() : null;\n    if (url === null) return;\n    const tag = this.options.tags.tag;\n    const subtag = this.options.tags.subtag;\n    this.setWait();\n    this.removeEntries();\n    const fetchoptions = {\n      headers: new Headers({\n        'content-type': 'application/json'\n      })\n    };\n    const response = await fetch(url, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)(fetchoptions));\n    if (response.ok) {\n      const entries = await this.jsonEntries(response);\n\n      if (entries.length) {\n        let nodes = [],\n          branches = [];\n        while (entries.length > 0) {\n          const entry = entries.shift();\n          if (entry.children === false) {\n            nodes.push(entry);\n          } else {\n            branches.push(entry);\n          }\n        };\n        nodes.sort((a, b) => (a.name < b.name));\n        branches.sort((a, b) => (a.name < b.name));\n        this.createListEntries([branches, nodes]);\n      }\n      this.setLoaded();\n    } else { console.log('alertbox')\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage({\n        parent: this.container,\n        type: \"error\",\n        content: response.error + ' ' + response.text\n      })\n    }\n\n  }\n  moveTo(dest) {\n    const branches = dest.getCurrentPath();\n    const type = (dest.type === entryTypes.discard) ? entryTypes.discarded : dest.type;\n    branches.pop();\n    branches.forEach((branch, index) => {\n      let subdest = dest.findEntry(branch, type);\n      if (subdest === null) {\n        subdest = dest.createEntry({\n          type: type,\n          name: branch\n        });\n      }\n      dest = subdest;\n    });\n    if (dest.findEntry(this.name, this.type) === null) {\n      this.from = this.parent;\n      dest.appendEntry(this);\n    }\n  }\n  unMove() {\n    if (this.from) {\n      this.moveTo(this.from);\n      this.from = null;\n    }\n  }\n}\nfunction EntryControls(container = document, options = {}) {\n  const eventnames = {\n    control: 'control',\n    error: 'error',\n  }\n  const controloptions = {\n    selectors: {\n      typentries: '[data-typentries]',\n      hascontrols: '.has-controls',\n    },\n    controls: {\n      list: {\n        action: 'list',\n        typentries: ['B', 'T']\n      },\n    },\n    css: {\n      entrycontrols: 'entrycontrols',\n      entries: '.entries',\n    }\n  };\n  let box, activentry = null;\n  options = Object.assign(controloptions, options);\n  init();\n\n  function init() {\n    createControls();\n    initEvents();\n  }\n\n  function addControl(control, position = null, action = null) {\n    const ctrl = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', (control.class)?{class:control.class}:{});\n    const l = box.children.length;\n    if (position === null || l < position + 1) box.append(ctrl);\n    else if (position === 0 || l === 0) box.prepend(ctrl);\n    else box.inserBefore(crtl, box.children[position]);\n    if (control.typentries) ctrl.dataset.typentries = control.typentries;\n    if (control.icon) {\n      const icon = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('i', {\n        class: ['icon', control.icon]\n      }, ctrl);\n      toolTip.applyTo(ctrl, control.text);\n    } else ctrl.textContent = control.text;\n    //add listener\n    const evt = (control.trigger) ? control.trigger : 'click';\n    const func = (e) => {\n      if (activentry === null) return;\n      const detail = {\n        callback: () => {\n          console.log('done', control.action);\n        }\n      }\n       if (typeof control.action==='function') {\n       control.action(activentry);\n      }\n      else if (!activentry[control.action] && action !== null) {\n        action(activentry);\n      } else if (activentry[control.action]) activentry[control.action](detail);\n      if (control.callback)  control.callback(e);\n    };\n    ctrl.addEventListener(evt, func);\n    //\n    control.ctrl = ctrl;\n   }\n   function removeControl(control) {\n   control.ctrl.remove();\n   }\n  function createControls() {\n    box = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n      class: [options.css.entrycontrols, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide]\n    });\n    Object.values(options.controls).filter(control => (control.icon || control.text)).forEach(control => {\n      addControl(control);\n    });\n  }\n  function removeControls() {\n    Object.values(options.controls).filter(control => (control.icon || control.text)).forEach(control => {\n      removeControl(control);\n    });\n  }\n  function initEvents() {}\n\n  function detachControls() {\n    if (activentry === null) return;\n    activentry.container.classList.remove(options.selectors.hascontrols.substr(1));\n    box.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    box.disabled = true;\n    container.append(box);\n    activentry = null;\n  }\n\n  function attachControls(entry) {\n\n    detachControls();\n    activentry = entry;\n    activentry.container.prepend(box);\n    activentry.container.classList.add(options.selectors.hascontrols.substr(1));\n    activateControls();\n    box.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    delete box.disabled;\n  }\n\n  function showControls(show = true) {\n    if (show === true) box.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    else box.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    box.disabled = !show;\n  }\n\n  function activateControl(control, isdiscarded = false) {\n    const ctrl = control.ctrl;\n    if (control.exclude && activentry !==null && control.exclude.indexOf(activentry.name)>=0) {ctrl.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);return;}\n    const typentries = (ctrl.dataset.typentries) ? ctrl.dataset.typentries.split(',') : [];\n    const type = (isdiscarded) ? entryTypes.discarded : (activentry)?activentry.container.dataset.type:null;\n    if (typentries.indexOf(type) >= 0) {\n      ctrl.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    } else ctrl.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n  }\n\n  function activateControls() {\n    if (activentry === null) return;\n    // add btns\n    const isdiscarded = activentry.isDiscarded();\n     Object.values(options.controls).filter(control => (control.icon || control.text)).forEach(control => {\n     activateControl(control, isdiscarded);\n    });\n    //\n  }\n  return {\n    options,\n    addControl,\n    attachControls,\n    detachControls,\n    showControls,\n    activateControls,\n    activateControl,\n    createControls,\n    removeControls\n  }\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/entry.js\n")},"./src/modules/tooltip.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolTip: () => (/* binding */ ToolTip)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.es.mjs\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\n\n\nfunction ToolTip() {\nconst uuid=(0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.generate_uuid)();\n    const tip = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.create_box)('div', {\n            id: uuid,\n            text: \"\",\n            class: _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.tooltip\n          },document.body);\n  function computePosition( item, tip, options={placement:'bottom-start',offset:{x:2,y:2}}) {\n    const rect = item.getBoundingClientRect();\n    const placement=options.placement.split('-');\n    let y=parseInt(rect.top);\n    switch(placement[0]) {\n        case 'bottom':\n            y+=parseInt(rect.height);\n        break;\n        case 'center':\n            y+=Math.round(parseInt(rect.height)/2);\n        break;\n    }\n    let x=parseInt(rect.left);\n    switch(placement[1]) {\n        case 'center':\n        x+=Math.round(parseInt(rect.width)/2);\n        break;\n        case 'end':\n        x+=parseInt(rect.width);\n        break;\n    }\n    Object.assign(tip.style, {\n    left: `${x}px`,\n    top: `${y}px`,\n    });\n  }\n  function applyTo(item,text,check=null) {\n          item.addEventListener('mouseenter', () => {\n          if(check!==null && !check()) return;\n          computePosition(item, tip, {\n            placement: 'top-center',\n          });\n          setTimeout(function() {tip.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n          tip.textContent=text;},100);\n        });\n        item.addEventListener('mouseout', () => {\n            if(check!==null && !check()) return;\n          setTimeout(function() { tip.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n          tip.textContent=\"\";},600);\n        });\n  }\n  return {applyTo};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy90b29sdGlwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0M7QUFHSTtBQUlUOztBQUV0QjtBQUNQLFdBQVcsZ0VBQWE7QUFDeEIsZ0JBQWdCLDZEQUFVO0FBQzFCO0FBQ0E7QUFDQSxtQkFBbUIsMkRBQUc7QUFDdEIsV0FBVztBQUNYLGdEQUFnRCxpQ0FBaUMsU0FBUztBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEVBQUU7QUFDZixZQUFZLEVBQUU7QUFDZCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLGlDQUFpQyxxQkFBcUIsMkRBQUc7QUFDekQsZ0NBQWdDO0FBQ2hDLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0NBQWtDLGtCQUFrQiwyREFBRztBQUN2RCw4QkFBOEI7QUFDOUIsU0FBUztBQUNUO0FBQ0EsVUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvdG9vbHRpcC5qcz8xMTgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBET01QdXJpZnkgZnJvbSAnZG9tcHVyaWZ5JztcbmltcG9ydCB7XG4gIGNzc1xufSBmcm9tICcuLi9tb2R1bGVzL21vZHVsZXMtY29uZmlnLmpzJztcbmltcG9ydCB7XG4gIGNyZWF0ZV9ib3gsXG4gIGdlbmVyYXRlX3V1aWQsXG59IGZyb20gJy4uL21vZHVsZXMvdXRpbHMuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gVG9vbFRpcCgpIHtcbmNvbnN0IHV1aWQ9Z2VuZXJhdGVfdXVpZCgpO1xuICAgIGNvbnN0IHRpcCA9IGNyZWF0ZV9ib3goJ2RpdicsIHtcbiAgICAgICAgICAgIGlkOiB1dWlkLFxuICAgICAgICAgICAgdGV4dDogXCJcIixcbiAgICAgICAgICAgIGNsYXNzOiBjc3MudG9vbHRpcFxuICAgICAgICAgIH0sZG9jdW1lbnQuYm9keSk7XG4gIGZ1bmN0aW9uIGNvbXB1dGVQb3NpdGlvbiggaXRlbSwgdGlwLCBvcHRpb25zPXtwbGFjZW1lbnQ6J2JvdHRvbS1zdGFydCcsb2Zmc2V0Ont4OjIseToyfX0pIHtcbiAgICBjb25zdCByZWN0ID0gaXRlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBwbGFjZW1lbnQ9b3B0aW9ucy5wbGFjZW1lbnQuc3BsaXQoJy0nKTtcbiAgICBsZXQgeT1wYXJzZUludChyZWN0LnRvcCk7XG4gICAgc3dpdGNoKHBsYWNlbWVudFswXSkge1xuICAgICAgICBjYXNlICdib3R0b20nOlxuICAgICAgICAgICAgeSs9cGFyc2VJbnQocmVjdC5oZWlnaHQpO1xuICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnY2VudGVyJzpcbiAgICAgICAgICAgIHkrPU1hdGgucm91bmQocGFyc2VJbnQocmVjdC5oZWlnaHQpLzIpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgbGV0IHg9cGFyc2VJbnQocmVjdC5sZWZ0KTtcbiAgICBzd2l0Y2gocGxhY2VtZW50WzFdKSB7XG4gICAgICAgIGNhc2UgJ2NlbnRlcic6XG4gICAgICAgIHgrPU1hdGgucm91bmQocGFyc2VJbnQocmVjdC53aWR0aCkvMik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdlbmQnOlxuICAgICAgICB4Kz1wYXJzZUludChyZWN0LndpZHRoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIE9iamVjdC5hc3NpZ24odGlwLnN0eWxlLCB7XG4gICAgbGVmdDogYCR7eH1weGAsXG4gICAgdG9wOiBgJHt5fXB4YCxcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBhcHBseVRvKGl0ZW0sdGV4dCxjaGVjaz1udWxsKSB7XG4gICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKCkgPT4ge1xuICAgICAgICAgIGlmKGNoZWNrIT09bnVsbCAmJiAhY2hlY2soKSkgcmV0dXJuO1xuICAgICAgICAgIGNvbXB1dGVQb3NpdGlvbihpdGVtLCB0aXAsIHtcbiAgICAgICAgICAgIHBsYWNlbWVudDogJ3RvcC1jZW50ZXInLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7dGlwLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgICAgICAgIHRpcC50ZXh0Q29udGVudD10ZXh0O30sMTAwKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCAoKSA9PiB7XG4gICAgICAgICAgICBpZihjaGVjayE9PW51bGwgJiYgIWNoZWNrKCkpIHJldHVybjtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aXAuY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gICAgICAgICAgdGlwLnRleHRDb250ZW50PVwiXCI7fSw2MDApO1xuICAgICAgICB9KTtcbiAgfVxuICByZXR1cm4ge2FwcGx5VG99O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/tooltip.js\n")}}]);