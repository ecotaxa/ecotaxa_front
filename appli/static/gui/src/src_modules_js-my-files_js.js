/*! For license information please see src_modules_js-my-files_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-my-files_js"],{"./src/modules/files/js-dirlist.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsDirList: () => (/* binding */ JsDirList),\n/* harmony export */   dirlistOptions: () => (/* binding */ dirlistOptions)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\n/* harmony import */ var _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../modules/entry.js */ \"./src/modules/entry.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\n// local css\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash = 'intrash';\n// original types\nconst json_types = {\n  directory: 'D',\n  file: 'F'\n}\nconst trash_dir_name = 'trash.';\nconst dirlistOptions = {\n  api_parameters: {\n    entry: 'entry',\n    dest: 'dest',\n    rootname: 'My Files',\n  },\n  url: '/gui/files',\n  controls: {\n    scan: {\n      display: {\n        counter: 'counter',\n        size: 'size',\n      }\n    },\n    zip: {\n      btn: {\n        zip: 'makezip',\n        zipped: 'makezipped'\n      },\n      display: {\n        size: 'sizezipped',\n        counter: 'counterzipped',\n      }\n    },\n  },\n  upload: {\n    label: 'upload'\n  },\n  btnprefix: 'btn',\n  btnfilelist: null,\n  entry: {\n    draggables: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node],\n    icons: {\n      image: 'img',\n      document: 'doc'\n    },\n  },\n  entrycontrols: {\n    selectors: {\n      typentries: '[data-typentries]',\n      hascontrols: '.has-controls',\n    },\n    controls: {\n      list: {\n        action: 'list',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard]\n      },\n      create: {\n        action: 'create',\n        text: 'new folder',\n        icon: 'icon-folder-plus',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root]\n      },\n      remove: {\n        action: 'remove',\n        text: 'delete',\n        icon: 'icon-trash',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded]\n      },\n      move: {\n        action: 'move',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node]\n      },\n      rename: {\n        action: 'rename',\n        trigger: 'dblclick',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node]\n      }\n    },\n    css: {\n      entrycontrols: 'entrycontrols',\n      entries: '.entries',\n    }\n  },\n  selectors: {\n    doupload: '.target-upload',\n    droptarget: '.droptarget',\n    dirlist: '.dirlist',\n    uploadfile: 'uploadfile',\n    displayimport: 'displayimport',\n    trigger: '.trigger',\n  },\n}\n\nfunction EntryAction(args, options) {\n  const entryaction = new _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.Entry(args, options);\n  entryaction.eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    isdiscard: 'isdiscard',\n    discarded: 'discarded',\n    editable: 'editable'\n  };\n  entryaction.newEntry = function(entry) {\n\n    return EntryAction(entry, this.options);\n  }\n  entryaction.isTrashDir = function(name = null) {\n    return ((name === null) ? this.name : name).indexOf(trash_dir_name) === 0;\n  }\n  entryaction.isInTrash = function(path = null) {\n    path = (path === null) ? this.getCurrentDirPath() : path;\n    if (path === null) (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.stop_on_error)('path_not_found');\n    path = path.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n    return (path.length > 1 && path[0].indexOf(trash_dir_name)) === 0;\n  }\n  entryaction.branchListener = function(callback = null) {\n    const el = this.container;\n    if (el.dataset.action === \"create\") return;\n    this.toggleActive();\n    if (this.isActive()) this.branchActivate(callback).then(() => {\n      this.emitEvent();\n    });\n  }\n\n  entryaction.getCurrentDirPath = function() {\n    return this.getCurrentPath().join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n  }\n\n  entryaction.fetchAction = async function(action, callback = null, callback_error = null) {\n    const api_parameters = this.options.api_parameters;\n    const label = this.getLabelElement();\n    let entrypath = this.getCurrentDirPath();\n    if (entrypath === '') return;\n    const data = new FormData();\n    data.append(api_parameters.entry, entrypath);\n    switch (action) {\n      case this.options.actions.create:\n        if (label === null) return;\n        entrypath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        entrypath[entrypath.length - 1] = label.textContent;\n        if (entrypath !== \"\") data.set(api_parameters.entry, entrypath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n      case this.options.actions.move:\n        // get new path - append item to drop directory\n        if (callback !== null) {\n          let destpath = callback();\n          callback = null;\n          if (destpath === entrypath) return;\n          data.append(api_parameters.dest, destpath);\n        } else return;\n        break;\n      case this.options.actions.rename:\n        const destpath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        destpath[destpath.length - 1] = label.textContent;\n        if (destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator) === entrypath) return;\n        data.append(api_parameters.dest, destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n    }\n    const response = await fetch(this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + action, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)({\n      method: \"POST\",\n      body: data,\n    }));\n    const json = await response.json();\n    if (response.status === 200) {\n      if (callback) callback(json.message);\n      return true;\n    } else {\n      if (callback_error) {\n        callback_error(json);\n      } else {\n        if (typeof json.body === 'string') json.body = JSON.parse(json.body);\n        const detail = (json.body.detail) ? json.body.detail : json.body;\n        _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n          type: \"error\",\n          content: response.status + ' ' + json.text + ' ' + detail,\n          dismiss: true\n        })\n      }\n      return false;\n    }\n  }\n  entryaction.listenRename = function(evt = 'dblclick') {\n    const entry = this;\n    const label = entry.getLabelElement();\n    label.addEventListener(evt, (e) => {\n      label.dataset.oldname = label.textContent;\n      if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) {\n        e.preventDefault();\n        return;\n      }\n      entry.setEditable();\n    });\n    // remove editable when click on entry\n    entry.container.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      entry.setEditable(false);\n      if (entry.container.dataset.action === entry.options.actions.create) entry.container.remove();\n    });\n  }\n  entryaction.setEditable = function(on = true) {\n    const entry = this;\n    const label = entry.getLabelElement();\n    const send_rename = async (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        if (label.dataset.oldname && label.dataset.oldname !== label.textContent) {\n          const callback = (txt) => {\n            if (txt === \"\") _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage(label, {\n              type: 'error',\n              content: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.i18nmessages.exists,\n              duration: 2000\n            });\n            else txt = txt.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator).pop();\n            label.textContent = txt;\n            if (entry.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch) entry.branchListener();\n            delete entry.container.dataset.action;\n          }\n          const action = (entry.container.dataset.action) ? entry.container.dataset.action : entry.options.actions.rename;\n          await entry.fetchAction(action, callback);\n        }\n        entry.setEditable(false);\n      }\n    }\n    if (on === true) {\n      label.contentEditable = true;\n      entry.container.draggable = false;\n      label.classList.add(entry.options.css.editable);\n      label.addEventListener('keydown', send_rename);\n    } else {\n      label.contentEditable = false;\n      label.classList.remove(entry.options.css.editable);\n      label.removeEventListener('keydown', send_rename);\n      entry.container.draggable = entry.isDraggable();\n    }\n  }\n  entryaction.getListeners = function() {\n    let listeners = [];\n    let func = (e) => {\n      e.stopImmediatePropagation();\n      this.branchListener(() => {\n        this.emitEvent(this.eventnames.attach);\n      });\n    };\n\n    if ([_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard].indexOf(this.type) < 0) {\n      listeners = this.moveHandlers();\n      if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node) {\n        func = (e) => {\n          e.stopImmediatePropagation();\n          this.toggleActive();\n          this.emitEvent();\n        }\n      } else if (this.isInTrash()) {\n        this.type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded;\n      } else listeners = listeners.concat(this.dropHandlers());\n      this.listenRename();\n    } else listeners = listeners.concat(this.dropHandlers());\n    listeners.unshift({\n      name: 'click',\n      target: 'label',\n      func: func\n    });\n    return listeners;\n  }\n  entryaction.setAttributes = function(entry) {\n    // convert attributes\n    entry.type = (entry.type === json_types.directory) ? _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch : _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node;\n    if (this.isTrashDir(entry.name)) entry.type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard;\n    entry.parent = this;\n    return entry;\n  }\n  entryaction.extraStyles = function(entry) {\n    const ext = entry.name.split('.').pop();\n    const cl = (entry.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node) ? (filter_files.images.split(',').indexOf(ext) >= 0) ? this.options.icons.image : this.options.icons.document : null;\n  }\n  entryaction.setDiscard = function() {\n    if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) this.emitEvent(this.eventnames.isdiscard);\n  }\n\n  entryaction.getUrl = function() {\n    const subdir = (this.name) ? this.getCurrentDirPath() : null;\n    return this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + this.options.actions.list + ((subdir) ? _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + subdir : '');\n  }\n  entryaction.jsonEntries = async function(response) {\n    const json = await response.json();\n    return (json.entries) ? json.entries : undefined;\n  }\n\n  entryaction.remove = function() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.remove).then(ret => {\n      if (ret === true) {\n        this.setParent(null);\n        this.removeListeners(this.dropHandlers());\n        this.setOff();\n        this.container.animate({\n          transform: \"translateX(-100%) scale(0)\"\n        }, {\n          duration: 1000\n        });\n        setTimeout(() => {\n          if (this.from && this.from.isInTrash()) this.destroy();\n          else this.emitEvent(this.eventnames.discarded);\n        }, 1000);\n      }\n    }).catch(error => {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage({\n        parent: this.container,\n        type: \"error\",\n        content: error.error + ' ' + error.text\n      })\n    });\n  }\n  entryaction.create = function() {\n    const new_entry = this.createEntry({\n      type: json_types.directory,\n      name: 'NewFolder'\n    });\n    // move new entry to top of the list\n    const entries = this.getEntriesElement();\n    entries.prepend(new_entry.container);\n    new_entry.container.dataset.action = this.options.actions.create;\n    new_entry.label.dispatchEvent(new Event('dblclick'));\n  }\n  entryaction.rename = function() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.rename).then(() => {\n      console.log('renamed', this)\n    });\n  }\n\n  entryaction.move = function(dest, callback = null) {\n    if (this.isTrashDir()) return;\n    if (this.isDiscarded()) return this.remove();\n    this.fetchAction(this.options.actions.move, () => {\n      return dest.getCurrentDirPath() + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + this.name;\n    }).then(() => {\n      this.setParent(dest);\n      if (callback !== null) callback();\n    }).catch(err => {\n      console.log('errmove', err)\n    });\n  }\n  entryaction.setParent = function(dest) {\n    this.from = this.parent;\n    if (dest !== null) {\n      dest.entries.push(this);\n      this.parent = dest;\n      const entries = dest.getEntriesElement(true);\n      entries.append(this.container);\n    }\n    const i = this.parent.entries.indexOf(this);\n    if (i >= 0) delete this.parent.entries[i];\n    else console.log('entry not found in parent entries', this.parent);\n\n  }\n  return entryaction;\n}\n\nclass JsDirList {\n  eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    action: 'action',\n    complete: 'complete',\n    error: 'error',\n  }\n  options;\n  uuid;\n  detachcallback=null;\n  constructor(parent, options = {}) {\n    if (!parent.jsdirlist) {\n      parent = (parent instanceof HTMLElement) ? parent : document.querySelector(parent);\n      if (!parent) return;\n      this.options = { ...dirlistOptions,\n        ...options\n      };\n\n      this.options.entry = { ..._modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryOptions,\n        ...this.options.entry,\n      };\n      this.options.entry.url = this.options.url;\n      this.container = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(\n        this.options.entry.tags.tag, {\n          class: this.options.selectors.dirlist.substr(1)\n        }, parent);\n      // unique id to communicate ModuleEventEmitter\n      this.uuid = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.generate_uuid)();\n      this.init();\n      this.container.append(this.root.container);\n      parent.jsdirlist = this;\n    }\n    return parent.jsdirlist;\n  }\n  init() {\n    const type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root;\n    const obj = {};\n    this.entrycontrols = (this.entrycontrols === undefined) ? (0,_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.EntryControls)(this.container, this.options.entrycontrols) : null;\n    Object.entries(this.options.entrycontrols.controls).forEach(([key, control]) => {\n      obj[key] = control.action;\n    });\n    this.options.entry.actions = obj;\n\n    const options = { ...this.options.entry,\n      ...{\n        api_parameters: this.options.api_parameters\n      }\n    };\n    options.listener = this.uuid;\n    this.root = EntryAction({\n      type: type,\n      name: '',\n      label: this.options.api_parameters.rootname,\n      class: this.options.api_parameters.rootclass\n\n    }, options);\n    this.initEvents();\n    this.root.addListeners();\n  }\n\n  initEvents(options) {\n    // events controls on entries\n    const self = this;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.on(this.options.entry.event.name, (e) => {\n      const evtnames = e.entry.eventnames;\n      switch (e.action) {\n        case evtnames.isdiscard:\n          if (this.trashdir) this.trashdir.container.remove();\n          this.trashdir = e.entry;\n          this.root.container.parentElement.insertBefore(e.entry.container, this.root.container);\n          this.root.container.append(e.entry.container);\n          break;\n        case evtnames.discarded:\n          let parent = e.entry.parent;\n          if (e.entry.isInTrash()) {\n            e.entry.container.remove();\n            parent = this.root;\n          } else {\n            e.entry.moveTo(this.trashdir);\n            e.entry.container.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash);\n          }\n          this.attachControls(parent);\n          break;\n        case evtnames.attach:\n         if (this.detachcallback) this.detachcallback();\n          // no upload on trash dir\n          const type = (e.entry.isInTrash()) ? _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded : e.entry.container.dataset.type;\n          if (type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) return;\n          if (e.action === evtnames.attach && type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded) return;\n          this.attachControls(e.entry);\n          break;\n        case \"dragstart\":\n          this.dragentry = this.activentry = e.entry;\n          e.entry.container.classList.add(e.entry.options.css.dragging);\n          this.detachControls();\n          break;\n        case \"dragover\":\n          if (!this.dragentry) return;\n          if (this.overitem !== e.entry.container) {\n            if (this.overitem) this.overitem.classList.remove(e.entry.options.css.dragover);\n            e.entry.container.classList.add(e.entry.options.css.dragover);\n            this.overitem = e.entry.container;\n          }\n          break;\n        case \"dragend\":\n          this.dragentry = null;\n          if (this.overitem) this.overitem.classList.remove(e.entry.options.css.dragover);\n          this.overitem = null;\n          break;\n        case \"drop\":\n          if (!this.dragentry) {\n            _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.action, e, this.uuid);\n          }\n          const dest_entry = e.entry;\n          dest_entry.resetDragOver();\n          if (this.dragentry) {\n            if (this.dragentry.options.actions.move) {\n              try {\n                this.dragentry.move(dest_entry);\n                if ([_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded].indexOf(dest_entry.type) >= 0) this.attachControls(dest_entry);\n              } catch (error) {\n                console.log('errordrop ', error)\n                this.dragentry.unMove();\n              }\n            } else console.log('noactionon drop');\n          }\n          break;\n        case evtnames.editable:\n          if (this.editable) this.editable.setEditable(false);\n          break;\n\n        default:\n          if (e.entry.active) {\n            this.attachControls(e.entry);\n          } else this.attachControls(this.root);\n          break;\n      }\n    }, this.uuid);\n  }\n  getActiventry() {\n    return this.activentry;\n  }\n  setActiventry(entry = null) {\n    this.activentry = entry;\n  }\n  attachControls(entry) {\n    if (this.entrycontrols) this.entrycontrols.attachControls(entry);\n    this.activentry = entry;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.attach, {\n      entry: this.activentry\n    }, this.uuid);\n  }\n\n  detachControls() {\n    const dest = (this.activentry) ? ((this.activentry.parent) ? this.activentry.parent : this.root) : this.root;\n    if (this.entrycontrols) this.entrycontrols.attachControls(dest);\n    this.activentry = dest;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.attach, {\n      entry: dest\n    }, this.uuid);\n  }\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnRkFBa0I7QUFDdEI7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGdGQUFrQjtBQUN0QjtBQUNBLEtBQUs7QUFDTDtBQUNBLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9maWxlcy9qcy1kaXJsaXN0LmpzPzIzYzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZG9tX3B1cmlmeSxcbiAgZmV0Y2hTZXR0aW5ncyxcbiAgY3JlYXRlX2JveCxcbiAgZGlyc2VwYXJhdG9yLFxuICB1cmxzZXBhcmF0b3IsXG4gIHN0b3Bfb25fZXJyb3IsXG4gIGdlbmVyYXRlX3V1aWRcbn1cbmZyb20gJy4uLy4uL21vZHVsZXMvdXRpbHMuanMnO1xuaW1wb3J0IHtcbiAgY3NzLFxufSBmcm9tICcuLi8uLi9tb2R1bGVzL21vZHVsZXMtY29uZmlnLmpzJztcbmltcG9ydCB7XG4gIEFsZXJ0Qm94XG59IGZyb20gJy4uLy4uL21vZHVsZXMvYWxlcnQtYm94LmpzJztcbmltcG9ydCB7XG4gIE1vZHVsZUV2ZW50RW1pdHRlcixcbn0gZnJvbSAnLi4vLi4vbW9kdWxlcy9tb2R1bGUtZXZlbnQtZW1pdHRlci5qcyc7XG5pbXBvcnQge1xuICBlbnRyeVR5cGVzLFxuICBlbnRyeU9wdGlvbnMsXG4gIEVudHJ5LFxuICBFbnRyeUNvbnRyb2xzXG59IGZyb20gJy4uLy4uL21vZHVsZXMvZW50cnkuanMnO1xuY29uc3QgZmlsdGVyX2ZpbGVzID0ge1xuICBpbWFnZXM6IFwicG5nLGpwZWcsanBnLGdpZlwiLFxuICB0c3Y6IFwidHh0LHRzdix6aXAsIGd6aXAsZ3pcIlxufVxuLy8gbG9jYWwgY3NzXG5jc3MuaW50cmFzaCA9ICdpbnRyYXNoJztcbi8vIG9yaWdpbmFsIHR5cGVzXG5jb25zdCBqc29uX3R5cGVzID0ge1xuICBkaXJlY3Rvcnk6ICdEJyxcbiAgZmlsZTogJ0YnXG59XG5jb25zdCB0cmFzaF9kaXJfbmFtZSA9ICd0cmFzaC4nO1xuZXhwb3J0IGNvbnN0IGRpcmxpc3RPcHRpb25zID0ge1xuICBhcGlfcGFyYW1ldGVyczoge1xuICAgIGVudHJ5OiAnZW50cnknLFxuICAgIGRlc3Q6ICdkZXN0JyxcbiAgICByb290bmFtZTogJ015IEZpbGVzJyxcbiAgfSxcbiAgdXJsOiAnL2d1aS9maWxlcycsXG4gIGNvbnRyb2xzOiB7XG4gICAgc2Nhbjoge1xuICAgICAgZGlzcGxheToge1xuICAgICAgICBjb3VudGVyOiAnY291bnRlcicsXG4gICAgICAgIHNpemU6ICdzaXplJyxcbiAgICAgIH1cbiAgICB9LFxuICAgIHppcDoge1xuICAgICAgYnRuOiB7XG4gICAgICAgIHppcDogJ21ha2V6aXAnLFxuICAgICAgICB6aXBwZWQ6ICdtYWtlemlwcGVkJ1xuICAgICAgfSxcbiAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgc2l6ZTogJ3NpemV6aXBwZWQnLFxuICAgICAgICBjb3VudGVyOiAnY291bnRlcnppcHBlZCcsXG4gICAgICB9XG4gICAgfSxcbiAgfSxcbiAgdXBsb2FkOiB7XG4gICAgbGFiZWw6ICd1cGxvYWQnXG4gIH0sXG4gIGJ0bnByZWZpeDogJ2J0bicsXG4gIGJ0bmZpbGVsaXN0OiBudWxsLFxuICBlbnRyeToge1xuICAgIGRyYWdnYWJsZXM6IFtlbnRyeVR5cGVzLmJyYW5jaCwgZW50cnlUeXBlcy5ub2RlXSxcbiAgICBpY29uczoge1xuICAgICAgaW1hZ2U6ICdpbWcnLFxuICAgICAgZG9jdW1lbnQ6ICdkb2MnXG4gICAgfSxcbiAgfSxcbiAgZW50cnljb250cm9sczoge1xuICAgIHNlbGVjdG9yczoge1xuICAgICAgdHlwZW50cmllczogJ1tkYXRhLXR5cGVudHJpZXNdJyxcbiAgICAgIGhhc2NvbnRyb2xzOiAnLmhhcy1jb250cm9scycsXG4gICAgfSxcbiAgICBjb250cm9sczoge1xuICAgICAgbGlzdDoge1xuICAgICAgICBhY3Rpb246ICdsaXN0JyxcbiAgICAgICAgdHlwZW50cmllczogW2VudHJ5VHlwZXMuYnJhbmNoLCBlbnRyeVR5cGVzLnJvb3QsIGVudHJ5VHlwZXMuZGlzY2FyZF1cbiAgICAgIH0sXG4gICAgICBjcmVhdGU6IHtcbiAgICAgICAgYWN0aW9uOiAnY3JlYXRlJyxcbiAgICAgICAgdGV4dDogJ25ldyBmb2xkZXInLFxuICAgICAgICBpY29uOiAnaWNvbi1mb2xkZXItcGx1cycsXG4gICAgICAgIHR5cGVudHJpZXM6IFtlbnRyeVR5cGVzLmJyYW5jaCwgZW50cnlUeXBlcy5yb290XVxuICAgICAgfSxcbiAgICAgIHJlbW92ZToge1xuICAgICAgICBhY3Rpb246ICdyZW1vdmUnLFxuICAgICAgICB0ZXh0OiAnZGVsZXRlJyxcbiAgICAgICAgaWNvbjogJ2ljb24tdHJhc2gnLFxuICAgICAgICB0eXBlbnRyaWVzOiBbZW50cnlUeXBlcy5icmFuY2gsIGVudHJ5VHlwZXMubm9kZSwgZW50cnlUeXBlcy5kaXNjYXJkZWRdXG4gICAgICB9LFxuICAgICAgbW92ZToge1xuICAgICAgICBhY3Rpb246ICdtb3ZlJyxcbiAgICAgICAgdHlwZW50cmllczogW2VudHJ5VHlwZXMuYnJhbmNoLCBlbnRyeVR5cGVzLm5vZGVdXG4gICAgICB9LFxuICAgICAgcmVuYW1lOiB7XG4gICAgICAgIGFjdGlvbjogJ3JlbmFtZScsXG4gICAgICAgIHRyaWdnZXI6ICdkYmxjbGljaycsXG4gICAgICAgIHR5cGVudHJpZXM6IFtlbnRyeVR5cGVzLmJyYW5jaCwgZW50cnlUeXBlcy5ub2RlXVxuICAgICAgfVxuICAgIH0sXG4gICAgY3NzOiB7XG4gICAgICBlbnRyeWNvbnRyb2xzOiAnZW50cnljb250cm9scycsXG4gICAgICBlbnRyaWVzOiAnLmVudHJpZXMnLFxuICAgIH1cbiAgfSxcbiAgc2VsZWN0b3JzOiB7XG4gICAgZG91cGxvYWQ6ICcudGFyZ2V0LXVwbG9hZCcsXG4gICAgZHJvcHRhcmdldDogJy5kcm9wdGFyZ2V0JyxcbiAgICBkaXJsaXN0OiAnLmRpcmxpc3QnLFxuICAgIHVwbG9hZGZpbGU6ICd1cGxvYWRmaWxlJyxcbiAgICBkaXNwbGF5aW1wb3J0OiAnZGlzcGxheWltcG9ydCcsXG4gICAgdHJpZ2dlcjogJy50cmlnZ2VyJyxcbiAgfSxcbn1cblxuZnVuY3Rpb24gRW50cnlBY3Rpb24oYXJncywgb3B0aW9ucykge1xuICBjb25zdCBlbnRyeWFjdGlvbiA9IG5ldyBFbnRyeShhcmdzLCBvcHRpb25zKTtcbiAgZW50cnlhY3Rpb24uZXZlbnRuYW1lcyA9IHtcbiAgICBhdHRhY2g6ICdhdHRhY2gnLFxuICAgIGRldGFjaDogJ2RldGFjaCcsXG4gICAgaXNkaXNjYXJkOiAnaXNkaXNjYXJkJyxcbiAgICBkaXNjYXJkZWQ6ICdkaXNjYXJkZWQnLFxuICAgIGVkaXRhYmxlOiAnZWRpdGFibGUnXG4gIH07XG4gIGVudHJ5YWN0aW9uLm5ld0VudHJ5ID0gZnVuY3Rpb24oZW50cnkpIHtcblxuICAgIHJldHVybiBFbnRyeUFjdGlvbihlbnRyeSwgdGhpcy5vcHRpb25zKTtcbiAgfVxuICBlbnRyeWFjdGlvbi5pc1RyYXNoRGlyID0gZnVuY3Rpb24obmFtZSA9IG51bGwpIHtcbiAgICByZXR1cm4gKChuYW1lID09PSBudWxsKSA/IHRoaXMubmFtZSA6IG5hbWUpLmluZGV4T2YodHJhc2hfZGlyX25hbWUpID09PSAwO1xuICB9XG4gIGVudHJ5YWN0aW9uLmlzSW5UcmFzaCA9IGZ1bmN0aW9uKHBhdGggPSBudWxsKSB7XG4gICAgcGF0aCA9IChwYXRoID09PSBudWxsKSA/IHRoaXMuZ2V0Q3VycmVudERpclBhdGgoKSA6IHBhdGg7XG4gICAgaWYgKHBhdGggPT09IG51bGwpIHN0b3Bfb25fZXJyb3IoJ3BhdGhfbm90X2ZvdW5kJyk7XG4gICAgcGF0aCA9IHBhdGguc3BsaXQoZGlyc2VwYXJhdG9yKTtcbiAgICByZXR1cm4gKHBhdGgubGVuZ3RoID4gMSAmJiBwYXRoWzBdLmluZGV4T2YodHJhc2hfZGlyX25hbWUpKSA9PT0gMDtcbiAgfVxuICBlbnRyeWFjdGlvbi5icmFuY2hMaXN0ZW5lciA9IGZ1bmN0aW9uKGNhbGxiYWNrID0gbnVsbCkge1xuICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXI7XG4gICAgaWYgKGVsLmRhdGFzZXQuYWN0aW9uID09PSBcImNyZWF0ZVwiKSByZXR1cm47XG4gICAgdGhpcy50b2dnbGVBY3RpdmUoKTtcbiAgICBpZiAodGhpcy5pc0FjdGl2ZSgpKSB0aGlzLmJyYW5jaEFjdGl2YXRlKGNhbGxiYWNrKS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMuZW1pdEV2ZW50KCk7XG4gICAgfSk7XG4gIH1cblxuICBlbnRyeWFjdGlvbi5nZXRDdXJyZW50RGlyUGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmdldEN1cnJlbnRQYXRoKCkuam9pbihkaXJzZXBhcmF0b3IpO1xuICB9XG5cbiAgZW50cnlhY3Rpb24uZmV0Y2hBY3Rpb24gPSBhc3luYyBmdW5jdGlvbihhY3Rpb24sIGNhbGxiYWNrID0gbnVsbCwgY2FsbGJhY2tfZXJyb3IgPSBudWxsKSB7XG4gICAgY29uc3QgYXBpX3BhcmFtZXRlcnMgPSB0aGlzLm9wdGlvbnMuYXBpX3BhcmFtZXRlcnM7XG4gICAgY29uc3QgbGFiZWwgPSB0aGlzLmdldExhYmVsRWxlbWVudCgpO1xuICAgIGxldCBlbnRyeXBhdGggPSB0aGlzLmdldEN1cnJlbnREaXJQYXRoKCk7XG4gICAgaWYgKGVudHJ5cGF0aCA9PT0gJycpIHJldHVybjtcbiAgICBjb25zdCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgZGF0YS5hcHBlbmQoYXBpX3BhcmFtZXRlcnMuZW50cnksIGVudHJ5cGF0aCk7XG4gICAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICAgIGNhc2UgdGhpcy5vcHRpb25zLmFjdGlvbnMuY3JlYXRlOlxuICAgICAgICBpZiAobGFiZWwgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgZW50cnlwYXRoID0gZW50cnlwYXRoLnNwbGl0KGRpcnNlcGFyYXRvcik7XG4gICAgICAgIGVudHJ5cGF0aFtlbnRyeXBhdGgubGVuZ3RoIC0gMV0gPSBsYWJlbC50ZXh0Q29udGVudDtcbiAgICAgICAgaWYgKGVudHJ5cGF0aCAhPT0gXCJcIikgZGF0YS5zZXQoYXBpX3BhcmFtZXRlcnMuZW50cnksIGVudHJ5cGF0aC5qb2luKGRpcnNlcGFyYXRvcikpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGhpcy5vcHRpb25zLmFjdGlvbnMubW92ZTpcbiAgICAgICAgLy8gZ2V0IG5ldyBwYXRoIC0gYXBwZW5kIGl0ZW0gdG8gZHJvcCBkaXJlY3RvcnlcbiAgICAgICAgaWYgKGNhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICAgICAgbGV0IGRlc3RwYXRoID0gY2FsbGJhY2soKTtcbiAgICAgICAgICBjYWxsYmFjayA9IG51bGw7XG4gICAgICAgICAgaWYgKGRlc3RwYXRoID09PSBlbnRyeXBhdGgpIHJldHVybjtcbiAgICAgICAgICBkYXRhLmFwcGVuZChhcGlfcGFyYW1ldGVycy5kZXN0LCBkZXN0cGF0aCk7XG4gICAgICAgIH0gZWxzZSByZXR1cm47XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLm9wdGlvbnMuYWN0aW9ucy5yZW5hbWU6XG4gICAgICAgIGNvbnN0IGRlc3RwYXRoID0gZW50cnlwYXRoLnNwbGl0KGRpcnNlcGFyYXRvcik7XG4gICAgICAgIGRlc3RwYXRoW2Rlc3RwYXRoLmxlbmd0aCAtIDFdID0gbGFiZWwudGV4dENvbnRlbnQ7XG4gICAgICAgIGlmIChkZXN0cGF0aC5qb2luKGRpcnNlcGFyYXRvcikgPT09IGVudHJ5cGF0aCkgcmV0dXJuO1xuICAgICAgICBkYXRhLmFwcGVuZChhcGlfcGFyYW1ldGVycy5kZXN0LCBkZXN0cGF0aC5qb2luKGRpcnNlcGFyYXRvcikpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh0aGlzLm9wdGlvbnMudXJsICsgdXJsc2VwYXJhdG9yICsgYWN0aW9uLCBmZXRjaFNldHRpbmdzKHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBib2R5OiBkYXRhLFxuICAgIH0pKTtcbiAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjayhqc29uLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChjYWxsYmFja19lcnJvcikge1xuICAgICAgICBjYWxsYmFja19lcnJvcihqc29uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0eXBlb2YganNvbi5ib2R5ID09PSAnc3RyaW5nJykganNvbi5ib2R5ID0gSlNPTi5wYXJzZShqc29uLmJvZHkpO1xuICAgICAgICBjb25zdCBkZXRhaWwgPSAoanNvbi5ib2R5LmRldGFpbCkgPyBqc29uLmJvZHkuZGV0YWlsIDoganNvbi5ib2R5O1xuICAgICAgICBBbGVydEJveC5hZGRBbGVydCh7XG4gICAgICAgICAgdHlwZTogXCJlcnJvclwiLFxuICAgICAgICAgIGNvbnRlbnQ6IHJlc3BvbnNlLnN0YXR1cyArICcgJyArIGpzb24udGV4dCArICcgJyArIGRldGFpbCxcbiAgICAgICAgICBkaXNtaXNzOiB0cnVlXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIGVudHJ5YWN0aW9uLmxpc3RlblJlbmFtZSA9IGZ1bmN0aW9uKGV2dCA9ICdkYmxjbGljaycpIHtcbiAgICBjb25zdCBlbnRyeSA9IHRoaXM7XG4gICAgY29uc3QgbGFiZWwgPSBlbnRyeS5nZXRMYWJlbEVsZW1lbnQoKTtcbiAgICBsYWJlbC5hZGRFdmVudExpc3RlbmVyKGV2dCwgKGUpID0+IHtcbiAgICAgIGxhYmVsLmRhdGFzZXQub2xkbmFtZSA9IGxhYmVsLnRleHRDb250ZW50O1xuICAgICAgaWYgKHRoaXMudHlwZSA9PT0gZW50cnlUeXBlcy5kaXNjYXJkKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZW50cnkuc2V0RWRpdGFibGUoKTtcbiAgICB9KTtcbiAgICAvLyByZW1vdmUgZWRpdGFibGUgd2hlbiBjbGljayBvbiBlbnRyeVxuICAgIGVudHJ5LmNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgZW50cnkuc2V0RWRpdGFibGUoZmFsc2UpO1xuICAgICAgaWYgKGVudHJ5LmNvbnRhaW5lci5kYXRhc2V0LmFjdGlvbiA9PT0gZW50cnkub3B0aW9ucy5hY3Rpb25zLmNyZWF0ZSkgZW50cnkuY29udGFpbmVyLnJlbW92ZSgpO1xuICAgIH0pO1xuICB9XG4gIGVudHJ5YWN0aW9uLnNldEVkaXRhYmxlID0gZnVuY3Rpb24ob24gPSB0cnVlKSB7XG4gICAgY29uc3QgZW50cnkgPSB0aGlzO1xuICAgIGNvbnN0IGxhYmVsID0gZW50cnkuZ2V0TGFiZWxFbGVtZW50KCk7XG4gICAgY29uc3Qgc2VuZF9yZW5hbWUgPSBhc3luYyAoZSkgPT4ge1xuICAgICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYgKGxhYmVsLmRhdGFzZXQub2xkbmFtZSAmJiBsYWJlbC5kYXRhc2V0Lm9sZG5hbWUgIT09IGxhYmVsLnRleHRDb250ZW50KSB7XG4gICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAodHh0KSA9PiB7XG4gICAgICAgICAgICBpZiAodHh0ID09PSBcIlwiKSBBbGVydEJveC5hZGRNZXNzYWdlKGxhYmVsLCB7XG4gICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgICAgIGNvbnRlbnQ6IEFsZXJ0Qm94LmkxOG5tZXNzYWdlcy5leGlzdHMsXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVsc2UgdHh0ID0gdHh0LnNwbGl0KGRpcnNlcGFyYXRvcikucG9wKCk7XG4gICAgICAgICAgICBsYWJlbC50ZXh0Q29udGVudCA9IHR4dDtcbiAgICAgICAgICAgIGlmIChlbnRyeS50eXBlID09PSBlbnRyeVR5cGVzLmJyYW5jaCkgZW50cnkuYnJhbmNoTGlzdGVuZXIoKTtcbiAgICAgICAgICAgIGRlbGV0ZSBlbnRyeS5jb250YWluZXIuZGF0YXNldC5hY3Rpb247XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IChlbnRyeS5jb250YWluZXIuZGF0YXNldC5hY3Rpb24pID8gZW50cnkuY29udGFpbmVyLmRhdGFzZXQuYWN0aW9uIDogZW50cnkub3B0aW9ucy5hY3Rpb25zLnJlbmFtZTtcbiAgICAgICAgICBhd2FpdCBlbnRyeS5mZXRjaEFjdGlvbihhY3Rpb24sIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgICBlbnRyeS5zZXRFZGl0YWJsZShmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChvbiA9PT0gdHJ1ZSkge1xuICAgICAgbGFiZWwuY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcbiAgICAgIGVudHJ5LmNvbnRhaW5lci5kcmFnZ2FibGUgPSBmYWxzZTtcbiAgICAgIGxhYmVsLmNsYXNzTGlzdC5hZGQoZW50cnkub3B0aW9ucy5jc3MuZWRpdGFibGUpO1xuICAgICAgbGFiZWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHNlbmRfcmVuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGFiZWwuY29udGVudEVkaXRhYmxlID0gZmFsc2U7XG4gICAgICBsYWJlbC5jbGFzc0xpc3QucmVtb3ZlKGVudHJ5Lm9wdGlvbnMuY3NzLmVkaXRhYmxlKTtcbiAgICAgIGxhYmVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBzZW5kX3JlbmFtZSk7XG4gICAgICBlbnRyeS5jb250YWluZXIuZHJhZ2dhYmxlID0gZW50cnkuaXNEcmFnZ2FibGUoKTtcbiAgICB9XG4gIH1cbiAgZW50cnlhY3Rpb24uZ2V0TGlzdGVuZXJzID0gZnVuY3Rpb24oKSB7XG4gICAgbGV0IGxpc3RlbmVycyA9IFtdO1xuICAgIGxldCBmdW5jID0gKGUpID0+IHtcbiAgICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICB0aGlzLmJyYW5jaExpc3RlbmVyKCgpID0+IHtcbiAgICAgICAgdGhpcy5lbWl0RXZlbnQodGhpcy5ldmVudG5hbWVzLmF0dGFjaCk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgaWYgKFtlbnRyeVR5cGVzLnJvb3QsIGVudHJ5VHlwZXMuZGlzY2FyZF0uaW5kZXhPZih0aGlzLnR5cGUpIDwgMCkge1xuICAgICAgbGlzdGVuZXJzID0gdGhpcy5tb3ZlSGFuZGxlcnMoKTtcbiAgICAgIGlmICh0aGlzLnR5cGUgPT09IGVudHJ5VHlwZXMubm9kZSkge1xuICAgICAgICBmdW5jID0gKGUpID0+IHtcbiAgICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgIHRoaXMudG9nZ2xlQWN0aXZlKCk7XG4gICAgICAgICAgdGhpcy5lbWl0RXZlbnQoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0aGlzLmlzSW5UcmFzaCgpKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IGVudHJ5VHlwZXMuZGlzY2FyZGVkO1xuICAgICAgfSBlbHNlIGxpc3RlbmVycyA9IGxpc3RlbmVycy5jb25jYXQodGhpcy5kcm9wSGFuZGxlcnMoKSk7XG4gICAgICB0aGlzLmxpc3RlblJlbmFtZSgpO1xuICAgIH0gZWxzZSBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuY29uY2F0KHRoaXMuZHJvcEhhbmRsZXJzKCkpO1xuICAgIGxpc3RlbmVycy51bnNoaWZ0KHtcbiAgICAgIG5hbWU6ICdjbGljaycsXG4gICAgICB0YXJnZXQ6ICdsYWJlbCcsXG4gICAgICBmdW5jOiBmdW5jXG4gICAgfSk7XG4gICAgcmV0dXJuIGxpc3RlbmVycztcbiAgfVxuICBlbnRyeWFjdGlvbi5zZXRBdHRyaWJ1dGVzID0gZnVuY3Rpb24oZW50cnkpIHtcbiAgICAvLyBjb252ZXJ0IGF0dHJpYnV0ZXNcbiAgICBlbnRyeS50eXBlID0gKGVudHJ5LnR5cGUgPT09IGpzb25fdHlwZXMuZGlyZWN0b3J5KSA/IGVudHJ5VHlwZXMuYnJhbmNoIDogZW50cnlUeXBlcy5ub2RlO1xuICAgIGlmICh0aGlzLmlzVHJhc2hEaXIoZW50cnkubmFtZSkpIGVudHJ5LnR5cGUgPSBlbnRyeVR5cGVzLmRpc2NhcmQ7XG4gICAgZW50cnkucGFyZW50ID0gdGhpcztcbiAgICByZXR1cm4gZW50cnk7XG4gIH1cbiAgZW50cnlhY3Rpb24uZXh0cmFTdHlsZXMgPSBmdW5jdGlvbihlbnRyeSkge1xuICAgIGNvbnN0IGV4dCA9IGVudHJ5Lm5hbWUuc3BsaXQoJy4nKS5wb3AoKTtcbiAgICBjb25zdCBjbCA9IChlbnRyeS50eXBlID09PSBlbnRyeVR5cGVzLm5vZGUpID8gKGZpbHRlcl9maWxlcy5pbWFnZXMuc3BsaXQoJywnKS5pbmRleE9mKGV4dCkgPj0gMCkgPyB0aGlzLm9wdGlvbnMuaWNvbnMuaW1hZ2UgOiB0aGlzLm9wdGlvbnMuaWNvbnMuZG9jdW1lbnQgOiBudWxsO1xuICB9XG4gIGVudHJ5YWN0aW9uLnNldERpc2NhcmQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy50eXBlID09PSBlbnRyeVR5cGVzLmRpc2NhcmQpIHRoaXMuZW1pdEV2ZW50KHRoaXMuZXZlbnRuYW1lcy5pc2Rpc2NhcmQpO1xuICB9XG5cbiAgZW50cnlhY3Rpb24uZ2V0VXJsID0gZnVuY3Rpb24oKSB7XG4gICAgY29uc3Qgc3ViZGlyID0gKHRoaXMubmFtZSkgPyB0aGlzLmdldEN1cnJlbnREaXJQYXRoKCkgOiBudWxsO1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMudXJsICsgdXJsc2VwYXJhdG9yICsgdGhpcy5vcHRpb25zLmFjdGlvbnMubGlzdCArICgoc3ViZGlyKSA/IGRpcnNlcGFyYXRvciArIHN1YmRpciA6ICcnKTtcbiAgfVxuICBlbnRyeWFjdGlvbi5qc29uRW50cmllcyA9IGFzeW5jIGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgY29uc3QganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICByZXR1cm4gKGpzb24uZW50cmllcykgPyBqc29uLmVudHJpZXMgOiB1bmRlZmluZWQ7XG4gIH1cblxuICBlbnRyeWFjdGlvbi5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5pc1RyYXNoRGlyKCkpIHJldHVybjtcbiAgICB0aGlzLmZldGNoQWN0aW9uKHRoaXMub3B0aW9ucy5hY3Rpb25zLnJlbW92ZSkudGhlbihyZXQgPT4ge1xuICAgICAgaWYgKHJldCA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLnNldFBhcmVudChudWxsKTtcbiAgICAgICAgdGhpcy5yZW1vdmVMaXN0ZW5lcnModGhpcy5kcm9wSGFuZGxlcnMoKSk7XG4gICAgICAgIHRoaXMuc2V0T2ZmKCk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFuaW1hdGUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVYKC0xMDAlKSBzY2FsZSgwKVwiXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogMTAwMFxuICAgICAgICB9KTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuZnJvbSAmJiB0aGlzLmZyb20uaXNJblRyYXNoKCkpIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICAgIGVsc2UgdGhpcy5lbWl0RXZlbnQodGhpcy5ldmVudG5hbWVzLmRpc2NhcmRlZCk7XG4gICAgICAgIH0sIDEwMDApO1xuICAgICAgfVxuICAgIH0pLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIEFsZXJ0Qm94LmFkZE1lc3NhZ2Uoe1xuICAgICAgICBwYXJlbnQ6IHRoaXMuY29udGFpbmVyLFxuICAgICAgICB0eXBlOiBcImVycm9yXCIsXG4gICAgICAgIGNvbnRlbnQ6IGVycm9yLmVycm9yICsgJyAnICsgZXJyb3IudGV4dFxuICAgICAgfSlcbiAgICB9KTtcbiAgfVxuICBlbnRyeWFjdGlvbi5jcmVhdGUgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBuZXdfZW50cnkgPSB0aGlzLmNyZWF0ZUVudHJ5KHtcbiAgICAgIHR5cGU6IGpzb25fdHlwZXMuZGlyZWN0b3J5LFxuICAgICAgbmFtZTogJ05ld0ZvbGRlcidcbiAgICB9KTtcbiAgICAvLyBtb3ZlIG5ldyBlbnRyeSB0byB0b3Agb2YgdGhlIGxpc3RcbiAgICBjb25zdCBlbnRyaWVzID0gdGhpcy5nZXRFbnRyaWVzRWxlbWVudCgpO1xuICAgIGVudHJpZXMucHJlcGVuZChuZXdfZW50cnkuY29udGFpbmVyKTtcbiAgICBuZXdfZW50cnkuY29udGFpbmVyLmRhdGFzZXQuYWN0aW9uID0gdGhpcy5vcHRpb25zLmFjdGlvbnMuY3JlYXRlO1xuICAgIG5ld19lbnRyeS5sYWJlbC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnZGJsY2xpY2snKSk7XG4gIH1cbiAgZW50cnlhY3Rpb24ucmVuYW1lID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuaXNUcmFzaERpcigpKSByZXR1cm47XG4gICAgdGhpcy5mZXRjaEFjdGlvbih0aGlzLm9wdGlvbnMuYWN0aW9ucy5yZW5hbWUpLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3JlbmFtZWQnLCB0aGlzKVxuICAgIH0pO1xuICB9XG5cbiAgZW50cnlhY3Rpb24ubW92ZSA9IGZ1bmN0aW9uKGRlc3QsIGNhbGxiYWNrID0gbnVsbCkge1xuICAgIGlmICh0aGlzLmlzVHJhc2hEaXIoKSkgcmV0dXJuO1xuICAgIGlmICh0aGlzLmlzRGlzY2FyZGVkKCkpIHJldHVybiB0aGlzLnJlbW92ZSgpO1xuICAgIHRoaXMuZmV0Y2hBY3Rpb24odGhpcy5vcHRpb25zLmFjdGlvbnMubW92ZSwgKCkgPT4ge1xuICAgICAgcmV0dXJuIGRlc3QuZ2V0Q3VycmVudERpclBhdGgoKSArIGRpcnNlcGFyYXRvciArIHRoaXMubmFtZTtcbiAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMuc2V0UGFyZW50KGRlc3QpO1xuICAgICAgaWYgKGNhbGxiYWNrICE9PSBudWxsKSBjYWxsYmFjaygpO1xuICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnZXJybW92ZScsIGVycilcbiAgICB9KTtcbiAgfVxuICBlbnRyeWFjdGlvbi5zZXRQYXJlbnQgPSBmdW5jdGlvbihkZXN0KSB7XG4gICAgdGhpcy5mcm9tID0gdGhpcy5wYXJlbnQ7XG4gICAgaWYgKGRlc3QgIT09IG51bGwpIHtcbiAgICAgIGRlc3QuZW50cmllcy5wdXNoKHRoaXMpO1xuICAgICAgdGhpcy5wYXJlbnQgPSBkZXN0O1xuICAgICAgY29uc3QgZW50cmllcyA9IGRlc3QuZ2V0RW50cmllc0VsZW1lbnQodHJ1ZSk7XG4gICAgICBlbnRyaWVzLmFwcGVuZCh0aGlzLmNvbnRhaW5lcik7XG4gICAgfVxuICAgIGNvbnN0IGkgPSB0aGlzLnBhcmVudC5lbnRyaWVzLmluZGV4T2YodGhpcyk7XG4gICAgaWYgKGkgPj0gMCkgZGVsZXRlIHRoaXMucGFyZW50LmVudHJpZXNbaV07XG4gICAgZWxzZSBjb25zb2xlLmxvZygnZW50cnkgbm90IGZvdW5kIGluIHBhcmVudCBlbnRyaWVzJywgdGhpcy5wYXJlbnQpO1xuXG4gIH1cbiAgcmV0dXJuIGVudHJ5YWN0aW9uO1xufVxuXG5leHBvcnQgY2xhc3MgSnNEaXJMaXN0IHtcbiAgZXZlbnRuYW1lcyA9IHtcbiAgICBhdHRhY2g6ICdhdHRhY2gnLFxuICAgIGRldGFjaDogJ2RldGFjaCcsXG4gICAgYWN0aW9uOiAnYWN0aW9uJyxcbiAgICBjb21wbGV0ZTogJ2NvbXBsZXRlJyxcbiAgICBlcnJvcjogJ2Vycm9yJyxcbiAgfVxuICBvcHRpb25zO1xuICB1dWlkO1xuICBkZXRhY2hjYWxsYmFjaz1udWxsO1xuICBjb25zdHJ1Y3RvcihwYXJlbnQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICghcGFyZW50LmpzZGlybGlzdCkge1xuICAgICAgcGFyZW50ID0gKHBhcmVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSA/IHBhcmVudCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocGFyZW50KTtcbiAgICAgIGlmICghcGFyZW50KSByZXR1cm47XG4gICAgICB0aGlzLm9wdGlvbnMgPSB7IC4uLmRpcmxpc3RPcHRpb25zLFxuICAgICAgICAuLi5vcHRpb25zXG4gICAgICB9O1xuXG4gICAgICB0aGlzLm9wdGlvbnMuZW50cnkgPSB7IC4uLmVudHJ5T3B0aW9ucyxcbiAgICAgICAgLi4udGhpcy5vcHRpb25zLmVudHJ5LFxuICAgICAgfTtcbiAgICAgIHRoaXMub3B0aW9ucy5lbnRyeS51cmwgPSB0aGlzLm9wdGlvbnMudXJsO1xuICAgICAgdGhpcy5jb250YWluZXIgPSBjcmVhdGVfYm94KFxuICAgICAgICB0aGlzLm9wdGlvbnMuZW50cnkudGFncy50YWcsIHtcbiAgICAgICAgICBjbGFzczogdGhpcy5vcHRpb25zLnNlbGVjdG9ycy5kaXJsaXN0LnN1YnN0cigxKVxuICAgICAgICB9LCBwYXJlbnQpO1xuICAgICAgLy8gdW5pcXVlIGlkIHRvIGNvbW11bmljYXRlIE1vZHVsZUV2ZW50RW1pdHRlclxuICAgICAgdGhpcy51dWlkID0gZ2VuZXJhdGVfdXVpZCgpO1xuICAgICAgdGhpcy5pbml0KCk7XG4gICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQodGhpcy5yb290LmNvbnRhaW5lcik7XG4gICAgICBwYXJlbnQuanNkaXJsaXN0ID0gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIHBhcmVudC5qc2Rpcmxpc3Q7XG4gIH1cbiAgaW5pdCgpIHtcbiAgICBjb25zdCB0eXBlID0gZW50cnlUeXBlcy5yb290O1xuICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgIHRoaXMuZW50cnljb250cm9scyA9ICh0aGlzLmVudHJ5Y29udHJvbHMgPT09IHVuZGVmaW5lZCkgPyBFbnRyeUNvbnRyb2xzKHRoaXMuY29udGFpbmVyLCB0aGlzLm9wdGlvbnMuZW50cnljb250cm9scykgOiBudWxsO1xuICAgIE9iamVjdC5lbnRyaWVzKHRoaXMub3B0aW9ucy5lbnRyeWNvbnRyb2xzLmNvbnRyb2xzKS5mb3JFYWNoKChba2V5LCBjb250cm9sXSkgPT4ge1xuICAgICAgb2JqW2tleV0gPSBjb250cm9sLmFjdGlvbjtcbiAgICB9KTtcbiAgICB0aGlzLm9wdGlvbnMuZW50cnkuYWN0aW9ucyA9IG9iajtcblxuICAgIGNvbnN0IG9wdGlvbnMgPSB7IC4uLnRoaXMub3B0aW9ucy5lbnRyeSxcbiAgICAgIC4uLntcbiAgICAgICAgYXBpX3BhcmFtZXRlcnM6IHRoaXMub3B0aW9ucy5hcGlfcGFyYW1ldGVyc1xuICAgICAgfVxuICAgIH07XG4gICAgb3B0aW9ucy5saXN0ZW5lciA9IHRoaXMudXVpZDtcbiAgICB0aGlzLnJvb3QgPSBFbnRyeUFjdGlvbih7XG4gICAgICB0eXBlOiB0eXBlLFxuICAgICAgbmFtZTogJycsXG4gICAgICBsYWJlbDogdGhpcy5vcHRpb25zLmFwaV9wYXJhbWV0ZXJzLnJvb3RuYW1lLFxuICAgICAgY2xhc3M6IHRoaXMub3B0aW9ucy5hcGlfcGFyYW1ldGVycy5yb290Y2xhc3NcblxuICAgIH0sIG9wdGlvbnMpO1xuICAgIHRoaXMuaW5pdEV2ZW50cygpO1xuICAgIHRoaXMucm9vdC5hZGRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIGluaXRFdmVudHMob3B0aW9ucykge1xuICAgIC8vIGV2ZW50cyBjb250cm9scyBvbiBlbnRyaWVzXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgTW9kdWxlRXZlbnRFbWl0dGVyLm9uKHRoaXMub3B0aW9ucy5lbnRyeS5ldmVudC5uYW1lLCAoZSkgPT4ge1xuICAgICAgY29uc3QgZXZ0bmFtZXMgPSBlLmVudHJ5LmV2ZW50bmFtZXM7XG4gICAgICBzd2l0Y2ggKGUuYWN0aW9uKSB7XG4gICAgICAgIGNhc2UgZXZ0bmFtZXMuaXNkaXNjYXJkOlxuICAgICAgICAgIGlmICh0aGlzLnRyYXNoZGlyKSB0aGlzLnRyYXNoZGlyLmNvbnRhaW5lci5yZW1vdmUoKTtcbiAgICAgICAgICB0aGlzLnRyYXNoZGlyID0gZS5lbnRyeTtcbiAgICAgICAgICB0aGlzLnJvb3QuY29udGFpbmVyLnBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKGUuZW50cnkuY29udGFpbmVyLCB0aGlzLnJvb3QuY29udGFpbmVyKTtcbiAgICAgICAgICB0aGlzLnJvb3QuY29udGFpbmVyLmFwcGVuZChlLmVudHJ5LmNvbnRhaW5lcik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgZXZ0bmFtZXMuZGlzY2FyZGVkOlxuICAgICAgICAgIGxldCBwYXJlbnQgPSBlLmVudHJ5LnBhcmVudDtcbiAgICAgICAgICBpZiAoZS5lbnRyeS5pc0luVHJhc2goKSkge1xuICAgICAgICAgICAgZS5lbnRyeS5jb250YWluZXIucmVtb3ZlKCk7XG4gICAgICAgICAgICBwYXJlbnQgPSB0aGlzLnJvb3Q7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGUuZW50cnkubW92ZVRvKHRoaXMudHJhc2hkaXIpO1xuICAgICAgICAgICAgZS5lbnRyeS5jb250YWluZXIuY2xhc3NMaXN0LmFkZChjc3MuaW50cmFzaCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuYXR0YWNoQ29udHJvbHMocGFyZW50KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBldnRuYW1lcy5hdHRhY2g6XG4gICAgICAgICBpZiAodGhpcy5kZXRhY2hjYWxsYmFjaykgdGhpcy5kZXRhY2hjYWxsYmFjaygpO1xuICAgICAgICAgIC8vIG5vIHVwbG9hZCBvbiB0cmFzaCBkaXJcbiAgICAgICAgICBjb25zdCB0eXBlID0gKGUuZW50cnkuaXNJblRyYXNoKCkpID8gZW50cnlUeXBlcy5kaXNjYXJkZWQgOiBlLmVudHJ5LmNvbnRhaW5lci5kYXRhc2V0LnR5cGU7XG4gICAgICAgICAgaWYgKHR5cGUgPT09IGVudHJ5VHlwZXMuZGlzY2FyZCkgcmV0dXJuO1xuICAgICAgICAgIGlmIChlLmFjdGlvbiA9PT0gZXZ0bmFtZXMuYXR0YWNoICYmIHR5cGUgPT09IGVudHJ5VHlwZXMuZGlzY2FyZGVkKSByZXR1cm47XG4gICAgICAgICAgdGhpcy5hdHRhY2hDb250cm9scyhlLmVudHJ5KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRyYWdzdGFydFwiOlxuICAgICAgICAgIHRoaXMuZHJhZ2VudHJ5ID0gdGhpcy5hY3RpdmVudHJ5ID0gZS5lbnRyeTtcbiAgICAgICAgICBlLmVudHJ5LmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGUuZW50cnkub3B0aW9ucy5jc3MuZHJhZ2dpbmcpO1xuICAgICAgICAgIHRoaXMuZGV0YWNoQ29udHJvbHMoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRyYWdvdmVyXCI6XG4gICAgICAgICAgaWYgKCF0aGlzLmRyYWdlbnRyeSkgcmV0dXJuO1xuICAgICAgICAgIGlmICh0aGlzLm92ZXJpdGVtICE9PSBlLmVudHJ5LmNvbnRhaW5lcikge1xuICAgICAgICAgICAgaWYgKHRoaXMub3Zlcml0ZW0pIHRoaXMub3Zlcml0ZW0uY2xhc3NMaXN0LnJlbW92ZShlLmVudHJ5Lm9wdGlvbnMuY3NzLmRyYWdvdmVyKTtcbiAgICAgICAgICAgIGUuZW50cnkuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoZS5lbnRyeS5vcHRpb25zLmNzcy5kcmFnb3Zlcik7XG4gICAgICAgICAgICB0aGlzLm92ZXJpdGVtID0gZS5lbnRyeS5jb250YWluZXI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiZHJhZ2VuZFwiOlxuICAgICAgICAgIHRoaXMuZHJhZ2VudHJ5ID0gbnVsbDtcbiAgICAgICAgICBpZiAodGhpcy5vdmVyaXRlbSkgdGhpcy5vdmVyaXRlbS5jbGFzc0xpc3QucmVtb3ZlKGUuZW50cnkub3B0aW9ucy5jc3MuZHJhZ292ZXIpO1xuICAgICAgICAgIHRoaXMub3Zlcml0ZW0gPSBudWxsO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiZHJvcFwiOlxuICAgICAgICAgIGlmICghdGhpcy5kcmFnZW50cnkpIHtcbiAgICAgICAgICAgIE1vZHVsZUV2ZW50RW1pdHRlci5lbWl0KHRoaXMuZXZlbnRuYW1lcy5hY3Rpb24sIGUsIHRoaXMudXVpZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IGRlc3RfZW50cnkgPSBlLmVudHJ5O1xuICAgICAgICAgIGRlc3RfZW50cnkucmVzZXREcmFnT3ZlcigpO1xuICAgICAgICAgIGlmICh0aGlzLmRyYWdlbnRyeSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZHJhZ2VudHJ5Lm9wdGlvbnMuYWN0aW9ucy5tb3ZlKSB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kcmFnZW50cnkubW92ZShkZXN0X2VudHJ5KTtcbiAgICAgICAgICAgICAgICBpZiAoW2VudHJ5VHlwZXMuZGlzY2FyZGVkXS5pbmRleE9mKGRlc3RfZW50cnkudHlwZSkgPj0gMCkgdGhpcy5hdHRhY2hDb250cm9scyhkZXN0X2VudHJ5KTtcbiAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3Jkcm9wICcsIGVycm9yKVxuICAgICAgICAgICAgICAgIHRoaXMuZHJhZ2VudHJ5LnVuTW92ZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgY29uc29sZS5sb2coJ25vYWN0aW9ub24gZHJvcCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBldnRuYW1lcy5lZGl0YWJsZTpcbiAgICAgICAgICBpZiAodGhpcy5lZGl0YWJsZSkgdGhpcy5lZGl0YWJsZS5zZXRFZGl0YWJsZShmYWxzZSk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBpZiAoZS5lbnRyeS5hY3RpdmUpIHtcbiAgICAgICAgICAgIHRoaXMuYXR0YWNoQ29udHJvbHMoZS5lbnRyeSk7XG4gICAgICAgICAgfSBlbHNlIHRoaXMuYXR0YWNoQ29udHJvbHModGhpcy5yb290KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9LCB0aGlzLnV1aWQpO1xuICB9XG4gIGdldEFjdGl2ZW50cnkoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlbnRyeTtcbiAgfVxuICBzZXRBY3RpdmVudHJ5KGVudHJ5ID0gbnVsbCkge1xuICAgIHRoaXMuYWN0aXZlbnRyeSA9IGVudHJ5O1xuICB9XG4gIGF0dGFjaENvbnRyb2xzKGVudHJ5KSB7XG4gICAgaWYgKHRoaXMuZW50cnljb250cm9scykgdGhpcy5lbnRyeWNvbnRyb2xzLmF0dGFjaENvbnRyb2xzKGVudHJ5KTtcbiAgICB0aGlzLmFjdGl2ZW50cnkgPSBlbnRyeTtcbiAgICBNb2R1bGVFdmVudEVtaXR0ZXIuZW1pdCh0aGlzLmV2ZW50bmFtZXMuYXR0YWNoLCB7XG4gICAgICBlbnRyeTogdGhpcy5hY3RpdmVudHJ5XG4gICAgfSwgdGhpcy51dWlkKTtcbiAgfVxuXG4gIGRldGFjaENvbnRyb2xzKCkge1xuICAgIGNvbnN0IGRlc3QgPSAodGhpcy5hY3RpdmVudHJ5KSA/ICgodGhpcy5hY3RpdmVudHJ5LnBhcmVudCkgPyB0aGlzLmFjdGl2ZW50cnkucGFyZW50IDogdGhpcy5yb290KSA6IHRoaXMucm9vdDtcbiAgICBpZiAodGhpcy5lbnRyeWNvbnRyb2xzKSB0aGlzLmVudHJ5Y29udHJvbHMuYXR0YWNoQ29udHJvbHMoZGVzdCk7XG4gICAgdGhpcy5hY3RpdmVudHJ5ID0gZGVzdDtcbiAgICBNb2R1bGVFdmVudEVtaXR0ZXIuZW1pdCh0aGlzLmV2ZW50bmFtZXMuYXR0YWNoLCB7XG4gICAgICBlbnRyeTogZGVzdFxuICAgIH0sIHRoaXMudXVpZCk7XG4gIH1cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/files/js-dirlist.js\n")},"./src/modules/js-my-files.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsMyFiles: () => (/* binding */ JsMyFiles)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/files/js-dirlist.js */ \"./src/modules/files/js-dirlist.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst objaccept = {\n  \"image/*\": [\".png\", \".jpeg\", \".jpg\"],\n  \"text/tab-separated-values\": [\".tsv\"],\n  \"application/zip\": [\".zip\"],\n  \"application/gzip\": [\".gz\"],\n  \"application/x-bzip\": [\".bz\"],\n  \"application/x-bzip2\": [\".bz2\"]\n}\nconst accept = Object.values(objaccept).reduce((a, b) => a.concat(b));\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button = 'button p-1 mx-auto sm:mr-4 mb-4';\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\nclass JsMyFiles {\n  done = true;\n  jsDirToZip = null;\n  jsDirList = null;\n  trash_dir_name = 'trash.';\n  counters = {};\n  _events = {};\n  eventnames = {\n    complete: 'complete',\n    error: 'error',\n\n  };\n  rejected = [];\n  errorfile = [];\n  listener;\n  constructor(container, options = {}) {\n    if (!container.jsmyfiles) {\n      container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n      if (!container) return;\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dom_purify)(container, 'dataset');\n      this.container = container;\n      const defaultOptions = {\n        controls: {\n          scan: {\n            display: {\n              counter: 'counter',\n              size: 'size',\n            }\n          },\n          zip: {\n            btn: {\n              zip: 'makezip',\n              zipped: 'makezipped'\n            },\n            display: {\n              size: 'sizezipped',\n              counter: 'counterzipped',\n            }\n          },\n          reject: {\n            display: {\n              counter: 'counterrejected'\n            }\n          },\n          errorfile: {\n            display: {\n              counter: 'countererrorfile'\n            }\n          }\n        },\n        upload: {\n          label: 'upload'\n        },\n        btnprefix: 'btn',\n        btnfilelist: null,\n        selectors: {\n          droptarget: '.droptarget',\n          trigger: '.trigger',\n          uploadfile: 'uploadfile',\n        },\n        display: {\n          progression: 'display-progression',\n          dropzone: 'dropzone',\n          boxtitle: 'boxtitle',\n          counters: 'counters',\n          sizes: 'sizes',\n          timers: 'timers'\n        },\n\n        css: {\n          dragover: 'dragover'\n        }\n      };\n      this.options = Object.assign(defaultOptions, options);\n      this.options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : ['directory', 'file'];\n      this.haspicker = (window.showDirectoryPicker);\n      this.uuid = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.generate_uuid)();\n      this.init();\n      container.jsmyfiles = this;\n    }\n    return container.jsmyfiles;\n  }\n  init() {\n    // create dirlist box\n    this.addDisplayProgression();\n    this.addDirList();\n    this.addDropzone();\n    this.initControls();\n    this.initEvents().then(() => {\n      this.resetCounters();\n    });\n  }\n  initTimer() {\n    this.timer = new Date();\n  }\n  async initEvents() {\n    //To be refactored - for steppers )\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.eventnames.processed, async (e) => {\n      if (this.nextaction) await this.nextaction();\n    }, this.uuid);\n    const self = this;\n    if (this.options.controls.zip) {\n      const {\n        JsDirToZip\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_detect-browser_es_index_js-node_modules_fflate_esm_browser_js\"), __webpack_require__.e(\"src_modules_files_js-dirtozip_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-dirtozip.js */ \"./src/modules/files/js-dirtozip.js\"));\n      this.jsDirToZip = JsDirToZip({\n        listener: this.uuid\n      });\n\n      Object.keys(this.jsDirToZip.eventnames).forEach((key) => {\n        this.eventnames[key] = this.jsDirToZip.eventnames[key];\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(key, (e) => {\n          switch (key) {\n            case this.eventnames.counter:\n              this.fileCounter(e);\n              break;\n            case this.eventnames.reject:\n              this.rejected.push(e.path);\n              this.fileCounter({\n                name: 'reject',\n                path: e.path,\n              });\n              break;\n            case this.eventnames.follow:\n            case this.eventnames.complete:\n              if (!e || !e.hasOwnProperty(\"name\") || e.name === \"\") {\n                console.log('no emit complete name' + key, e);\n                return;\n              }\n              self.showControl(e.name, e);\n              break;\n            case this.eventnames.message:\n              switch (e.name) {\n                case 'console':\n                  this.addConsoleMessage({\n                    id: (e.id) ? e.id : null,\n                    content: e.message,\n                    parent: this.container\n                  });\n                  break;\n                  case 'browser':\n                   _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n                    type: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.danger,\n                    content: e.message,\n                    dismissible: false,\n                    inverse: false\n                  });\n                  break;\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.error:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.success:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.danger:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.info:\n                  _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n                    type: e.name,\n                    content: e.message,\n                    dismissible: true,\n                    inverse: false\n                  });\n                  console.log('error', e);\n                  break;\n                default:\n                  console.log('message', e);\n                  break;\n              }\n              break;\n          }\n        }, this.uuid);\n      });\n            this.jsDirToZip.browserRequired() ;\n    }\n    window.addEventListener('beforeunload', (e) => {\n      if (!this.done) {\n        e.preventDefault();\n        e.returnValue = (this.options.preventclose) ? this.options.preventclose : `Some work is in progress in this window.\\nAre you sure you want to leave?`;\n      }\n    });\n  }\n  emitToZip(btn) {\n    const message = (btn.dataset.message) ? JSON.parse(btn.dataset.message) : null;\n    if (!message) btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (message) {\n      if (message.name) {\n        const name = message.name;\n        delete message.name;\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.emit(name, message, this.jsDirToZip.uuid);\n      }\n    }\n    if (name === this.eventnames.sendfile) btn.disabled = true;\n  }\n\n  quotaEstimate(obj) {\n    return this.jsDirToZip.quotaEstimate();\n  }\n  scanBrowse(e, options) {\n    return this.jsDirToZip.scanBrowse(e, options);\n\n  }\n  scanHandle(dir, options) {\n    return this.jsDirToZip.scanHandle(dir, options);\n  }\n  async handleBrowse(e) {\n    if (!this.setUploadEntry()) return;\n    this.initTimer();\n    this.toggleCounters(true);\n    if (!this.haspicker) e = e.target.files;\n    await this.scanBrowse(e, {\n      accept: accept,\n    });\n  }\n\n  addDropzone() { //\n    this.dropzone = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n      id: this.options.display.dropzone\n    });\n    const input = (this.haspicker) ? null : (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('input', {\n      type: \"file\",\n      name: this.options.selectors.uploadfile,\n      id: this.options.selectors.uploadfile,\n      multiple: true,\n      allowdirs: true,\n      accept: accept,\n      class: 'hidden'\n    }, this.dropzone);\n    if (input) input.addEventListener(\"change\", (e) => {\n      this.handleBrowse(e)\n    });\n    const btns = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {},\n      this.dropzone);\n\n    this.options.browse.forEach(opt => {\n      const text = (this.container.dataset[`textbrowse${opt}`]) ? this.container.dataset[`textbrowse${opt}`] : `browse${opt}`;\n      const btn = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n        class: this.options.selectors.trigger.slice(1),\n        dataset: {\n          type: opt\n        },\n        text: text\n      }, btns);\n\n      btn.addEventListener('click', async (e) => {\n        if (this.haspicker) {\n          this.openDirDialog(opt, (e) => {\n            this.handleBrowse(e)\n          });\n        } else {\n          if (opt === \"directory\") {\n            input.directory = true;\n            input.webkitdirectory = true;\n          } else { //file\n            input.directory = false;\n            input.webkitdirectory = false;\n          }\n          input.dispatchEvent(new MouseEvent(\"click\"));\n\n        }\n        // if other functionalities add controls ( like import) clear\n        if(this.eventnames.clearother) _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.emit(this.eventnames.clearother,{},this.uuid);\n      });\n    });\n    const spandrop = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n      text: this.container.dataset.textdrop\n    }, btns);\n\n  }\n\n  toggleDropTarget(on = true) {\n    const self = this;\n     const droptarget = (this.activentry) ? this.activentry.container : null;\n    if (droptarget === null) return;\n\n    function highlight(e) {\n        droptarget.classList.add(cssdragover)\n    }\n    function unhighlight(e) {\n        droptarget.classList.remove(cssdragover);\n    }\n    const cssdragover = (this.jsDirList) ? (this.jsDirList.options.entry) ? this.jsDirList.options.entry.css.dragover : this.options.css.dragover : this.options.css.dragover;\n    const target_dragover = (e) => {e.preventDefault();\n      if (!this.dragover && this.activentry && this.activentry.container === e.currentTarget) {\n        droptarget.classList.add(cssdragover);\n      }\n    e.dataTransfer.dropEffect = \"move\";\n    }\n    const target_drop = async (e) => { await self.handleDrop(e);}\n    // set events and css for new dropzone\n    if (on === false) {\n     ['dragenter', 'dragover'].forEach(eventname => {\n        droptarget.removeEventListener(eventname, highlight, false);\n    });\n    ['dragleave', 'drop'].forEach(eventname => {\n        droptarget.removeEventListener(eventname, unhighlight, false);\n    });\n      droptarget.removeEventListener('drop', target_drop);\n      droptarget.classList.remove(this.options.selectors.droptarget.substr(1));\n    } else {\n    ['dragenter', 'dragover'].forEach(eventname => {\n        droptarget.addEventListener(eventname, highlight, false);\n    });\n    ['dragleave', 'drop'].forEach(eventname => {\n    droptarget.addEventListener(eventname, unhighlight, false);\n    });\n      droptarget.addEventListener('drop', target_drop);\n      droptarget.classList.add(this.options.selectors.droptarget.substr(1));\n    }\n  }\n\n  async addDirList() {\n    this.jsDirList = new _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__.JsDirList(this.container);\n    this.activentry = this.jsDirList.root;\n    this.rootitem = this.targetitem = this.activentry.container;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.attach, (e) => {\n      if (!e.entry) return;\n      if (e.entry !== this.activentry && this.activentry.isBranch(true)) this.detachDropzone();\n      this.activentry = e.entry;\n      this.targetitem = this.activentry.container;\n      if (this.activentry.isBranch(true)) this.addUploadDialog();\n    }, this.jsDirList.uuid);\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.detach, (e) => {\n      this.detachDropzone();\n      this.activentry = null;\n      this.uploadentry = null;\n      this.targetitem = null;\n    }, this.jsDirList.uuid);\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.action, (e) => {\n      switch (e.action) {\n        case \"drop\":\n          this.handleDrop(e.event);\n          break;\n\n        default:\n          console.log('action not managed ' + e.action, e);\n          break;\n      }\n    }, this.jsDirList.uuid);\n    this.activentry.label.dispatchEvent(new Event('click'));\n  }\n\n  addDisplayProgression() {\n    // add counters\n    if (this.displayprogression) return;\n    let el = document.getElementById(this.options.display.progression);\n    if (!el) {\n      el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        id: this.options.display.progression\n      }, this.container);\n      el.insertAdjacentHTML('afterbegin', `<div class=\"${this.options.display.progression}\"><div class=\"${this.options.display.counters}\"></div><div class=\"${this.options.display.sizes}\"></div><div class=\"${_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress}\"></div><div class=\"${this.options.display.timers}\"></div></div>`);\n      this.displayprogression = el;\n    }\n  }\n  enableDropzone(enable = true, destroy = false) {\n    if (destroy || enable === false) this.dropzone.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (enable) {\n      this.dropzone.dataset.active = true;\n      this.dropzone.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    } else delete this.dropzone.dataset.active;\n  }\n  //\n  attachDropzone() {\n    if (this.dropzone.dataset.active) {\n      this.targetitem.insertBefore(this.dropzone, this.activentry.label.nextElementSibling);\n      this.toggleDropTarget(true);\n    }\n    ['dragover', 'dragenter'].forEach(eventname => {\n     window.addEventListener(eventname, function(e) {e.preventDefault();}, false);\n    });\n  }\n  detachDropzone() {\n    this.enableDropzone(false);\n    this.toggleDropTarget(false);\n  }\n\n  openDirDialog(type, callback) {\n    // if chrome 86 , edge 86, opera 72\n    const showpick = (type === \"directory\") ? window.showDirectoryPicker : window.showOpenFilePicker;\n    const pickopts = (type === \"directory\") ? {\n      mode: \"read\",\n      multiple: true\n    } : {\n      types: [{\n        description: \"Images,.tsv, zip, gzip, tar files\",\n        accept: objaccept,\n      }, ],\n      excludeAcceptAllOption: true,\n      multiple: true,\n    };\n    showpick(pickopts).then(pick => {\n      callback(pick);\n    });\n  }\n\n  setUploadEntry() {\n    if (this.uploadentry && this.uploadentry !== this.activentry) {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n        type: \"error\",\n        content: 'Only one upload destination authorized. Close and upload the current zipfile.',\n        dismissible: true,\n        inverse: true\n      });\n      return false;\n    }\n    this.uploadentry = this.activentry;\n    return true;\n  }\n  // drag&drop\n\n\n  async handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.setUploadEntry()) return;\n    let dataTransfer;\n    if (e.dataTransfer) {\n      dataTransfer = e.dataTransfer;\n    } else dataTransfer = e;\n    this.done = false;\n    this.initTimer();\n    const items = [...((dataTransfer.items) ? dataTransfer.items : dataTransfer.files)];\n    if (items.length) {\n      this.enableDropzone(false);\n      await items.forEach(async item => {\n        if (item.kind === \"file\") {\n          item = await item.webkitGetAsEntry();\n          this.toggleCounters(true);\n          await this.scanHandle(item);\n        }\n      })\n    }\n  }\n   showComplete() {\n    this.timer = (new Date() - this.timer) / 1000;\n    this.enableDropzone(true);\n  }\n\n  stopOnError(err) {\n    console.log('err', err);\n  }\n\n  addConsoleMessage(message) {\n    //message {message:, parent:}\n    message.parent = (message.parent) ? message.parent : this.container;\n    _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addConsole(message);\n  }\n\n  addUploadDialog() {\n    if (this.options.controls.scan) {\n      this.enableDropzone(true);\n      this.attachDropzone();\n    }\n  }\n\n  async addFilesStore(name, callback) {\n    name = (name) ? name : this.options.dbname;\n    if (!this.jsFilesStore) {\n      const {\n        JsFilesStore\n      } = await __webpack_require__.e(/*! import() */ \"src_modules_files_js-filesystem_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-filesystem.js */ \"./src/modules/files/js-filesystem.js\"));\n      this.jsFilesStore = new JsFilesStore(null, callback);\n      this.displayFiles();\n    }\n    if (callback) await callback();\n  }\n  displayFiles() {\n    this.jsFilesStore.getItems('local');\n  }\n\n  fileCounter(e) {\n    const counters = this.counters[e.name];\n    counters.counter += 1;\n    if (e.size !== null) counters.size += parseInt(e.size);\n    counters.display.counter.textContent = counters.counter;\n    if (counters.display.size) counters.display.size.textContent = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(counters.size);\n    this.quotaEstimate();\n  }\n\n  resetCounter(item) {\n    const counters = this.counters[item];\n    ['counter', 'size'].forEach(el => {\n      if (counters.display[el]) {\n        counters[el] = 0;\n        counters.display[el].textContent = 0;\n      }\n    });\n  }\n  resetCounters() {\n    Object.keys(this.options.controls).forEach(key => {\n      this.resetCounter(key);\n    });\n    this.toggleCounters(false);\n  }\n  toggleCounters(show = true) {\n    const el = document.getElementById(this.options.display.progression);\n    if (!el) return;\n    if (show) el.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    else el.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n  }\n\n  initFileCounter(item, opts, i) {\n    const sep = (i) ? ` / ` : ``;\n    let counter = 0;\n    let counterdisplay = null;\n    let size = 0;\n    let sizedisplay = null;\n    // create dom display elements\n\n\n    let boxcounters = document.getElementById(this.options.display.progression);\n\n    const itemopts = {\n      display: {},\n    };\n    Object.entries(opts).forEach(([k, val]) => {\n      const cl = k + 's';\n      const txt = {\n        counter: ' read',\n        size: ' read',\n        counterzipped: ' compressed',\n        sizezipped: ' compressed',\n        counterrejected: ' rejected',\n        countererrorfile: ' error',\n      }\n      const displaylist = ['counterrejected', 'countererrorfile'];\n      let elinsert = boxcounters.querySelector('.' + cl);\n      if (!elinsert) elinsert = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        class: cl\n      }, boxcounters, ``);\n      let el = elinsert.querySelector('.' + val);\n      if (!el) {\n        el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n          class: val,\n        }, elinsert, ` / `);\n        if (txt.hasOwnProperty(val)) {\n          // add a link to display the rejected files list\n          if (displaylist.indexOf(val) >= 0) {\n            const link = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('a', {\n              text: txt[val],\n              class: 'text-error',\n              title: `Click to display the list of ${txt[val]} files`\n            }, elinsert);\n            link.addEventListener('click', (e) => {\n              e.preventDefault();\n              this.displayExcept(link, val);\n            });\n          } else elinsert.append(document.createTextNode(txt[val]));\n        }\n      } else this.resetCounter(item);\n      itemopts.display[k] = el;\n      itemopts[k] = 0;\n    });\n\n    this.counters = { ...this.counters,\n      ...{\n        [item]: itemopts\n      }\n    };\n\n  }\n  displayExcept(el, type) {\n    type = type.replace('counter', '');\n    const textval = {\n      rejected: ` type rejected`,\n      errorfile: ` in error`\n    };\n    if (Object.keys(textval).indexOf(type) < 0) return;\n    const message = {\n      type: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.warning,\n      parent: el,\n      content: `Files ${this.rejected.join('<br>')} ${textval[type]}`,\n    };\n    if (el.dataset.hasmessage) {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.removeMessage(message);\n      delete el.dataset.hasmessage;\n    } else {\n      el.dataset.hasmessage = true;\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage(message);\n    }\n  }\n\n  showControl(action, opts) {\n    const part = (opts && opts.part) ? opts.part : false;\n    const bigfile = (opts && opts.bigfile) ? opts.bigfile : false;\n    const filepath = (opts && opts.path) ? opts.path : this.uploadentry.getCurrentDirPath();\n    const target = ((opts.hasOwnProperty('bigfile') && bigfile !== false) ? 'zipped' : 'zip');\n    let message, text = null;\n    // 'zip' ---only btn for zip actions for the moment\n    const btn = this[this.options.btnprefix + 'zip' + target];\n    if (!btn) return;\n    btn.disabled = false;\n    let click_btn=false;\n    switch (action) {\n      case this.eventnames.ready:\n        this.resetCounters();\n        if (this.uploadentry) {\n          this.uploadentry.list();\n          this.uploadentry = null;\n        }\n        message = null;\n        break;\n      case this.eventnames.follow:\n        if (bigfile) {\n          console.log(' follow', opts);\n          message = {};\n          btn.textContent = `Wait for next operation`;\n          btn.disabled = true;\n        } else message = null;\n\n        break;\n      case this.eventnames.bigfile:\n        if (bigfile && bigfile !== '') {\n          btn.textContent = `Upload big File separately`;\n          message = {\n            name: this.eventnames.bigfile,\n            path: filepath,\n            part: part,\n            bigfile: bigfile\n          };\n        }\n        break;\n        case this.eventnames.endzip:\n        if (!part) this.showComplete();\n        // combine endzip and upload for prod\n        btn.textContent = `Upload zip file` + ((part) ? ` ` + part : ``);\n        btn.title = (part) ? `Your file is too big - you have to send this part before continuing to process the directory` : `Click to send zip file`;\n       /* btn.textContent = `Close zip file` + ((part) ? ` ` + part : ``);\n        btn.title = (part) ? `Your file is too big - you have to send this part before continuing to process the directory` : `Click to end zip file`;*/\n        message = {\n          name: this.eventnames.endzip,\n          part: part,\n          filepath: filepath,\n          path: filepath,\n          bigfile: bigfile,\n        };\n        break;\n    case this.eventnames.sendfile:\n        btn.dataset.message = JSON.stringify({\n          name: this.eventnames.sendfile,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        });\n        // send file , 2 steps are for tests - timeout for zip.end() in dirtozip\n        setTimeout( () => {this.emitToZip(btn);},1000);\n        return;\n        //btn.textContent = `Upload zip file`;\n        //if (message.bigfile && message.bigfile !== '') btn.textContent += ` ` + opts;\n        break;\n      case this.eventnames.pending:\n        btn.textContent = ` Pending ` + ((target !== 'zip') ? ' big file' : '');\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.gzip:\n        text = `compressing big file :${(opts && opts.bigfile)?filepath :``} ${(opts && opts.size)?(0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(opts.size):``}`;\n        btn.textContent = text;\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.terminate:\n      console.log('terminate')\n        btn.dataset.message = JSON.stringify({\n          name: this.eventnames.init,\n          bigfile: bigfile,\n          part: part,\n          path: filepath\n        });\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n        btn.click();\n        return;\n        break;\n      case this.eventnames.errorfile:\n        this.errorfile.push(filepath);\n      case this.eventnames.error:\n        btn.textContent = (opts.text) ? opts.text : `Error`;\n        message = {\n          name: opts.name,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        console.log('????????ERROR??????????????????????????????????????--- errorcontrol' + action, message);\n        break;\n      default:\n        console.log('??????????????????????????????????????????????----default control ' + action, opts);\n        return;\n        break;\n    }\n    if (message === null) {\n      delete btn.dataset.message;\n      btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide)\n    } else {\n      btn.dataset.message = JSON.stringify(message);\n      btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n      if (btn.disabled) {\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n        btn.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.html_spinner)('text-stone-200 ml-1 mr-2 align-text-bottom inline-block'));\n      } else btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n    };\n\n  }\n\n  getBtn(item, target) {\n    const btnkey = this.options.btnprefix + item + target;\n    if (this[btnkey]) return this[btnkey];\n    const display = this.options.controls[item].btn[target];\n    const btn = document.getElementById(display);\n    const parent = this.displayprogression;\n    if (!btn) {\n      this[btnkey] = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('button', {\n        id: display,\n        class: [display, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide].concat(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button.split(' '))\n      }, parent);\n      this[btnkey].addEventListener('click', async (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.emitToZip(e.currentTarget);\n      });\n    } else parent.append(btn);\n    return this[btnkey];\n  }\n\n  initControls() {\n    Object.entries(this.options.controls).forEach(([key, control], i) => {\n      this.initFileCounter(key, control.display, i);\n      if (control.btn) this.activateControls(key, control.btn);\n    });\n  }\n  activateControls(key, btns) {\n    Object.keys(btns).forEach((btn) => {\n      this[this.options.btnprefix + key + btn] = this.getBtn(key, btn);\n    })\n\n  }\n\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/js-my-files.js\n")}}]);