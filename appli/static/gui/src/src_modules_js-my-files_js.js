/*! For license information please see src_modules_js-my-files_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-my-files_js"],{"./src/modules/files/js-dirlist.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsDirList: () => (/* binding */ JsDirList),\n/* harmony export */   eventEntry: () => (/* binding */ eventEntry)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n\n\n/*import {\n  tooltips_eventnames\n} from '../../modules/tooltips.js';*/\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\n// local css\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash = 'intrash'\nconst eventEntry = new CustomEvent('eventEntry', {\n  detail: () => {\n    console.log('customevent', undefined.entry)\n  },\n})\nconst defaultOptions = {\n  api_parameters: {\n    entry: 'entry',\n    dest: 'dest',\n    rootname: 'My Files'\n  },\n  url: '/gui/files',\n  controls: {\n    scan: {\n      display: {\n        counter: 'counter',\n        size: 'size',\n      }\n    },\n    zip: {\n      btn: {\n        zip: 'makezip',\n        zipped: 'makezipped'\n      },\n      display: {\n        size: 'sizezipped',\n        counter: 'counterzipped',\n      }\n    },\n\n  },\n  upload: {\n    label: 'upload'\n  },\n  btnprefix: 'btn',\n  btnfilelist: null,\n  entry: {\n    selector: '[data-name]',\n\n    tags: {\n      tag: 'ul',\n      subtag: 'li',\n      label: 'span'\n    },\n    selectors: {\n      entries: '.entries'\n    },\n    draggable: true,\n    prefix: `entry`,\n    type: {\n      root: \"R\",\n      trash: \"T\",\n      directory: \"D\",\n      file: \"F\",\n      trashed: \"X\",\n    },\n    specialdirs: [\"R\", \"T\"],\n    trash_dir_name: 'trash.',\n    css: {\n      on: 'on',\n      entryF: 'entryF',\n      entryD: 'entryD',\n      entryR: 'entryR',\n      entryT: 'entryT',\n      editable: 'editable',\n      dragging: 'dragging',\n      dragover: 'dragover',\n      dragitem: 'dragitem'\n    },\n    icons: {\n      image: 'img',\n      document: 'doc'\n    },\n  },\n  entrycontrols: {\n    selectors: {\n      typentries: '[data-typentries]',\n      hascontrols: '.has-controls',\n    },\n    controls: {\n      list: {\n        action: 'list',\n        typentries: ['D', 'R', 'T']\n      },\n      create: {\n        action: 'create',\n        text: 'new folder',\n        icon: 'icon-folder-plus',\n        typentries: ['D', 'R']\n      },\n      remove: {\n        action: 'remove',\n        text: 'delete',\n        icon: 'icon-trash',\n        typentries: ['D', 'F', 'X']\n      },\n      move: {\n        action: 'move',\n        typentries: ['D', 'F']\n      },\n      rename: {\n        action: 'rename',\n        trigger: 'dblclick',\n        typentries: ['D', 'F']\n      }\n    },\n    css: {\n      entrycontrols: 'entrycontrols',\n      entries: '.entries',\n    }\n  },\n  selectors: {\n    doupload: '.target-upload',\n    droptarget: '.droptarget',\n    dirlist: '.dirlist',\n    uploadfile: 'uploadfile',\n    displayimport: 'displayimport',\n    trigger: '.trigger',\n  },\n}\nclass Entry {\n  _events;\n  eventnames;\n  name;\n  type;\n  label;\n  entries = [];\n  options = {\n    selector: '[data-name]',\n    tags: {\n      tag: 'ul',\n      subtag: 'li',\n      label: 'span'\n    },\n    selectors: {\n      entries: '.entries'\n    },\n    css: {\n      on: 'on',\n    },\n    draggable: true,\n    prefix: `entry`,\n  };\n\n  constructor(entry, options = {}) {\n    this.name = entry.name;\n    this.type = entry.type;\n    this.root = options.root;\n    this.parent = (options.parent) ? options.parent : null;\n    this.options = Object.assign(this.options, defaultOptions);\n    this.options = Object.assign(this.options, options);\n    this.label = (options.label) ? options.label : null;\n    this.init(entry);\n    return this;\n  }\n  init(entry) {\n    //\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    const dataset = {\n      name: this.name,\n      type: this.type\n    }\n    if (this.label !== null) dataset.label = this.label;\n    const el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.tags.subtag, {\n      draggable: this.options.draggable,\n      dataset: dataset,\n    });\n    const cl = (this.options.class) ? this.options.class : [];\n    cl.unshift(`${this.options.prefix}${this.type}`);\n    this.label = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.tags.label, {\n      class: cl,\n      text: (entry.label) ? entry.label : entry.name\n    }, el);\n    this.container = el;\n    this.initEvents();\n  }\n  initEvents() {\n    Object.entries(this.options.actions).forEach(([key, action]) => {\n      this.on(action, (e) => {\n        this[key](e);\n      });\n    });\n  }\n  getParent() {\n    return this.parent;\n  }\n  getLabelElement() {\n    return this.label;\n  }\n  getParentElement() {\n    return this.container.parentElement.closest(this.options.selector);\n  }\n\n  getEntries() {\n    return this.entries;\n  }\n  getEntriesElement(create = false) {\n    let entries = this.container.querySelector(this.options.selectors.entries);\n    if (create && entries === null) {\n      return (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.tags.tag, {\n        class: this.options.selectors.entries.substr(1)\n      }, this.container);\n    }\n    return entries;\n  }\n\n  appendEntry(entry) {\n    if (entry.parent) {\n      const n = entry.parent.entries.indexOf(entry);\n      delete entry.parent.entries[n];\n    }\n    entry.parent = this;\n    this.entries.push(entry);\n    const parent = this.getEntriesElement(true);\n    parent.append(entry.container);\n    return entry;\n  }\n  createEntry(entry) {\n    const new_entry = new Entry(entry);\n    this.appendEntry(new_entry);\n  }\n\n  findEntry(name) {\n    const entries = this.getEntries();\n    for (const entry of entries) {\n      if (entry.name === name) return entry;\n    }\n    return null;\n  }\n  //\n  createListEntries(listentries) {\n    const direntry = this.getEntriesElement(true);\n    listentries.forEach(entries => {\n      entries.forEach((entry) => {\n        const new_entry = this.createEntry(entry);\n\n      });\n    });\n  }\n  removeEntries() {\n    this.entries = [];\n    const el = this.getEntriesElement();\n    if (el) el.remove();\n  }\n  isOn() {\n    return this.active;\n\n  }\n\n  toggleOn() {\n    this.active = !(this.active);\n    this.container.classList.toggle(this.options.css.on);\n  }\n  setOff() {\n    this.active = false;\n    this.container.classList.remove(this.options.css.on);\n  }\n  emitEvent(action = null, ev = null) {\n    const self = this;\n    const detail = {\n      entry: self,\n    }\n    if (action) detail.action = action;\n    if (ev) detail.event = ev;\n    eventEntry.initCustomEvent('eventEntry', true, true, detail);\n    window.dispatchEvent(eventEntry);\n  }\n  moveHandlers() {\n    return [{\n      name: 'dragstart',\n      func: (e) => {\n        this.handleDragStart(e);\n      }\n    }, {\n      name: 'dragend',\n      func: (e) => {\n        this.handleDragEnd(e);\n      }\n    }];\n  }\n  dropHandlers() {\n    return [{\n      name: 'dragover',\n      func: (e) => {\n        this.handleDragOver(e);\n      }\n    }, {\n      name: 'drop',\n      func: (e) => {\n        this.handleDrop(e);\n      }\n    }];\n  }\n  handleDrop(e) {\n    e.stopPropagation();\n  }\n  addListeners() {\n    let func = (e) => {\n      e.stopImmediatePropagation();\n      this.dirControls(() => {\n        this.emitEvent(this.eventnames.attach);\n      });\n    };\n    let listeners = []\n    if ([this.options.type.root, this.options.type.trash].indexOf(this.type) < 0) {\n      listeners = this.moveHandlers();\n      if (this.type === this.options.type.file) {\n        func = (e) => {\n          e.stopImmediatePropagation();\n          this.toggleOn();\n          this.emitEvent();\n        }\n      } else if (this.isInTrash()) {\n        this.type = this.options.type.trashed;\n      } else listeners = listeners.concat(this.dropHandlers());\n      this.listenRename();\n    } else listeners = listeners.concat(this.dropHandlers());\n    listeners.unshift({\n      name: 'click',\n      target: 'label',\n      func: func\n    });\n    for (const listener of listeners) {\n      const el = (listener.target === 'label') ? this.getLabelElement() : this.container;\n      el.addEventListener(listener.name, listener.func);\n    }\n  }\n  removeListeners(listeners) {\n    for (const listener in listeners) {\n      const el = (listener.target === 'label') ? this.getLabelElement() : this.container;\n      el.removeEventListener(listener.label, listener.func);\n    }\n  }\n  destroy() {\n    this.container.remove();\n  }\n\n  handleDragStart(e) {\n    e.stopImmediatePropagation();\n    this.container.classList.add(this.options.css.dragging);\n    e.dataTransfer.effectAllowed = 'move';\n    this.emitEvent('dragstart', e);\n  }\n  handleDragOver(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.emitEvent('dragover', e);\n    return;\n  }\n  handleDragEnd(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (this.container.classList.contains(this.options.css.dragging)) this.container.classList.remove(this.options.css.dragging);\n    this.emitEvent('dragend', e);\n  }\n  resetDragOver() {\n    document.querySelectorAll('.' + this.options.css.dragover).forEach(el => {\n      el.classList.remove(this.options.css.dragover);\n    });\n  }\n  handleDrop(e) {\n    /***/\n    e.stopImmediatePropagation();\n    this.emitEvent('drop', e);\n  }\n\n  unMove() {\n    if (this.from) {\n      this.move(this.from);\n      this.from.container.append(this);\n      this.from = null;\n    }\n  }\n}\n\nclass EntryAction extends Entry {\n  eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    istrashdir: 'istrashdir',\n    trashed: 'trashed',\n    editable: 'editable'\n  }\n  isTrashDir(name = null) {\n    return ((name === null) ? this.name : name).indexOf(this.options.trash_dir_name) === 0;\n  }\n  isInTrash(path = null) {\n    path = (path === null) ? this.getCurrentDirPath() : path;\n    if (path === null) (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.stop_on_error)('path_not_found');\n    path = path.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n    return (path.length > 1 && path[0].indexOf(this.options.trash_dir_name)) === 0;\n  }\n\n  setWait() {\n    this.loaded = this.container.dataset.loaded = false;\n    this.container.classList.add('wait');\n  }\n  setLoaded() {\n    this.container.classList.remove('wait');\n    this.loaded = this.container.dataset.loaded = true;\n  }\n\n  dirControls(callback = null) {\n    const el = this.container;\n    if (el.dataset.action === \"create\") return;\n    this.toggleOn();\n    if (this.isOn()) this.dirActivate(callback).then(() => {\n      this.emitEvent();\n    });\n\n  }\n\n  async dirActivate(callback = null) {\n    if (!this.loaded) this.list().then(() => {\n      if (callback) callback(this);\n    });\n    else if (callback) callback(this);\n  }\n\n  getCurrentDirPath() {\n    const current_path = (entry, dirs = []) => {\n      if (entry.name) {\n        dirs.push(entry.name);\n        entry = entry.getParent();\n        if (entry !== null) return current_path(entry, dirs);\n      }\n      return dirs;\n    }\n    let dirs = current_path(this);\n    if (dirs.length > 1) dirs = dirs.reverse();\n    return dirs.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n  }\n\n  async fetchAction(action, callback = null, callback_error = null) {\n    const api_parameters = this.options.api_parameters;\n    const label = this.getLabelElement();\n    let entrypath = this.getCurrentDirPath();\n    if (entrypath === '') return;\n    const data = new FormData();\n    data.append(api_parameters.entry, entrypath);\n    switch (action) {\n      case this.options.actions.create:\n        if (label === null) return;\n        entrypath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        entrypath[entrypath.length - 1] = label.textContent;\n        if (entrypath !== \"\") data.set(api_parameters.entry, entrypath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n      case this.options.actions.move:\n        // get new path - append item to drop directory\n        if (callback !== null) {\n          let destpath = callback();\n          callback = null;\n          if (destpath === entrypath) {\n            console.log('dest = entry', destpath);\n            return;\n          }\n          data.append(api_parameters.dest, destpath);\n        } else return;\n        break;\n      case this.options.actions.rename:\n        const destpath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        destpath[destpath.length - 1] = label.textContent;\n        if (destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator) === entrypath) return;\n        data.append(api_parameters.dest, destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n      default:\n        this.emit('EventEntry', {\n          entry: this,\n          detail: {\n            action: action\n          }\n        });\n        break;\n    }\n    const response = await fetch(this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + action, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)({\n      method: \"POST\",\n      body: data\n    }));\n    const json = await response.json();\n    if (json.status === 200) {\n      if (callback) callback(json.message);\n      return true;\n    } else {\n      if (callback_error) callback_error(json);\n      else (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.stop_on_error)(json);\n    }\n  }\n  listenRename(evt = 'dblclick') {\n    const entry = this;\n    const label = entry.getLabelElement();\n    label.addEventListener(evt, (e) => {\n      label.dataset.oldname = label.textContent;\n      if (this.type === this.options.type.trash) {\n        e.preventDefault();\n        return;\n      }\n      entry.setEditable();\n    });\n    // remove editable when click on entry\n    entry.container.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      entry.setEditable(false);\n      if (entry.container.dataset.action === entry.options.actions.create) entry.container.remove();\n    });\n  }\n  setEditable(on = true) {\n    const entry = this;\n    const label = entry.getLabelElement();\n    const send_rename = async (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        if (label.dataset.oldname && label.dataset.oldname !== label.textContent) {\n          const callback = (txt) => {\n            if (txt === \"\") window.alertbox.addItemMessage(label, {\n              type: 'error',\n              content: window.alertbox.i18nmessages.exists,\n              duration: 2000\n            });\n            else txt = txt.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator).pop();\n            label.textContent = txt;\n            if (entry.type === entry.options.type.directory) entry.dirControls();\n            delete entry.container.dataset.action;\n          }\n          const action = (entry.container.dataset.action) ? entry.container.dataset.action : entry.options.actions.rename;\n          await entry.fetchAction(action, callback);\n        }\n        entry.setEditable(false);\n      }\n    }\n    if (on === true) {\n      label.contentEditable = true;\n      entry.container.draggable = false;\n      label.classList.add(entry.options.css.editable);\n      label.addEventListener('keydown', send_rename);\n    } else {\n      label.contentEditable = false;\n      label.classList.remove(entry.options.css.editable);\n      label.removeEventListener('keydown', send_rename);\n      entry.container.draggable = (entry.options.specialdirs.indexOf(entry.type) < 0);\n    }\n  }\n  createEntry(entry) {\n    const ext = entry.name.split('.').pop();\n    const options = this.options;\n    options.draggable = (options.specialdirs.indexOf(entry.type) < 0);\n    options.class = [];\n    if (this.isTrashDir(entry.name)) entry.type = this.options.type.trash;\n    const cl = (entry.type === options.type.file) ? (filter_files.images.split(',').indexOf(ext) >= 0) ? options.icons.image : options.icons.document : null;\n    if (cl !== null) options.class.push(cl);\n    const new_entry = new EntryAction(entry, options);\n    this.appendEntry(new_entry);\n    new_entry.addListeners();\n    if (entry.type === this.options.type.trash) new_entry.emitEvent(this.eventnames.istrashdir);\n    return new_entry;\n  }\n  findEntry(name, type) {\n    const entries = this.getEntries();\n    for (const entry of entries) {\n      if (entry.name === name && entry.type === type) return entry;\n    }\n    return null;\n  }\n  async list() {\n    if (this.type === this.options.type.file) return;\n    const tag = this.options.tags.tag;\n    const subtag = this.options.tags.subtag;\n    const subdir = (this.name) ? this.getCurrentDirPath() : null;\n    this.setWait();\n    this.removeEntries();\n    const fetchoptions = {\n      headers: new Headers({\n        'content-type': 'application/json'\n      })\n    }\n    const response = await fetch(this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + this.options.actions.list + ((subdir) ? _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + subdir : ''), (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)(fetchoptions));\n    const json = await response.json();\n    if (response.ok) {\n      if (json.entries && json.entries.length) {\n        let files = [],\n          directories = [],\n          entries = json.entries;\n        while (entries.length > 0) {\n          const entry = entries.shift();\n          if (entry.type === this.options.type.file) files.push(entry);\n          else directories.push(entry);\n        };\n        files.sort((a, b) => (a.name < b.name));\n        directories.sort((a, b) => (a.name < b.name));\n        this.createListEntries([directories, files]);\n      }\n      this.setLoaded();\n    } else {\n      window.alertbox.addItemMessage({\n        parent: this.container,\n        type: \"error\",\n        content: json.error + ' ' + json.text\n      })\n    }\n\n  }\n  remove() {\n    if (this.isTrashDir()) return;\n\n    this.fetchAction(this.options.actions.remove).then(ret => {\n      this.setParent(null);\n      this.removeListeners(this.dropHandlers());\n      this.setOff();\n      this.container.animate({\n        transform: \"translateX(-100%) scale(0)\"\n      }, {\n        duration: 1000\n      });\n      setTimeout(() => {\n        if (this.isInTrash(this.from)) this.destroy();\n        else this.emitEvent(this.eventnames.trashed);\n      }, 1000);\n\n    });\n  }\n  create() {\n    const new_entry = this.createEntry({\n      type: 'D',\n      name: 'NewFolder'\n    });\n    // move new entry to top of the list\n    const entries = this.getEntriesElement();\n    entries.prepend(new_entry.container);\n    new_entry.container.dataset.action = this.options.actions.create;\n    new_entry.label.dispatchEvent(new Event('dblclick'));\n  }\n  rename() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.rename).then(() => {\n      console.log('renamed', this)\n    });\n  }\n\n  move(dest, callback = null) {\n    if (this.isTrashDir()) return;\n    if ([this.options.type.trash, this.options.type.trashed].indexOf(dest.type) >= 0) return this.remove();\n    this.fetchAction(this.options.actions.move, () => {\n      return dest.getCurrentDirPath() + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + this.name;\n    }).then(() => {\n      this.setParent(dest);\n      if (callback !== null) callback();\n    }).catch(err => {\n      console.log('errmove', err)\n    });\n  }\n  setParent(dest) {\n    this.from = this.getCurrentDirPath();\n    if (dest !== null) {\n      dest.entries.push(this);\n      this.parent = dest;\n      const entries = dest.getEntriesElement(true);\n      entries.append(this.container);\n    }\n    const i = this.parent.entries.indexOf(this);\n    if (i >= 0) delete this.parent.entries[i];\n    else console.log('entry not found in parent entries', this.parent);\n\n  }\n}\n\nclass JsEntryControls {\n  _events = {};\n  eventnames = {\n    control: 'control',\n    error: 'error',\n  }\n  options = defaultOptions.entrycontrols;\n  box;\n  container;\n  entry = null;\n  constructor(container = document, options = {}) {\n    if (!container.jsentrycontrols) {\n      this.options = Object.assign(this.options, options);\n      this.container = container;\n      this.entry = null;\n      this.init();\n      container.jsentrycontrols = this;\n    }\n    return container.jsentrycontrols;\n  }\n  init() {\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    this.createControls();\n    this.initEvents();\n    /*global_event_dispatcher.emit(tooltips_eventnames.tooltips, {\n      target: this.box\n    });*/\n  }\n  addControl(control, position = null) {\n    const ctrl = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {});\n    const l = this.box.children.length;\n    if (position === null || l < position + 1) this.box.append(ctrl);\n    else if (position === 0 || l === 0) this.box.prepend(ctrl);\n    else this.box.inserBefore(crtl, this.box.children[position]);\n    if (control.typentries) ctrl.dataset.typentries = control.typentries;\n    if (control.icon) {\n      const icon = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('i', {\n        class: ['icon', control.icon]\n      }, ctrl);\n      ctrl.dataset.title = control.text;\n    } else ctrl.textContent = control.text;\n    //add listener\n    const evt = (control.trigger) ? control.trigger : 'click';\n    const func = (e) => {\n      if (this.entry === null) return;\n      const detail = {\n        callback: () => {\n          console.log('done', control.action);\n        }\n      }\n      this.entry.emit(control.action, detail);\n    }\n    ctrl.addEventListener(evt, func);\n    //\n    control.ctrl = ctrl;\n  }\n  createControls() {\n    this.box = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n      class: [this.options.css.entrycontrols, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide]\n    });\n    Object.values(this.options.controls).filter(control => (control.icon || control.text)).forEach(control => {\n      this.addControl(control);\n    });\n  }\n  initEvents() {}\n  detachControls() {\n    if (this.entry === null) return;\n    this.entry.container.classList.remove(this.options.selectors.hascontrols.substr(1));\n    this.box.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    this.box.disabled = true;\n    this.container.append(this.box);\n    this.entry = null;\n  }\n\n  attachControls(entry) {\n    this.detachControls();\n    this.entry = entry;\n    this.entry.container.prepend(this.box);\n    this.entry.container.classList.add(this.options.selectors.hascontrols.substr(1));\n    this.activateControls();\n    this.box.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    delete this.box.disabled;\n  }\n  activateControl(control, isintrash) {\n    const ctrl = control.ctrl;\n    const typentries = (ctrl.dataset.typentries) ? ctrl.dataset.typentries.split(',') : [];\n    const type = (isintrash) ? this.entry.options.type.trashed : this.entry.container.dataset.type;\n    if (typentries.indexOf(type) >= 0) {\n      ctrl.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    } else ctrl.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n  }\n  activateControls() {\n    if (this.entry === null) return;\n    // add btns\n    const isintrash = this.entry.isInTrash();\n    Object.values(this.options.controls).filter(control => (control.icon || control.text)).forEach(control => {\n      this.activateControl(control, isintrash);\n    });\n    //\n  }\n}\n\nclass JsDirList {\n  _events = {};\n  eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    action: 'action',\n    complete: 'complete',\n    error: 'error',\n  }\n  options = defaultOptions;\n\n  constructor(parent, options = {}) {\n    if (!parent.jsdirlist) {\n      parent = (parent instanceof HTMLElement) ? parent : document.querySelector(parent);\n      if (!parent) return;\n      this.options = Object.assign(this.options, options);\n      this.options.entry.url = this.options.url;\n      this.container = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(this.options.entry.tags.tag, {\n        class: this.options.selectors.dirlist.substr(1)\n      }, parent);\n      this.init();\n      this.container.append(this.root.container);\n      parent.jsdirlist = this;\n    }\n    return parent.jsdirlist;\n  }\n\n  init() {\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    const type = this.options.entry.type.root;\n    const obj = {};\n    this.entrycontrols = (this.options.controls) ? new JsEntryControls(this.container, this.options.entrycontrols) : null;\n    Object.entries(this.options.entrycontrols.controls).forEach(([key, control]) => {\n      obj[key] = control.action;\n    });\n    this.options.entry.actions = obj;\n    this.initEvents();\n    const options = this.options.entry;\n    options.draggable = false;\n    this.root = new EntryAction({\n      type: type,\n      name: '',\n      label: this.options.api_parameters.rootname,\n      root: this\n    }, options);\n\n    this.root.addListeners();\n\n  }\n  initEvents() {\n    // events controls on entries\n    const self = this;\n    // alerts on error\n    this.on(this.eventnames.error, (e) => {\n      console.log('dirlist receive error message', e)\n      if (window.alertbox) {\n        window.alertbox.renderAlert({\n          type: window.alertbox.alertconfig.types.error,\n          content: e,\n          inverse: true,\n          dismissible: true\n        });\n      }\n    });\n    window.addEventListener('eventEntry', (e) => {\n      const eventnames = e.detail.entry.eventnames;\n      switch (e.detail.action) {\n        case eventnames.istrashdir:\n          if (this.trashdir) this.trashdir.container.remove();\n          this.trashdir = e.detail.entry;\n          this.root.container.parentElement.insertBefore(e.detail.entry.container, this.root.container);\n          this.root.container.append(e.detail.entry.container);\n          break;\n        case eventnames.trashed:\n          let parent = e.detail.entry.parent;\n          if (e.detail.entry.isInTrash(e.detail.entry.from)) {\n            parent = this.root;\n          } else {\n            this.moveEntry(e.detail.entry, this.trashdir);\n            e.detail.entry.container.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash);\n          }\n          this.attachControls(parent);\n          break;\n        case eventnames.attach:\n          // no upload on trash dir\n          const type = (e.detail.entry.isInTrash()) ? e.detail.entry.options.type.trashed : e.detail.entry.container.dataset.type;\n          if (type === e.detail.entry.options.type.trash) return;\n          if (e.detail.action === eventnames.attach && type === e.detail.entry.options.type.trashed) return;\n          this.attachControls(e.detail.entry);\n          break;\n        case \"dragstart\":\n          this.dragentry = this.activentry = e.detail.entry;\n          e.detail.entry.container.classList.add(e.detail.entry.options.css.dragging);\n          this.detachControls();\n          break;\n        case \"dragover\":\n          if (!this.dragentry) return;\n          if (this.overitem !== e.detail.entry.container) {\n            if (this.overitem) this.overitem.classList.remove(e.detail.entry.options.css.dragover);\n            e.detail.entry.container.classList.add(e.detail.entry.options.css.dragover);\n            this.overitem = e.detail.entry.container;\n          }\n          break;\n        case \"dragend\":\n          this.dragentry = null;\n          if (this.overitem) this.overitem.classList.remove(e.detail.entry.options.css.dragover);\n          this.overitem = null;\n          break;\n        case \"drop\":\n          if (!this.dragentry) {\n            this.emit(this.eventnames.action, e);\n            return true;\n          } else {\n            console.log(' dragentry drop', e.detail.entry.name);\n          }\n          //e.stopPropagation();\n          const el = this.dragentry.container;\n          const dest_entry = e.detail.entry;\n          dest_entry.resetDragOver();\n          if (this.dragentry !== null) {\n            if (this.dragentry.options.actions.move) {\n              try {\n                this.dragentry.move(dest_entry);\n                if ([this.dragentry.options.type.trashed].indexOf(dest_entry.type) >= 0) this.attachControls(dest_entry);\n              } catch (error) {\n                console.log('errordrop ', error)\n                this.dragentry.unMove();\n              }\n            } else console.log('noactionon drop');\n\n          } else console.log(' parent===null or dragitem===null or dragitem===parent', this.dragentry)\n\n          break;\n        case eventnames.editable:\n          if (this.editable) this.editable.setEditable(false);\n          break;\n\n        default:\n\n          if (e.detail.action && this[e.detail.action]) {\n            console.log('edtailaction', e.detail.action)\n            console.log(' function exists', this[e.detail.action]);\n            return;\n          }\n          if (e.detail.entry.active) {\n            this.attachControls(e.detail.entry);\n          } else this.attachControls(this.root);\n          break;\n      }\n    });\n  }\n  moveEntry(entry, dest) {\n    entry.from = entry.getCurrentDirPath();\n    const trdirs = entry.from.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n    trdirs.pop();\n    trdirs.forEach((trdir, index) => {\n      const type = (dest.type === dest.options.type.trash) ? dest.options.type.trashed : dest.type;\n      let subdest = dest.findEntry(trdir, type);\n      if (subdest === null) {\n        subdest = dest.createEntry({\n          type: entry.options.type.directory,\n          name: trdir\n        });\n      }\n      dest = subdest;\n    });\n    if (dest.findEntry(entry.name, entry.type) === null) dest.appendEntry(entry);\n  }\n\n  attachControls(entry) {\n    if (this.entrycontrols) this.entrycontrols.attachControls(entry);\n    this.activentry = entry;\n    this.emit(this.eventnames.attach, {\n      entry: this.activentry\n    });\n  }\n\n  detachControls() {\n    const dest = (this.activentry) ? ((this.activentry.parent) ? this.activentry.parent : this.root) : this.root;\n    if (this.entrycontrols) this.entrycontrols.attachControls(dest);\n    this.activentry = dest;\n    this.emit(this.eventnames.attach, {\n      entry: dest\n    });\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/files/js-dirlist.js\n")},"./src/modules/js-my-files.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsMyFiles: () => (/* binding */ JsMyFiles)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/files/js-dirlist.js */ \"./src/modules/files/js-dirlist.js\");\n\n\n\nconst objaccept = {\n  \"image/*\": [\".png\", \".jpeg\", \".jpg\"],\n  \"text/tab-separated-values\": [\".tsv\"],\n  \"application/zip\": [\".zip\"],\n  \"application/gzip\": [\".gz\"],\n  \"application/x-bzip\": [\".bz\"],\n  \"application/x-bzip2\": [\".bz2\"]\n}\nconst accept = Object.values(objaccept).reduce((a, b) => a.concat(b));\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button = 'button p-1 mx-auto sm:mr-4 mb-4';\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\nclass JsMyFiles {\n  done = true;\n  jsDirToZip = null;\n  jsDirList = null;\n  trash_dir_name = 'trash.';\n  counters = {};\n  _events = {};\n  eventnames = {\n    complete: 'complete',\n    error: 'error',\n  };\n  rejected = [];\n  errorfile = [];\n\n  constructor(container, options = {}) {\n    if (!container.jsmyfiles) {\n      container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n      if (!container) return;\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dom_purify)(container, 'dataset');\n      this.container = container;\n      const defaultOptions = {\n        controls: {\n          scan: {\n            display: {\n              counter: 'counter',\n              size: 'size',\n            }\n          },\n          zip: {\n            btn: {\n              zip: 'makezip',\n              zipped: 'makezipped'\n            },\n            display: {\n              size: 'sizezipped',\n              counter: 'counterzipped',\n            }\n          },\n          reject: {\n            display: {\n              counter: 'counterrejected'\n            }\n          },\n          errorfile: {\n            display: {\n              counter: 'countererrorfile'\n            }\n          }\n        },\n        upload: {\n          label: 'upload'\n        },\n        btnprefix: 'btn',\n        btnfilelist: null,\n        selectors: {\n          droptarget: '.droptarget',\n          trigger: '.trigger',\n          uploadfile: 'uploadfile',\n        },\n        display: {\n          progression: 'display-progression',\n          dropzone: 'dropzone',\n          boxtitle: 'boxtitle',\n          counters: 'counters',\n          sizes: 'sizes',\n          timers: 'timers'\n        },\n\n        css: {\n          dragover: 'dragover'\n        }\n      };\n      this.options = Object.assign(defaultOptions, options);\n      this.options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : ['directory', 'file'];\n      this.haspicker = (window.showDirectoryPicker);\n      this.options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : ['directory', 'file'];\n      this.init();\n      container.jsmyfiles = this;\n    }\n    return container.jsmyfiles;\n  }\n  init() {\n    // create dirlist box\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    this.addDisplayProgression();\n\n    this.addDirList();\n    this.addDropzone();\n    this.initControls();\n    this.initEvents().then(() => {\n      this.resetCounters();\n    });\n  }\n  initTimer() {\n    this.timer = new Date();\n  }\n  async initEvents() {\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    //To be refactored - for steppers )\n    this.on(this.eventnames.processed, async (e) => {\n      if (this.nextaction) await this.nextaction();\n    });\n    // alerts on error\n    this.on(this.eventnames.error, (e) => {\n      console.log('scandir receive error message', e)\n      if (window.alertbox) {\n        window.alertbox.renderAlert({\n          type: window.alertbox.alertconfig.types.error,\n          content: e,\n          inverse: true,\n          dismissible: true\n        });\n      }\n    });\n    const self = this;\n    if (this.options.controls.zip) {\n      const {\n        JsDirToZip\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_fflate_esm_browser_js\"), __webpack_require__.e(\"src_modules_files_js-dirtozip_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-dirtozip.js */ \"./src/modules/files/js-dirtozip.js\"));\n      this.jsDirToZip = new JsDirToZip();\n      Object.keys(this.jsDirToZip.eventnames).forEach((key) => {\n        this.eventnames[key] = this.jsDirToZip.eventnames[key];\n        this.jsDirToZip.on(key, (e) => {\n          switch (key) {\n            case this.eventnames.clientcounter:\n              this.fileCounter(e);\n              break;\n            case this.eventnames.reject:\n              this.rejected.push(e.path);\n              this.fileCounter({\n                name: 'reject',\n                path: e.path,\n              });\n              break;\n            case this.eventnames.follow:\n            case this.eventnames.complete:\n              if (!e || !e.hasOwnProperty(\"name\") || e.name === \"\") {\n                console.log('no emit complete name' + key, e);\n                return;\n              }\n              self.showControl(e.name, e);\n              break;\n            case this.eventnames.message:\n              switch (e.name) {\n                case 'console':\n                  this.addConsoleMessage({\n                    id: (e.id) ? e.id : null,\n                    content: e.message,\n                    parent: this.container\n                  });\n                  break;\n                case window.alertbox.alertconfig.types.error:\n                case window.alertbox.alertconfig.types.success:\n                case window.alertbox.alertconfig.types.danger:\n                case window.alertbox.alertconfig.types.info:\n                  window.alertbox.renderAlert({\n                    type: e.name,\n                    content: e.message,\n                    dismissible: true,\n                    inverse: false\n                  });\n                  console.log('error', e);\n                  break;\n                default:\n                  console.log('message', e);\n                  break;\n              }\n              break;\n          }\n        });\n      });\n    }\n    window.addEventListener('beforeunload', (e) => {\n      if (!this.done) {\n        e.preventDefault();\n        e.returnValue = (this.options.preventclose) ? this.options.preventclose : `Some work is in progress in this window.\\nAre you sure you want to leave?`;\n      }\n    });\n  }\n  emitToZip(btn) {\n    const message = (btn.dataset.message) ? JSON.parse(btn.dataset.message) : null;\n    if (!message) btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (message) {\n      if (message.name) {\n        const name = message.name;\n        delete message.name;\n        this.jsDirToZip.emit(name, message);\n      }\n    }\n    if (name === this.eventnames.sendfile) btn.disabled = true;\n  }\n\n  quotaEstimate(obj) {\n    return this.jsDirToZip.quotaEstimate();\n  }\n  scanBrowse(e, options) {\n    return this.jsDirToZip.scanBrowse(e, options);\n\n  }\n  scanHandle(dir, options) {\n    return this.jsDirToZip.scanHandle(dir, options);\n  }\n  async handleBrowse(e) {\n    if (!this.setUploadEntry()) return;\n    this.initTimer();\n    this.toggleCounters(true);\n    if (!this.haspicker) e = e.target.files;\n    await this.scanBrowse(e, {\n      accept: accept,\n    });\n  }\n\n  addDropzone() { //\n    this.dropzone = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n      id: this.options.display.dropzone\n    });\n    const input = (this.haspicker) ? null : (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('input', {\n      type: \"file\",\n      name: this.options.selectors.uploadfile,\n      id: this.options.selectors.uploadfile,\n      multiple: true,\n      allowdirs: true,\n      accept: accept,\n      class: 'hidden'\n    }, this.dropzone);\n    if (input) input.addEventListener(\"change\", (e) => {\n      this.handleBrowse(e)\n    });\n    const btns = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {},\n      this.dropzone);\n\n    this.options.browse.forEach(opt => {\n      const text = (this.container.dataset[`textbrowse${opt}`]) ? this.container.dataset[`textbrowse${opt}`] : `browse${opt}`;\n      const btn = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n        class: this.options.selectors.trigger.slice(1),\n        dataset: {\n          type: opt\n        },\n        text: text\n      }, btns);\n      btn.addEventListener('click', async (e) => {\n        if (this.haspicker) {\n          this.openDirDialog(opt, (e) => {\n            this.handleBrowse(e)\n          });\n        } else {\n          if (opt === \"directory\") {\n            input.directory = true;\n            input.webkitdirectory = true;\n          } else { //file\n            input.directory = false;\n            input.webkitdirectory = false;\n          }\n          input.dispatchEvent(new MouseEvent(\"click\"));\n\n        }\n\n      });\n    });\n    const spandrop = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n      text: this.container.dataset.textdrop\n    }, btns);\n\n  }\n\n  toggleDropTarget(on = true) {\n    const self = this;\n    const droptarget = (this.activentry) ? this.activentry.container : null;\n    if (droptarget === null) return;\n    const cssdragover = (this.jsDirList) ? this.jsDirList.options.entry.css.dragover : this.options.css.dragover;\n    const target_dragover = (e) => {\n      if (!this.dragover && this.activentry && this.activentry.container === e.currentTarget) {\n        droptarget.classList.add(cssdragover);\n      }\n      self.handleDragOver(e);\n    }\n    const target_drop = async (e) => {\n      droptarget.classList.remove(cssdragover);\n      self.handleDrop(e);\n    }\n\n    // set events and css for new dropzone\n    if (on === false) {\n      droptarget.removeEventListener('dragover', target_dragover);\n      droptarget.removeEventListener('drop', target_drop);\n      droptarget.classList.remove(this.options.selectors.droptarget.substr(1));\n    } else {\n      droptarget.addEventListener('dragover', target_dragover);\n      droptarget.addEventListener('drop', target_drop);\n      droptarget.classList.add(this.options.selectors.droptarget.substr(1));\n    }\n  }\n\n  async addDirList() {\n    this.jsDirList = new _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_2__.JsDirList(this.container);\n    this.activentry = this.jsDirList.root;\n    this.rootitem = this.targetitem = this.activentry.container;\n    this.jsDirList.on(this.jsDirList.eventnames.attach, (e) => {\n      if (!e.entry) return;\n      this.detachDropzone();\n      this.activentry = e.entry;\n      this.targetitem = this.activentry.container;\n      if ([this.activentry.options.type.directory, this.activentry.options.type.root].indexOf(this.activentry.type) >= 0) this.addUploadDialog();\n    });\n    this.jsDirList.on(this.jsDirList.eventnames.detach, (e) => {\n      this.detachDropzone();\n      this.activentry = null;\n      this.targetitem = null;\n    });\n    this.jsDirList.on(this.jsDirList.eventnames.action, (e) => {\n      if (e.detail.action === \"drop\") this.handleDrop(e.detail.event);\n      else console.log('action not managed ' + e.detail.action, e.detail)\n    });\n    this.activentry.label.dispatchEvent(new Event('click'));\n  }\n\n  addDisplayProgression() {\n    // add counters\n    if (this.displayprogression) return;\n    let el = document.getElementById(this.options.display.progression);\n    if (!el) {\n      el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        id: this.options.display.progression\n      }, this.container);\n      el.innerHTML = `<div class=\"${this.options.display.progression}\"><div class=\"${this.options.display.counters}\"></div><div class=\"${this.options.display.sizes}\"></div><div class=\"${_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress}\"></div><div class=\"${this.options.display.timers}\"></div></div>`;\n      this.displayprogression = el;\n    }\n  }\n  enableDropzone(enable = true, destroy = false) {\n    if (destroy || enable === false) this.dropzone.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (enable) {\n      this.dropzone.dataset.enabled = true;\n      this.dropzone.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    } else delete this.dropzone.dataset.enabled;\n  }\n  //\n  attachDropzone() {\n    if (this.dropzone.dataset.enabled) {\n      this.targetitem.insertBefore(this.dropzone, this.activentry.label.nextElementSibling);\n      this.toggleDropTarget(true);\n    }\n  }\n  detachDropzone() {\n    this.enableDropzone(false);\n    this.toggleDropTarget(false);\n  }\n\n  openDirDialog(type, callback) {\n    // if chrome 86 , edge 86, opera 72\n    const showpick = (type === \"directory\") ? window.showDirectoryPicker : window.showOpenFilePicker;\n    const pickopts = (type === \"directory\") ? {\n      mode: \"read\",\n      multiple: true\n    } : {\n      types: [{\n        description: \"Images,.tsv, zip, gzip, tar files\",\n        accept: objaccept,\n      }, ],\n      excludeAcceptAllOption: true,\n      multiple: true,\n    };\n    showpick(pickopts).then(pick => {\n      callback(pick);\n    });\n  }\n  setUploadEntry() {\n    if (this.uploadentry) return false;\n    this.uploadentry = this.activentry;\n    return true;\n  }\n  // drag&drop\n  async handleDrop(e) {\n    if (!this.setUploadEntry()) return;\n    let dataTransfer;\n    if (e.dataTransfer) {\n      e.preventDefault();\n      dataTransfer = e.dataTransfer;\n    } else dataTransfer = e;\n    this.done = false;\n    this.initTimer();\n    const items = [...((dataTransfer.items) ? dataTransfer.items : dataTransfer.files)];\n    if (items.length) {\n      this.enableDropzone(false);\n      await items.forEach(async item => {\n        if (item.kind === \"file\") {\n          item = await item.webkitGetAsEntry();\n          this.toggleCounters(true);\n          await this.scanHandle(item);\n        }\n      })\n    }\n  }\n  handleDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n  }\n  showComplete() {\n    this.timer = (new Date() - this.timer) / 1000;\n    console.log('item-------------------------------------' + parseInt(this.timer / 60) + ' --- ' + (this.timer - (parseInt(this.timer / 60) * 60)));\n    this.enableDropzone();\n  }\n\n  stopOnError(err) {\n    console.log('err', err);\n  }\n\n  addConsoleMessage(message) {\n    //message {message:, parent:}\n    message.parent = (message.parent) ? message.parent : this.container;\n    window.alertbox.addConsoleMessage(message);\n  }\n\n  addUploadDialog() {\n    if (this.options.controls.scan) {\n      this.enableDropzone(true);\n      this.attachDropzone();\n    }\n  }\n\n  async addFilesStore(name, callback) {\n    name = (name) ? name : this.options.dbname;\n    if (!this.jsFilesStore) {\n      const {\n        JsFilesStore\n      } = await __webpack_require__.e(/*! import() */ \"src_modules_files_js-filesystem_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-filesystem.js */ \"./src/modules/files/js-filesystem.js\"));\n      this.jsFilesStore = new JsFilesStore(null, callback);\n      this.displayFiles();\n    }\n    if (callback) await callback();\n  }\n  displayFiles() {\n    this.jsFilesStore.getItems('local');\n  }\n\n  fileCounter(e) {\n    const counters = this.counters[e.name];\n    counters.counter += 1;\n    if (e.size !== null) counters.size += parseInt(e.size);\n    counters.display.counter.textContent = counters.counter;\n    if (counters.display.size) counters.display.size.textContent = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(counters.size);\n    this.quotaEstimate();\n  }\n\n  resetCounter(item) {\n    const counters = this.counters[item];\n    ['counter', 'size'].forEach(el => {\n      if (counters.display[el]) {\n        counters[el] = 0;\n        counters.display[el].textContent = 0;\n      }\n    });\n  }\n  resetCounters() {\n    Object.keys(this.options.controls).forEach(key => {\n      this.resetCounter(key);\n    });\n    this.toggleCounters(false);\n  }\n  toggleCounters(show = true) {\n    const el = document.getElementById(this.options.display.progression);\n    if (!el) return;\n    if (show) el.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    else el.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n  }\n\n  initFileCounter(item, opts, i) {\n    const sep = (i) ? ` / ` : ``;\n    let counter = 0;\n    let counterdisplay = null;\n    let size = 0;\n    let sizedisplay = null;\n    // create dom display elements\n\n\n    let boxcounters = document.getElementById(this.options.display.progression);\n\n    const itemopts = {\n      display: {},\n    };\n    Object.entries(opts).forEach(([k, val]) => {\n      const cl = k + 's';\n      const txt = {\n        counter: ' read',\n        size: ' read',\n        counterzipped: ' compressed',\n        sizezipped: ' compressed',\n        counterrejected: ' rejected',\n        countererrorfile: ' error',\n      }\n      const displaylist = ['counterrejected', 'countererrorfile'];\n      let elinsert = boxcounters.querySelector('.' + cl);\n      if (!elinsert) elinsert = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        class: cl\n      }, boxcounters, ``);\n      let el = elinsert.querySelector('.' + val);\n      if (!el) {\n        el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n          class: val,\n        }, elinsert, ` / `);\n        if (txt.hasOwnProperty(val)) {\n          // add a link to display the rejected files list\n          if (displaylist.indexOf(val) >= 0) {\n            const link = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('a', {\n              text: txt[val],\n              class: 'text-error',\n              title: `Click to display the list of ${txt[val]} files`\n            }, elinsert);\n            link.addEventListener('click', (e) => {\n              e.preventDefault();\n              this.displayExcept(link, val);\n            });\n          } else elinsert.append(document.createTextNode(txt[val]));\n        }\n      } else this.resetCounter(item);\n      itemopts.display[k] = el;\n      itemopts[k] = 0;\n    });\n\n    this.counters = { ...this.counters,\n      ...{\n        [item]: itemopts\n      }\n    };\n\n  }\n  displayExcept(el, type) {\n    type = type.replace('counter', '');\n    const textval = {\n      rejected: ` type rejected`,\n      errorfile: ` in error`\n    };\n    if (Object.keys(textval).indexOf(type) < 0) return;\n    const message = {\n      type: window.alertbox.alertconfig.types.warning,\n      parent: el,\n      content: `Files ${this.rejected.join('<br>')} ${textval[type]}`,\n    };\n    if (el.dataset.hasmessage) {\n      window.alertbox.removeItemMessage(message);\n      delete el.dataset.hasmessage;\n    } else {\n      el.dataset.hasmessage = true;\n      window.alertbox.addItemMessage(message);\n    }\n  }\n\n  showControl(action, opts) {\n    const part = (opts && opts.part) ? opts.part : false;\n    const bigfile = (opts && opts.bigfile) ? opts.bigfile : false;\n    const filepath = (opts && opts.path) ? opts.path : this.uploadentry.getCurrentDirPath();\n    const target = ((opts.hasOwnProperty('bigfile') && bigfile !== false) ? 'zipped' : 'zip');\n    let message, text = null;\n    // 'zip' ---only btn for zip actions for the moment\n    const btn = this[this.options.btnprefix + 'zip' + target];\n    if (!btn) return;\n    btn.disabled = false;\n    switch (action) {\n      case this.eventnames.ready:\n        this.resetCounters();\n        if (this.uploadentry) {\n          this.uploadentry.list();\n          this.uploadentry = null;\n        }\n        message = null;\n        break;\n      case this.eventnames.follow:\n        if (bigfile) {\n          console.log(' follow', opts);\n          message = {};\n          btn.textContent = `Wait for next operation`;\n          btn.disabled = true;\n        } else message = null;\n\n        break;\n      case this.eventnames.endzip:\n        if (!part) this.showComplete();\n        btn.textContent = `Close zip file` + ((part) ? ` ` + part : ``);\n        btn.title = (part) ? `Your file is too big - you have to send this part before continuing to process the directory` : `Click to end zip file`;\n        message = {\n          name: this.eventnames.endzip,\n          part: part,\n          filepath: filepath,\n          bigfile: bigfile,\n        };\n        break;\n      case this.eventnames.bigfile:\n        if (bigfile && bigfile !== '') {\n          btn.textContent = `Upload big File separately`;\n          message = {\n            name: this.eventnames.bigfile,\n            path: filepath,\n            part: part,\n            bigfile: bigfile\n          };\n        }\n        break;\n      case this.eventnames.sendfile:\n        message = {\n          name: this.eventnames.sendfile,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        btn.textContent = `Upload zip file`;\n        if (message.bigfile && message.bigfile !== '') btn.textContent += ` ` + opts;\n        btn.dataset.message = JSON.stringify(message);\n        break;\n      case this.eventnames.pending:\n        btn.textContent = ` Pending ` + ((target !== 'zip') ? ' big file' : '');\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.gzip:\n        text = `compressing big file :${(opts && opts.bigfile)?filepath :``} ${(opts && opts.size)?(0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(opts.size):``}`;\n        btn.textContent = text;\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.terminate:\n        btn.dataset.message = JSON.stringify({\n          name: this.eventnames.init,\n          bigfile: bigfile,\n          part: part,\n          path: filepath\n        });\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n        btn.click();\n        return;\n        break;\n      case this.eventnames.errorfile:\n        this.errorfile.push(filepath);\n      case this.eventnames.error:\n        btn.textContent = (opts.text) ? opts.text : `Error`;\n        message = {\n          name: opts.name,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        console.log('????????ERROR??????????????????????????????????????--- errorcontrol' + action, message);\n        break;\n      default:\n        console.log('??????????????????????????????????????????????----default control ' + action, opts);\n        return;\n        break;\n    }\n    if (message === null) {\n      delete btn.dataset.message;\n      btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide)\n    } else {\n      btn.dataset.message = JSON.stringify(message);\n      btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n      if (btn.disabled) {\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n        btn.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.html_spinner)('text-stone-200 ml-1 mr-2 align-text-bottom inline-block'));\n      } else btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n    };\n  }\n\n  getBtn(item, target) {\n    const btnkey = this.options.btnprefix + item + target;\n    if (this[btnkey]) return this[btnkey];\n    const display = this.options.controls[item].btn[target];\n    const btn = document.getElementById(display);\n    const parent = this.displayprogression;\n    if (!btn) {\n      parent.insertAdjacentHTML('beforeend', `<button id=\"${display}\" class=\"${display} ${_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button} ${_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide}\"></button>`);\n      this[btnkey] = document.getElementById(display);\n      this[btnkey].addEventListener('click', async (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.emitToZip(e.currentTarget);\n      });\n    } else parent.append(btn);\n    return this[btnkey];\n  }\n\n  initControls() {\n    Object.entries(this.options.controls).forEach(([key, control], i) => {\n      this.initFileCounter(key, control.display, i);\n      if (control.btn) this.activateControls(key, control.btn);\n    });\n  }\n  activateControls(key, btns) {\n    Object.keys(btns).forEach((btn) => {\n      this[this.options.btnprefix + key + btn] = this.getBtn(key, btn);\n    })\n\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bGVzLmpzPzEzYjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYnJvd3Nlcl9hY2NlcHQsXG4gIGRvbV9wdXJpZnksXG4gIGZldGNoU2V0dGluZ3MsXG4gIGFkZF9jdXN0b21fZXZlbnRzLFxuICBjcmVhdGVfYm94LFxuICBmb3JtYXRfYnl0ZXMsXG4gIGdlbmVyYXRlX3V1aWQsXG4gIGRpcnNlcGFyYXRvcixcbiAgaHRtbF9zcGlubmVyXG59IGZyb20gJy4uL21vZHVsZXMvdXRpbHMuanMnO1xuaW1wb3J0IHtcbiAgY3NzLFxufSBmcm9tICcuLi9tb2R1bGVzL21vZHVsZXMtY29uZmlnLmpzJztcbmltcG9ydCB7XG4gIEpzRGlyTGlzdCxcbiAgZGVmYXVsdE9wdGlvbnNcbn0gZnJvbSAnLi4vbW9kdWxlcy9maWxlcy9qcy1kaXJsaXN0LmpzJztcbmNvbnN0IG9iamFjY2VwdCA9IHtcbiAgXCJpbWFnZS8qXCI6IFtcIi5wbmdcIiwgXCIuanBlZ1wiLCBcIi5qcGdcIl0sXG4gIFwidGV4dC90YWItc2VwYXJhdGVkLXZhbHVlc1wiOiBbXCIudHN2XCJdLFxuICBcImFwcGxpY2F0aW9uL3ppcFwiOiBbXCIuemlwXCJdLFxuICBcImFwcGxpY2F0aW9uL2d6aXBcIjogW1wiLmd6XCJdLFxuICBcImFwcGxpY2F0aW9uL3gtYnppcFwiOiBbXCIuYnpcIl0sXG4gIFwiYXBwbGljYXRpb24veC1iemlwMlwiOiBbXCIuYnoyXCJdXG59XG5jb25zdCBhY2NlcHQgPSBPYmplY3QudmFsdWVzKG9iamFjY2VwdCkucmVkdWNlKChhLCBiKSA9PiBhLmNvbmNhdChiKSk7XG5jc3MuYnV0dG9uID0gJ2J1dHRvbiBwLTEgbXgtYXV0byBzbTptci00IG1iLTQnO1xuY29uc3QgZmlsdGVyX2ZpbGVzID0ge1xuICBpbWFnZXM6IFwicG5nLGpwZWcsanBnLGdpZlwiLFxuICB0c3Y6IFwidHh0LHRzdix6aXAsIGd6aXAsZ3pcIlxufVxuZXhwb3J0IGNsYXNzIEpzTXlGaWxlcyB7XG4gIGRvbmUgPSB0cnVlO1xuICBqc0RpclRvWmlwID0gbnVsbDtcbiAganNEaXJMaXN0ID0gbnVsbDtcbiAgdHJhc2hfZGlyX25hbWUgPSAndHJhc2guJztcbiAgY291bnRlcnMgPSB7fTtcbiAgX2V2ZW50cyA9IHt9O1xuICBldmVudG5hbWVzID0ge1xuICAgIGNvbXBsZXRlOiAnY29tcGxldGUnLFxuICAgIGVycm9yOiAnZXJyb3InLFxuICB9O1xuICByZWplY3RlZCA9IFtdO1xuICBlcnJvcmZpbGUgPSBbXTtcblxuICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICghY29udGFpbmVyLmpzbXlmaWxlcykge1xuICAgICAgY29udGFpbmVyID0gKGNvbnRhaW5lciBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSA/IGNvbnRhaW5lciA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyKTtcbiAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47XG4gICAgICBkb21fcHVyaWZ5KGNvbnRhaW5lciwgJ2RhdGFzZXQnKTtcbiAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgICAgIGNvbnRyb2xzOiB7XG4gICAgICAgICAgc2Nhbjoge1xuICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICBjb3VudGVyOiAnY291bnRlcicsXG4gICAgICAgICAgICAgIHNpemU6ICdzaXplJyxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHppcDoge1xuICAgICAgICAgICAgYnRuOiB7XG4gICAgICAgICAgICAgIHppcDogJ21ha2V6aXAnLFxuICAgICAgICAgICAgICB6aXBwZWQ6ICdtYWtlemlwcGVkJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgc2l6ZTogJ3NpemV6aXBwZWQnLFxuICAgICAgICAgICAgICBjb3VudGVyOiAnY291bnRlcnppcHBlZCcsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICByZWplY3Q6IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgY291bnRlcjogJ2NvdW50ZXJyZWplY3RlZCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGVycm9yZmlsZToge1xuICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICBjb3VudGVyOiAnY291bnRlcmVycm9yZmlsZSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHVwbG9hZDoge1xuICAgICAgICAgIGxhYmVsOiAndXBsb2FkJ1xuICAgICAgICB9LFxuICAgICAgICBidG5wcmVmaXg6ICdidG4nLFxuICAgICAgICBidG5maWxlbGlzdDogbnVsbCxcbiAgICAgICAgc2VsZWN0b3JzOiB7XG4gICAgICAgICAgZHJvcHRhcmdldDogJy5kcm9wdGFyZ2V0JyxcbiAgICAgICAgICB0cmlnZ2VyOiAnLnRyaWdnZXInLFxuICAgICAgICAgIHVwbG9hZGZpbGU6ICd1cGxvYWRmaWxlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgIHByb2dyZXNzaW9uOiAnZGlzcGxheS1wcm9ncmVzc2lvbicsXG4gICAgICAgICAgZHJvcHpvbmU6ICdkcm9wem9uZScsXG4gICAgICAgICAgYm94dGl0bGU6ICdib3h0aXRsZScsXG4gICAgICAgICAgY291bnRlcnM6ICdjb3VudGVycycsXG4gICAgICAgICAgc2l6ZXM6ICdzaXplcycsXG4gICAgICAgICAgdGltZXJzOiAndGltZXJzJ1xuICAgICAgICB9LFxuXG4gICAgICAgIGNzczoge1xuICAgICAgICAgIGRyYWdvdmVyOiAnZHJhZ292ZXInXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcbiAgICAgIHRoaXMub3B0aW9ucy5icm93c2UgPSAoY29udGFpbmVyLmRhdGFzZXQuYnJvd3NlKSA/IGNvbnRhaW5lci5kYXRhc2V0LmJyb3dzZS5zcGxpdCgnLCcpIDogWydkaXJlY3RvcnknLCAnZmlsZSddO1xuICAgICAgdGhpcy5oYXNwaWNrZXIgPSAod2luZG93LnNob3dEaXJlY3RvcnlQaWNrZXIpO1xuICAgICAgdGhpcy5vcHRpb25zLmJyb3dzZSA9IChjb250YWluZXIuZGF0YXNldC5icm93c2UpID8gY29udGFpbmVyLmRhdGFzZXQuYnJvd3NlLnNwbGl0KCcsJykgOiBbJ2RpcmVjdG9yeScsICdmaWxlJ107XG4gICAgICB0aGlzLmluaXQoKTtcbiAgICAgIGNvbnRhaW5lci5qc215ZmlsZXMgPSB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gY29udGFpbmVyLmpzbXlmaWxlcztcbiAgfVxuICBpbml0KCkge1xuICAgIC8vIGNyZWF0ZSBkaXJsaXN0IGJveFxuICAgIGFkZF9jdXN0b21fZXZlbnRzKHRoaXMpO1xuICAgIHRoaXMuYWRkRGlzcGxheVByb2dyZXNzaW9uKCk7XG5cbiAgICB0aGlzLmFkZERpckxpc3QoKTtcbiAgICB0aGlzLmFkZERyb3B6b25lKCk7XG4gICAgdGhpcy5pbml0Q29udHJvbHMoKTtcbiAgICB0aGlzLmluaXRFdmVudHMoKS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMucmVzZXRDb3VudGVycygpO1xuICAgIH0pO1xuICB9XG4gIGluaXRUaW1lcigpIHtcbiAgICB0aGlzLnRpbWVyID0gbmV3IERhdGUoKTtcbiAgfVxuICBhc3luYyBpbml0RXZlbnRzKCkge1xuICAgIGFkZF9jdXN0b21fZXZlbnRzKHRoaXMpO1xuICAgIC8vVG8gYmUgcmVmYWN0b3JlZCAtIGZvciBzdGVwcGVycyApXG4gICAgdGhpcy5vbih0aGlzLmV2ZW50bmFtZXMucHJvY2Vzc2VkLCBhc3luYyAoZSkgPT4ge1xuICAgICAgaWYgKHRoaXMubmV4dGFjdGlvbikgYXdhaXQgdGhpcy5uZXh0YWN0aW9uKCk7XG4gICAgfSk7XG4gICAgLy8gYWxlcnRzIG9uIGVycm9yXG4gICAgdGhpcy5vbih0aGlzLmV2ZW50bmFtZXMuZXJyb3IsIChlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnc2NhbmRpciByZWNlaXZlIGVycm9yIG1lc3NhZ2UnLCBlKVxuICAgICAgaWYgKHdpbmRvdy5hbGVydGJveCkge1xuICAgICAgICB3aW5kb3cuYWxlcnRib3gucmVuZGVyQWxlcnQoe1xuICAgICAgICAgIHR5cGU6IHdpbmRvdy5hbGVydGJveC5hbGVydGNvbmZpZy50eXBlcy5lcnJvcixcbiAgICAgICAgICBjb250ZW50OiBlLFxuICAgICAgICAgIGludmVyc2U6IHRydWUsXG4gICAgICAgICAgZGlzbWlzc2libGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5jb250cm9scy56aXApIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgSnNEaXJUb1ppcFxuICAgICAgfSA9IGF3YWl0IGltcG9ydCgnLi4vbW9kdWxlcy9maWxlcy9qcy1kaXJ0b3ppcC5qcycpO1xuICAgICAgdGhpcy5qc0RpclRvWmlwID0gbmV3IEpzRGlyVG9aaXAoKTtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuanNEaXJUb1ppcC5ldmVudG5hbWVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgdGhpcy5ldmVudG5hbWVzW2tleV0gPSB0aGlzLmpzRGlyVG9aaXAuZXZlbnRuYW1lc1trZXldO1xuICAgICAgICB0aGlzLmpzRGlyVG9aaXAub24oa2V5LCAoZSkgPT4ge1xuICAgICAgICAgIHN3aXRjaCAoa2V5KSB7XG4gICAgICAgICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5jbGllbnRjb3VudGVyOlxuICAgICAgICAgICAgICB0aGlzLmZpbGVDb3VudGVyKGUpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLnJlamVjdDpcbiAgICAgICAgICAgICAgdGhpcy5yZWplY3RlZC5wdXNoKGUucGF0aCk7XG4gICAgICAgICAgICAgIHRoaXMuZmlsZUNvdW50ZXIoe1xuICAgICAgICAgICAgICAgIG5hbWU6ICdyZWplY3QnLFxuICAgICAgICAgICAgICAgIHBhdGg6IGUucGF0aCxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuZm9sbG93OlxuICAgICAgICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuY29tcGxldGU6XG4gICAgICAgICAgICAgIGlmICghZSB8fCAhZS5oYXNPd25Qcm9wZXJ0eShcIm5hbWVcIikgfHwgZS5uYW1lID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ25vIGVtaXQgY29tcGxldGUgbmFtZScgKyBrZXksIGUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBzZWxmLnNob3dDb250cm9sKGUubmFtZSwgZSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMubWVzc2FnZTpcbiAgICAgICAgICAgICAgc3dpdGNoIChlLm5hbWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdjb25zb2xlJzpcbiAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQ29uc29sZU1lc3NhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICBpZDogKGUuaWQpID8gZS5pZCA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGUubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50OiB0aGlzLmNvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHdpbmRvdy5hbGVydGJveC5hbGVydGNvbmZpZy50eXBlcy5lcnJvcjpcbiAgICAgICAgICAgICAgICBjYXNlIHdpbmRvdy5hbGVydGJveC5hbGVydGNvbmZpZy50eXBlcy5zdWNjZXNzOlxuICAgICAgICAgICAgICAgIGNhc2Ugd2luZG93LmFsZXJ0Ym94LmFsZXJ0Y29uZmlnLnR5cGVzLmRhbmdlcjpcbiAgICAgICAgICAgICAgICBjYXNlIHdpbmRvdy5hbGVydGJveC5hbGVydGNvbmZpZy50eXBlcy5pbmZvOlxuICAgICAgICAgICAgICAgICAgd2luZG93LmFsZXJ0Ym94LnJlbmRlckFsZXJ0KHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgIGRpc21pc3NpYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBpbnZlcnNlOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3InLCBlKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbWVzc2FnZScsIGUpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgKGUpID0+IHtcbiAgICAgIGlmICghdGhpcy5kb25lKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZS5yZXR1cm5WYWx1ZSA9ICh0aGlzLm9wdGlvbnMucHJldmVudGNsb3NlKSA/IHRoaXMub3B0aW9ucy5wcmV2ZW50Y2xvc2UgOiBgU29tZSB3b3JrIGlzIGluIHByb2dyZXNzIGluIHRoaXMgd2luZG93LlxcbkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBsZWF2ZT9gO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGVtaXRUb1ppcChidG4pIHtcbiAgICBjb25zdCBtZXNzYWdlID0gKGJ0bi5kYXRhc2V0Lm1lc3NhZ2UpID8gSlNPTi5wYXJzZShidG4uZGF0YXNldC5tZXNzYWdlKSA6IG51bGw7XG4gICAgaWYgKCFtZXNzYWdlKSBidG4uY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gICAgaWYgKG1lc3NhZ2UpIHtcbiAgICAgIGlmIChtZXNzYWdlLm5hbWUpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG1lc3NhZ2UubmFtZTtcbiAgICAgICAgZGVsZXRlIG1lc3NhZ2UubmFtZTtcbiAgICAgICAgdGhpcy5qc0RpclRvWmlwLmVtaXQobmFtZSwgbWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChuYW1lID09PSB0aGlzLmV2ZW50bmFtZXMuc2VuZGZpbGUpIGJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gIH1cblxuICBxdW90YUVzdGltYXRlKG9iaikge1xuICAgIHJldHVybiB0aGlzLmpzRGlyVG9aaXAucXVvdGFFc3RpbWF0ZSgpO1xuICB9XG4gIHNjYW5Ccm93c2UoZSwgb3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmpzRGlyVG9aaXAuc2NhbkJyb3dzZShlLCBvcHRpb25zKTtcblxuICB9XG4gIHNjYW5IYW5kbGUoZGlyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuanNEaXJUb1ppcC5zY2FuSGFuZGxlKGRpciwgb3B0aW9ucyk7XG4gIH1cbiAgYXN5bmMgaGFuZGxlQnJvd3NlKGUpIHtcbiAgICBpZiAoIXRoaXMuc2V0VXBsb2FkRW50cnkoKSkgcmV0dXJuO1xuICAgIHRoaXMuaW5pdFRpbWVyKCk7XG4gICAgdGhpcy50b2dnbGVDb3VudGVycyh0cnVlKTtcbiAgICBpZiAoIXRoaXMuaGFzcGlja2VyKSBlID0gZS50YXJnZXQuZmlsZXM7XG4gICAgYXdhaXQgdGhpcy5zY2FuQnJvd3NlKGUsIHtcbiAgICAgIGFjY2VwdDogYWNjZXB0LFxuICAgIH0pO1xuICB9XG5cbiAgYWRkRHJvcHpvbmUoKSB7IC8vXG4gICAgdGhpcy5kcm9wem9uZSA9IGNyZWF0ZV9ib3goJ2RpdicsIHtcbiAgICAgIGlkOiB0aGlzLm9wdGlvbnMuZGlzcGxheS5kcm9wem9uZVxuICAgIH0pO1xuICAgIGNvbnN0IGlucHV0ID0gKHRoaXMuaGFzcGlja2VyKSA/IG51bGwgOiBjcmVhdGVfYm94KCdpbnB1dCcsIHtcbiAgICAgIHR5cGU6IFwiZmlsZVwiLFxuICAgICAgbmFtZTogdGhpcy5vcHRpb25zLnNlbGVjdG9ycy51cGxvYWRmaWxlLFxuICAgICAgaWQ6IHRoaXMub3B0aW9ucy5zZWxlY3RvcnMudXBsb2FkZmlsZSxcbiAgICAgIG11bHRpcGxlOiB0cnVlLFxuICAgICAgYWxsb3dkaXJzOiB0cnVlLFxuICAgICAgYWNjZXB0OiBhY2NlcHQsXG4gICAgICBjbGFzczogJ2hpZGRlbidcbiAgICB9LCB0aGlzLmRyb3B6b25lKTtcbiAgICBpZiAoaW5wdXQpIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGUpID0+IHtcbiAgICAgIHRoaXMuaGFuZGxlQnJvd3NlKGUpXG4gICAgfSk7XG4gICAgY29uc3QgYnRucyA9IGNyZWF0ZV9ib3goJ2RpdicsIHt9LFxuICAgICAgdGhpcy5kcm9wem9uZSk7XG5cbiAgICB0aGlzLm9wdGlvbnMuYnJvd3NlLmZvckVhY2gob3B0ID0+IHtcbiAgICAgIGNvbnN0IHRleHQgPSAodGhpcy5jb250YWluZXIuZGF0YXNldFtgdGV4dGJyb3dzZSR7b3B0fWBdKSA/IHRoaXMuY29udGFpbmVyLmRhdGFzZXRbYHRleHRicm93c2Uke29wdH1gXSA6IGBicm93c2Uke29wdH1gO1xuICAgICAgY29uc3QgYnRuID0gY3JlYXRlX2JveCgnc3BhbicsIHtcbiAgICAgICAgY2xhc3M6IHRoaXMub3B0aW9ucy5zZWxlY3RvcnMudHJpZ2dlci5zbGljZSgxKSxcbiAgICAgICAgZGF0YXNldDoge1xuICAgICAgICAgIHR5cGU6IG9wdFxuICAgICAgICB9LFxuICAgICAgICB0ZXh0OiB0ZXh0XG4gICAgICB9LCBidG5zKTtcbiAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jIChlKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLmhhc3BpY2tlcikge1xuICAgICAgICAgIHRoaXMub3BlbkRpckRpYWxvZyhvcHQsIChlKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUJyb3dzZShlKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChvcHQgPT09IFwiZGlyZWN0b3J5XCIpIHtcbiAgICAgICAgICAgIGlucHV0LmRpcmVjdG9yeSA9IHRydWU7XG4gICAgICAgICAgICBpbnB1dC53ZWJraXRkaXJlY3RvcnkgPSB0cnVlO1xuICAgICAgICAgIH0gZWxzZSB7IC8vZmlsZVxuICAgICAgICAgICAgaW5wdXQuZGlyZWN0b3J5ID0gZmFsc2U7XG4gICAgICAgICAgICBpbnB1dC53ZWJraXRkaXJlY3RvcnkgPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaW5wdXQuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudChcImNsaWNrXCIpKTtcblxuICAgICAgICB9XG5cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGNvbnN0IHNwYW5kcm9wID0gY3JlYXRlX2JveCgnc3BhbicsIHtcbiAgICAgIHRleHQ6IHRoaXMuY29udGFpbmVyLmRhdGFzZXQudGV4dGRyb3BcbiAgICB9LCBidG5zKTtcblxuICB9XG5cbiAgdG9nZ2xlRHJvcFRhcmdldChvbiA9IHRydWUpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBjb25zdCBkcm9wdGFyZ2V0ID0gKHRoaXMuYWN0aXZlbnRyeSkgPyB0aGlzLmFjdGl2ZW50cnkuY29udGFpbmVyIDogbnVsbDtcbiAgICBpZiAoZHJvcHRhcmdldCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgIGNvbnN0IGNzc2RyYWdvdmVyID0gKHRoaXMuanNEaXJMaXN0KSA/IHRoaXMuanNEaXJMaXN0Lm9wdGlvbnMuZW50cnkuY3NzLmRyYWdvdmVyIDogdGhpcy5vcHRpb25zLmNzcy5kcmFnb3ZlcjtcbiAgICBjb25zdCB0YXJnZXRfZHJhZ292ZXIgPSAoZSkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmRyYWdvdmVyICYmIHRoaXMuYWN0aXZlbnRyeSAmJiB0aGlzLmFjdGl2ZW50cnkuY29udGFpbmVyID09PSBlLmN1cnJlbnRUYXJnZXQpIHtcbiAgICAgICAgZHJvcHRhcmdldC5jbGFzc0xpc3QuYWRkKGNzc2RyYWdvdmVyKTtcbiAgICAgIH1cbiAgICAgIHNlbGYuaGFuZGxlRHJhZ092ZXIoZSk7XG4gICAgfVxuICAgIGNvbnN0IHRhcmdldF9kcm9wID0gYXN5bmMgKGUpID0+IHtcbiAgICAgIGRyb3B0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShjc3NkcmFnb3Zlcik7XG4gICAgICBzZWxmLmhhbmRsZURyb3AoZSk7XG4gICAgfVxuXG4gICAgLy8gc2V0IGV2ZW50cyBhbmQgY3NzIGZvciBuZXcgZHJvcHpvbmVcbiAgICBpZiAob24gPT09IGZhbHNlKSB7XG4gICAgICBkcm9wdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWdvdmVyJywgdGFyZ2V0X2RyYWdvdmVyKTtcbiAgICAgIGRyb3B0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJvcCcsIHRhcmdldF9kcm9wKTtcbiAgICAgIGRyb3B0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLm9wdGlvbnMuc2VsZWN0b3JzLmRyb3B0YXJnZXQuc3Vic3RyKDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZHJvcHRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIHRhcmdldF9kcmFnb3Zlcik7XG4gICAgICBkcm9wdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ2Ryb3AnLCB0YXJnZXRfZHJvcCk7XG4gICAgICBkcm9wdGFyZ2V0LmNsYXNzTGlzdC5hZGQodGhpcy5vcHRpb25zLnNlbGVjdG9ycy5kcm9wdGFyZ2V0LnN1YnN0cigxKSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgYWRkRGlyTGlzdCgpIHtcbiAgICB0aGlzLmpzRGlyTGlzdCA9IG5ldyBKc0Rpckxpc3QodGhpcy5jb250YWluZXIpO1xuICAgIHRoaXMuYWN0aXZlbnRyeSA9IHRoaXMuanNEaXJMaXN0LnJvb3Q7XG4gICAgdGhpcy5yb290aXRlbSA9IHRoaXMudGFyZ2V0aXRlbSA9IHRoaXMuYWN0aXZlbnRyeS5jb250YWluZXI7XG4gICAgdGhpcy5qc0Rpckxpc3Qub24odGhpcy5qc0Rpckxpc3QuZXZlbnRuYW1lcy5hdHRhY2gsIChlKSA9PiB7XG4gICAgICBpZiAoIWUuZW50cnkpIHJldHVybjtcbiAgICAgIHRoaXMuZGV0YWNoRHJvcHpvbmUoKTtcbiAgICAgIHRoaXMuYWN0aXZlbnRyeSA9IGUuZW50cnk7XG4gICAgICB0aGlzLnRhcmdldGl0ZW0gPSB0aGlzLmFjdGl2ZW50cnkuY29udGFpbmVyO1xuICAgICAgaWYgKFt0aGlzLmFjdGl2ZW50cnkub3B0aW9ucy50eXBlLmRpcmVjdG9yeSwgdGhpcy5hY3RpdmVudHJ5Lm9wdGlvbnMudHlwZS5yb290XS5pbmRleE9mKHRoaXMuYWN0aXZlbnRyeS50eXBlKSA+PSAwKSB0aGlzLmFkZFVwbG9hZERpYWxvZygpO1xuICAgIH0pO1xuICAgIHRoaXMuanNEaXJMaXN0Lm9uKHRoaXMuanNEaXJMaXN0LmV2ZW50bmFtZXMuZGV0YWNoLCAoZSkgPT4ge1xuICAgICAgdGhpcy5kZXRhY2hEcm9wem9uZSgpO1xuICAgICAgdGhpcy5hY3RpdmVudHJ5ID0gbnVsbDtcbiAgICAgIHRoaXMudGFyZ2V0aXRlbSA9IG51bGw7XG4gICAgfSk7XG4gICAgdGhpcy5qc0Rpckxpc3Qub24odGhpcy5qc0Rpckxpc3QuZXZlbnRuYW1lcy5hY3Rpb24sIChlKSA9PiB7XG4gICAgICBpZiAoZS5kZXRhaWwuYWN0aW9uID09PSBcImRyb3BcIikgdGhpcy5oYW5kbGVEcm9wKGUuZGV0YWlsLmV2ZW50KTtcbiAgICAgIGVsc2UgY29uc29sZS5sb2coJ2FjdGlvbiBub3QgbWFuYWdlZCAnICsgZS5kZXRhaWwuYWN0aW9uLCBlLmRldGFpbClcbiAgICB9KTtcbiAgICB0aGlzLmFjdGl2ZW50cnkubGFiZWwuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NsaWNrJykpO1xuICB9XG5cbiAgYWRkRGlzcGxheVByb2dyZXNzaW9uKCkge1xuICAgIC8vIGFkZCBjb3VudGVyc1xuICAgIGlmICh0aGlzLmRpc3BsYXlwcm9ncmVzc2lvbikgcmV0dXJuO1xuICAgIGxldCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uKTtcbiAgICBpZiAoIWVsKSB7XG4gICAgICBlbCA9IGNyZWF0ZV9ib3goJ2RpdicsIHtcbiAgICAgICAgaWQ6IHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uXG4gICAgICB9LCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICBlbC5pbm5lckhUTUwgPSBgPGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmRpc3BsYXkucHJvZ3Jlc3Npb259XCI+PGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmRpc3BsYXkuY291bnRlcnN9XCI+PC9kaXY+PGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmRpc3BsYXkuc2l6ZXN9XCI+PC9kaXY+PGRpdiBjbGFzcz1cIiR7Y3NzLnByb2dyZXNzfVwiPjwvZGl2PjxkaXYgY2xhc3M9XCIke3RoaXMub3B0aW9ucy5kaXNwbGF5LnRpbWVyc31cIj48L2Rpdj48L2Rpdj5gO1xuICAgICAgdGhpcy5kaXNwbGF5cHJvZ3Jlc3Npb24gPSBlbDtcbiAgICB9XG4gIH1cbiAgZW5hYmxlRHJvcHpvbmUoZW5hYmxlID0gdHJ1ZSwgZGVzdHJveSA9IGZhbHNlKSB7XG4gICAgaWYgKGRlc3Ryb3kgfHwgZW5hYmxlID09PSBmYWxzZSkgdGhpcy5kcm9wem9uZS5jbGFzc0xpc3QuYWRkKGNzcy5oaWRlKTtcbiAgICBpZiAoZW5hYmxlKSB7XG4gICAgICB0aGlzLmRyb3B6b25lLmRhdGFzZXQuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmRyb3B6b25lLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgIH0gZWxzZSBkZWxldGUgdGhpcy5kcm9wem9uZS5kYXRhc2V0LmVuYWJsZWQ7XG4gIH1cbiAgLy9cbiAgYXR0YWNoRHJvcHpvbmUoKSB7XG4gICAgaWYgKHRoaXMuZHJvcHpvbmUuZGF0YXNldC5lbmFibGVkKSB7XG4gICAgICB0aGlzLnRhcmdldGl0ZW0uaW5zZXJ0QmVmb3JlKHRoaXMuZHJvcHpvbmUsIHRoaXMuYWN0aXZlbnRyeS5sYWJlbC5uZXh0RWxlbWVudFNpYmxpbmcpO1xuICAgICAgdGhpcy50b2dnbGVEcm9wVGFyZ2V0KHRydWUpO1xuICAgIH1cbiAgfVxuICBkZXRhY2hEcm9wem9uZSgpIHtcbiAgICB0aGlzLmVuYWJsZURyb3B6b25lKGZhbHNlKTtcbiAgICB0aGlzLnRvZ2dsZURyb3BUYXJnZXQoZmFsc2UpO1xuICB9XG5cbiAgb3BlbkRpckRpYWxvZyh0eXBlLCBjYWxsYmFjaykge1xuICAgIC8vIGlmIGNocm9tZSA4NiAsIGVkZ2UgODYsIG9wZXJhIDcyXG4gICAgY29uc3Qgc2hvd3BpY2sgPSAodHlwZSA9PT0gXCJkaXJlY3RvcnlcIikgPyB3aW5kb3cuc2hvd0RpcmVjdG9yeVBpY2tlciA6IHdpbmRvdy5zaG93T3BlbkZpbGVQaWNrZXI7XG4gICAgY29uc3QgcGlja29wdHMgPSAodHlwZSA9PT0gXCJkaXJlY3RvcnlcIikgPyB7XG4gICAgICBtb2RlOiBcInJlYWRcIixcbiAgICAgIG11bHRpcGxlOiB0cnVlXG4gICAgfSA6IHtcbiAgICAgIHR5cGVzOiBbe1xuICAgICAgICBkZXNjcmlwdGlvbjogXCJJbWFnZXMsLnRzdiwgemlwLCBnemlwLCB0YXIgZmlsZXNcIixcbiAgICAgICAgYWNjZXB0OiBvYmphY2NlcHQsXG4gICAgICB9LCBdLFxuICAgICAgZXhjbHVkZUFjY2VwdEFsbE9wdGlvbjogdHJ1ZSxcbiAgICAgIG11bHRpcGxlOiB0cnVlLFxuICAgIH07XG4gICAgc2hvd3BpY2socGlja29wdHMpLnRoZW4ocGljayA9PiB7XG4gICAgICBjYWxsYmFjayhwaWNrKTtcbiAgICB9KTtcbiAgfVxuICBzZXRVcGxvYWRFbnRyeSgpIHtcbiAgICBpZiAodGhpcy51cGxvYWRlbnRyeSkgcmV0dXJuIGZhbHNlO1xuICAgIHRoaXMudXBsb2FkZW50cnkgPSB0aGlzLmFjdGl2ZW50cnk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgLy8gZHJhZyZkcm9wXG4gIGFzeW5jIGhhbmRsZURyb3AoZSkge1xuICAgIGlmICghdGhpcy5zZXRVcGxvYWRFbnRyeSgpKSByZXR1cm47XG4gICAgbGV0IGRhdGFUcmFuc2ZlcjtcbiAgICBpZiAoZS5kYXRhVHJhbnNmZXIpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGRhdGFUcmFuc2ZlciA9IGUuZGF0YVRyYW5zZmVyO1xuICAgIH0gZWxzZSBkYXRhVHJhbnNmZXIgPSBlO1xuICAgIHRoaXMuZG9uZSA9IGZhbHNlO1xuICAgIHRoaXMuaW5pdFRpbWVyKCk7XG4gICAgY29uc3QgaXRlbXMgPSBbLi4uKChkYXRhVHJhbnNmZXIuaXRlbXMpID8gZGF0YVRyYW5zZmVyLml0ZW1zIDogZGF0YVRyYW5zZmVyLmZpbGVzKV07XG4gICAgaWYgKGl0ZW1zLmxlbmd0aCkge1xuICAgICAgdGhpcy5lbmFibGVEcm9wem9uZShmYWxzZSk7XG4gICAgICBhd2FpdCBpdGVtcy5mb3JFYWNoKGFzeW5jIGl0ZW0gPT4ge1xuICAgICAgICBpZiAoaXRlbS5raW5kID09PSBcImZpbGVcIikge1xuICAgICAgICAgIGl0ZW0gPSBhd2FpdCBpdGVtLndlYmtpdEdldEFzRW50cnkoKTtcbiAgICAgICAgICB0aGlzLnRvZ2dsZUNvdW50ZXJzKHRydWUpO1xuICAgICAgICAgIGF3YWl0IHRoaXMuc2NhbkhhbmRsZShpdGVtKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gIH1cbiAgaGFuZGxlRHJhZ092ZXIoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBlLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gXCJtb3ZlXCI7XG4gIH1cbiAgc2hvd0NvbXBsZXRlKCkge1xuICAgIHRoaXMudGltZXIgPSAobmV3IERhdGUoKSAtIHRoaXMudGltZXIpIC8gMTAwMDtcbiAgICBjb25zb2xlLmxvZygnaXRlbS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nICsgcGFyc2VJbnQodGhpcy50aW1lciAvIDYwKSArICcgLS0tICcgKyAodGhpcy50aW1lciAtIChwYXJzZUludCh0aGlzLnRpbWVyIC8gNjApICogNjApKSk7XG4gICAgdGhpcy5lbmFibGVEcm9wem9uZSgpO1xuICB9XG5cbiAgc3RvcE9uRXJyb3IoZXJyKSB7XG4gICAgY29uc29sZS5sb2coJ2VycicsIGVycik7XG4gIH1cblxuICBhZGRDb25zb2xlTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgLy9tZXNzYWdlIHttZXNzYWdlOiwgcGFyZW50On1cbiAgICBtZXNzYWdlLnBhcmVudCA9IChtZXNzYWdlLnBhcmVudCkgPyBtZXNzYWdlLnBhcmVudCA6IHRoaXMuY29udGFpbmVyO1xuICAgIHdpbmRvdy5hbGVydGJveC5hZGRDb25zb2xlTWVzc2FnZShtZXNzYWdlKTtcbiAgfVxuXG4gIGFkZFVwbG9hZERpYWxvZygpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLmNvbnRyb2xzLnNjYW4pIHtcbiAgICAgIHRoaXMuZW5hYmxlRHJvcHpvbmUodHJ1ZSk7XG4gICAgICB0aGlzLmF0dGFjaERyb3B6b25lKCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgYWRkRmlsZXNTdG9yZShuYW1lLCBjYWxsYmFjaykge1xuICAgIG5hbWUgPSAobmFtZSkgPyBuYW1lIDogdGhpcy5vcHRpb25zLmRibmFtZTtcbiAgICBpZiAoIXRoaXMuanNGaWxlc1N0b3JlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIEpzRmlsZXNTdG9yZVxuICAgICAgfSA9IGF3YWl0IGltcG9ydCgnLi4vbW9kdWxlcy9maWxlcy9qcy1maWxlc3lzdGVtLmpzJyk7XG4gICAgICB0aGlzLmpzRmlsZXNTdG9yZSA9IG5ldyBKc0ZpbGVzU3RvcmUobnVsbCwgY2FsbGJhY2spO1xuICAgICAgdGhpcy5kaXNwbGF5RmlsZXMoKTtcbiAgICB9XG4gICAgaWYgKGNhbGxiYWNrKSBhd2FpdCBjYWxsYmFjaygpO1xuICB9XG4gIGRpc3BsYXlGaWxlcygpIHtcbiAgICB0aGlzLmpzRmlsZXNTdG9yZS5nZXRJdGVtcygnbG9jYWwnKTtcbiAgfVxuXG4gIGZpbGVDb3VudGVyKGUpIHtcbiAgICBjb25zdCBjb3VudGVycyA9IHRoaXMuY291bnRlcnNbZS5uYW1lXTtcbiAgICBjb3VudGVycy5jb3VudGVyICs9IDE7XG4gICAgaWYgKGUuc2l6ZSAhPT0gbnVsbCkgY291bnRlcnMuc2l6ZSArPSBwYXJzZUludChlLnNpemUpO1xuICAgIGNvdW50ZXJzLmRpc3BsYXkuY291bnRlci50ZXh0Q29udGVudCA9IGNvdW50ZXJzLmNvdW50ZXI7XG4gICAgaWYgKGNvdW50ZXJzLmRpc3BsYXkuc2l6ZSkgY291bnRlcnMuZGlzcGxheS5zaXplLnRleHRDb250ZW50ID0gZm9ybWF0X2J5dGVzKGNvdW50ZXJzLnNpemUpO1xuICAgIHRoaXMucXVvdGFFc3RpbWF0ZSgpO1xuICB9XG5cbiAgcmVzZXRDb3VudGVyKGl0ZW0pIHtcbiAgICBjb25zdCBjb3VudGVycyA9IHRoaXMuY291bnRlcnNbaXRlbV07XG4gICAgWydjb3VudGVyJywgJ3NpemUnXS5mb3JFYWNoKGVsID0+IHtcbiAgICAgIGlmIChjb3VudGVycy5kaXNwbGF5W2VsXSkge1xuICAgICAgICBjb3VudGVyc1tlbF0gPSAwO1xuICAgICAgICBjb3VudGVycy5kaXNwbGF5W2VsXS50ZXh0Q29udGVudCA9IDA7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgcmVzZXRDb3VudGVycygpIHtcbiAgICBPYmplY3Qua2V5cyh0aGlzLm9wdGlvbnMuY29udHJvbHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIHRoaXMucmVzZXRDb3VudGVyKGtleSk7XG4gICAgfSk7XG4gICAgdGhpcy50b2dnbGVDb3VudGVycyhmYWxzZSk7XG4gIH1cbiAgdG9nZ2xlQ291bnRlcnMoc2hvdyA9IHRydWUpIHtcbiAgICBjb25zdCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uKTtcbiAgICBpZiAoIWVsKSByZXR1cm47XG4gICAgaWYgKHNob3cpIGVsLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgIGVsc2UgZWwuY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gIH1cblxuICBpbml0RmlsZUNvdW50ZXIoaXRlbSwgb3B0cywgaSkge1xuICAgIGNvbnN0IHNlcCA9IChpKSA/IGAgLyBgIDogYGA7XG4gICAgbGV0IGNvdW50ZXIgPSAwO1xuICAgIGxldCBjb3VudGVyZGlzcGxheSA9IG51bGw7XG4gICAgbGV0IHNpemUgPSAwO1xuICAgIGxldCBzaXplZGlzcGxheSA9IG51bGw7XG4gICAgLy8gY3JlYXRlIGRvbSBkaXNwbGF5IGVsZW1lbnRzXG5cblxuICAgIGxldCBib3hjb3VudGVycyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uKTtcblxuICAgIGNvbnN0IGl0ZW1vcHRzID0ge1xuICAgICAgZGlzcGxheToge30sXG4gICAgfTtcbiAgICBPYmplY3QuZW50cmllcyhvcHRzKS5mb3JFYWNoKChbaywgdmFsXSkgPT4ge1xuICAgICAgY29uc3QgY2wgPSBrICsgJ3MnO1xuICAgICAgY29uc3QgdHh0ID0ge1xuICAgICAgICBjb3VudGVyOiAnIHJlYWQnLFxuICAgICAgICBzaXplOiAnIHJlYWQnLFxuICAgICAgICBjb3VudGVyemlwcGVkOiAnIGNvbXByZXNzZWQnLFxuICAgICAgICBzaXplemlwcGVkOiAnIGNvbXByZXNzZWQnLFxuICAgICAgICBjb3VudGVycmVqZWN0ZWQ6ICcgcmVqZWN0ZWQnLFxuICAgICAgICBjb3VudGVyZXJyb3JmaWxlOiAnIGVycm9yJyxcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRpc3BsYXlsaXN0ID0gWydjb3VudGVycmVqZWN0ZWQnLCAnY291bnRlcmVycm9yZmlsZSddO1xuICAgICAgbGV0IGVsaW5zZXJ0ID0gYm94Y291bnRlcnMucXVlcnlTZWxlY3RvcignLicgKyBjbCk7XG4gICAgICBpZiAoIWVsaW5zZXJ0KSBlbGluc2VydCA9IGNyZWF0ZV9ib3goJ2RpdicsIHtcbiAgICAgICAgY2xhc3M6IGNsXG4gICAgICB9LCBib3hjb3VudGVycywgYGApO1xuICAgICAgbGV0IGVsID0gZWxpbnNlcnQucXVlcnlTZWxlY3RvcignLicgKyB2YWwpO1xuICAgICAgaWYgKCFlbCkge1xuICAgICAgICBlbCA9IGNyZWF0ZV9ib3goJ3NwYW4nLCB7XG4gICAgICAgICAgY2xhc3M6IHZhbCxcbiAgICAgICAgfSwgZWxpbnNlcnQsIGAgLyBgKTtcbiAgICAgICAgaWYgKHR4dC5oYXNPd25Qcm9wZXJ0eSh2YWwpKSB7XG4gICAgICAgICAgLy8gYWRkIGEgbGluayB0byBkaXNwbGF5IHRoZSByZWplY3RlZCBmaWxlcyBsaXN0XG4gICAgICAgICAgaWYgKGRpc3BsYXlsaXN0LmluZGV4T2YodmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBsaW5rID0gY3JlYXRlX2JveCgnYScsIHtcbiAgICAgICAgICAgICAgdGV4dDogdHh0W3ZhbF0sXG4gICAgICAgICAgICAgIGNsYXNzOiAndGV4dC1lcnJvcicsXG4gICAgICAgICAgICAgIHRpdGxlOiBgQ2xpY2sgdG8gZGlzcGxheSB0aGUgbGlzdCBvZiAke3R4dFt2YWxdfSBmaWxlc2BcbiAgICAgICAgICAgIH0sIGVsaW5zZXJ0KTtcbiAgICAgICAgICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIHRoaXMuZGlzcGxheUV4Y2VwdChsaW5rLCB2YWwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIGVsaW5zZXJ0LmFwcGVuZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0eHRbdmFsXSkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgdGhpcy5yZXNldENvdW50ZXIoaXRlbSk7XG4gICAgICBpdGVtb3B0cy5kaXNwbGF5W2tdID0gZWw7XG4gICAgICBpdGVtb3B0c1trXSA9IDA7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNvdW50ZXJzID0geyAuLi50aGlzLmNvdW50ZXJzLFxuICAgICAgLi4ue1xuICAgICAgICBbaXRlbV06IGl0ZW1vcHRzXG4gICAgICB9XG4gICAgfTtcblxuICB9XG4gIGRpc3BsYXlFeGNlcHQoZWwsIHR5cGUpIHtcbiAgICB0eXBlID0gdHlwZS5yZXBsYWNlKCdjb3VudGVyJywgJycpO1xuICAgIGNvbnN0IHRleHR2YWwgPSB7XG4gICAgICByZWplY3RlZDogYCB0eXBlIHJlamVjdGVkYCxcbiAgICAgIGVycm9yZmlsZTogYCBpbiBlcnJvcmBcbiAgICB9O1xuICAgIGlmIChPYmplY3Qua2V5cyh0ZXh0dmFsKS5pbmRleE9mKHR5cGUpIDwgMCkgcmV0dXJuO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICB0eXBlOiB3aW5kb3cuYWxlcnRib3guYWxlcnRjb25maWcudHlwZXMud2FybmluZyxcbiAgICAgIHBhcmVudDogZWwsXG4gICAgICBjb250ZW50OiBgRmlsZXMgJHt0aGlzLnJlamVjdGVkLmpvaW4oJzxicj4nKX0gJHt0ZXh0dmFsW3R5cGVdfWAsXG4gICAgfTtcbiAgICBpZiAoZWwuZGF0YXNldC5oYXNtZXNzYWdlKSB7XG4gICAgICB3aW5kb3cuYWxlcnRib3gucmVtb3ZlSXRlbU1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICBkZWxldGUgZWwuZGF0YXNldC5oYXNtZXNzYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbC5kYXRhc2V0Lmhhc21lc3NhZ2UgPSB0cnVlO1xuICAgICAgd2luZG93LmFsZXJ0Ym94LmFkZEl0ZW1NZXNzYWdlKG1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHNob3dDb250cm9sKGFjdGlvbiwgb3B0cykge1xuICAgIGNvbnN0IHBhcnQgPSAob3B0cyAmJiBvcHRzLnBhcnQpID8gb3B0cy5wYXJ0IDogZmFsc2U7XG4gICAgY29uc3QgYmlnZmlsZSA9IChvcHRzICYmIG9wdHMuYmlnZmlsZSkgPyBvcHRzLmJpZ2ZpbGUgOiBmYWxzZTtcbiAgICBjb25zdCBmaWxlcGF0aCA9IChvcHRzICYmIG9wdHMucGF0aCkgPyBvcHRzLnBhdGggOiB0aGlzLnVwbG9hZGVudHJ5LmdldEN1cnJlbnREaXJQYXRoKCk7XG4gICAgY29uc3QgdGFyZ2V0ID0gKChvcHRzLmhhc093blByb3BlcnR5KCdiaWdmaWxlJykgJiYgYmlnZmlsZSAhPT0gZmFsc2UpID8gJ3ppcHBlZCcgOiAnemlwJyk7XG4gICAgbGV0IG1lc3NhZ2UsIHRleHQgPSBudWxsO1xuICAgIC8vICd6aXAnIC0tLW9ubHkgYnRuIGZvciB6aXAgYWN0aW9ucyBmb3IgdGhlIG1vbWVudFxuICAgIGNvbnN0IGJ0biA9IHRoaXNbdGhpcy5vcHRpb25zLmJ0bnByZWZpeCArICd6aXAnICsgdGFyZ2V0XTtcbiAgICBpZiAoIWJ0bikgcmV0dXJuO1xuICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5yZWFkeTpcbiAgICAgICAgdGhpcy5yZXNldENvdW50ZXJzKCk7XG4gICAgICAgIGlmICh0aGlzLnVwbG9hZGVudHJ5KSB7XG4gICAgICAgICAgdGhpcy51cGxvYWRlbnRyeS5saXN0KCk7XG4gICAgICAgICAgdGhpcy51cGxvYWRlbnRyeSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgbWVzc2FnZSA9IG51bGw7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuZm9sbG93OlxuICAgICAgICBpZiAoYmlnZmlsZSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCcgZm9sbG93Jywgb3B0cyk7XG4gICAgICAgICAgbWVzc2FnZSA9IHt9O1xuICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGBXYWl0IGZvciBuZXh0IG9wZXJhdGlvbmA7XG4gICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIG1lc3NhZ2UgPSBudWxsO1xuXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuZW5kemlwOlxuICAgICAgICBpZiAoIXBhcnQpIHRoaXMuc2hvd0NvbXBsZXRlKCk7XG4gICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGBDbG9zZSB6aXAgZmlsZWAgKyAoKHBhcnQpID8gYCBgICsgcGFydCA6IGBgKTtcbiAgICAgICAgYnRuLnRpdGxlID0gKHBhcnQpID8gYFlvdXIgZmlsZSBpcyB0b28gYmlnIC0geW91IGhhdmUgdG8gc2VuZCB0aGlzIHBhcnQgYmVmb3JlIGNvbnRpbnVpbmcgdG8gcHJvY2VzcyB0aGUgZGlyZWN0b3J5YCA6IGBDbGljayB0byBlbmQgemlwIGZpbGVgO1xuICAgICAgICBtZXNzYWdlID0ge1xuICAgICAgICAgIG5hbWU6IHRoaXMuZXZlbnRuYW1lcy5lbmR6aXAsXG4gICAgICAgICAgcGFydDogcGFydCxcbiAgICAgICAgICBmaWxlcGF0aDogZmlsZXBhdGgsXG4gICAgICAgICAgYmlnZmlsZTogYmlnZmlsZSxcbiAgICAgICAgfTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5iaWdmaWxlOlxuICAgICAgICBpZiAoYmlnZmlsZSAmJiBiaWdmaWxlICE9PSAnJykge1xuICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGBVcGxvYWQgYmlnIEZpbGUgc2VwYXJhdGVseWA7XG4gICAgICAgICAgbWVzc2FnZSA9IHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuZXZlbnRuYW1lcy5iaWdmaWxlLFxuICAgICAgICAgICAgcGF0aDogZmlsZXBhdGgsXG4gICAgICAgICAgICBwYXJ0OiBwYXJ0LFxuICAgICAgICAgICAgYmlnZmlsZTogYmlnZmlsZVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5zZW5kZmlsZTpcbiAgICAgICAgbWVzc2FnZSA9IHtcbiAgICAgICAgICBuYW1lOiB0aGlzLmV2ZW50bmFtZXMuc2VuZGZpbGUsXG4gICAgICAgICAgcGF0aDogZmlsZXBhdGgsXG4gICAgICAgICAgcGFydDogcGFydCxcbiAgICAgICAgICBiaWdmaWxlOiBiaWdmaWxlXG4gICAgICAgIH07XG4gICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGBVcGxvYWQgemlwIGZpbGVgO1xuICAgICAgICBpZiAobWVzc2FnZS5iaWdmaWxlICYmIG1lc3NhZ2UuYmlnZmlsZSAhPT0gJycpIGJ0bi50ZXh0Q29udGVudCArPSBgIGAgKyBvcHRzO1xuICAgICAgICBidG4uZGF0YXNldC5tZXNzYWdlID0gSlNPTi5zdHJpbmdpZnkobWVzc2FnZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMucGVuZGluZzpcbiAgICAgICAgYnRuLnRleHRDb250ZW50ID0gYCBQZW5kaW5nIGAgKyAoKHRhcmdldCAhPT0gJ3ppcCcpID8gJyBiaWcgZmlsZScgOiAnJyk7XG4gICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIG1lc3NhZ2UgPSB7fTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5nemlwOlxuICAgICAgICB0ZXh0ID0gYGNvbXByZXNzaW5nIGJpZyBmaWxlIDokeyhvcHRzICYmIG9wdHMuYmlnZmlsZSk/ZmlsZXBhdGggOmBgfSAkeyhvcHRzICYmIG9wdHMuc2l6ZSk/Zm9ybWF0X2J5dGVzKG9wdHMuc2l6ZSk6YGB9YDtcbiAgICAgICAgYnRuLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgbWVzc2FnZSA9IHt9O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLnRlcm1pbmF0ZTpcbiAgICAgICAgYnRuLmRhdGFzZXQubWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBuYW1lOiB0aGlzLmV2ZW50bmFtZXMuaW5pdCxcbiAgICAgICAgICBiaWdmaWxlOiBiaWdmaWxlLFxuICAgICAgICAgIHBhcnQ6IHBhcnQsXG4gICAgICAgICAgcGF0aDogZmlsZXBhdGhcbiAgICAgICAgfSk7XG4gICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKGNzcy5oaWRlKTtcbiAgICAgICAgYnRuLmNsaWNrKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5lcnJvcmZpbGU6XG4gICAgICAgIHRoaXMuZXJyb3JmaWxlLnB1c2goZmlsZXBhdGgpO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuZXJyb3I6XG4gICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IChvcHRzLnRleHQpID8gb3B0cy50ZXh0IDogYEVycm9yYDtcbiAgICAgICAgbWVzc2FnZSA9IHtcbiAgICAgICAgICBuYW1lOiBvcHRzLm5hbWUsXG4gICAgICAgICAgcGF0aDogZmlsZXBhdGgsXG4gICAgICAgICAgcGFydDogcGFydCxcbiAgICAgICAgICBiaWdmaWxlOiBiaWdmaWxlXG4gICAgICAgIH07XG4gICAgICAgIGNvbnNvbGUubG9nKCc/Pz8/Pz8/P0VSUk9SPz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8tLS0gZXJyb3Jjb250cm9sJyArIGFjdGlvbiwgbWVzc2FnZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29uc29sZS5sb2coJz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8tLS0tZGVmYXVsdCBjb250cm9sICcgKyBhY3Rpb24sIG9wdHMpO1xuICAgICAgICByZXR1cm47XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBpZiAobWVzc2FnZSA9PT0gbnVsbCkge1xuICAgICAgZGVsZXRlIGJ0bi5kYXRhc2V0Lm1lc3NhZ2U7XG4gICAgICBidG4uY2xhc3NMaXN0LmFkZChjc3MuaGlkZSlcbiAgICB9IGVsc2Uge1xuICAgICAgYnRuLmRhdGFzZXQubWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpO1xuICAgICAgYnRuLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgICAgaWYgKGJ0bi5kaXNhYmxlZCkge1xuICAgICAgICBidG4uY2xhc3NMaXN0LmFkZChjc3MuY29uc29sZSk7XG4gICAgICAgIGJ0bi5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBodG1sX3NwaW5uZXIoJ3RleHQtc3RvbmUtMjAwIG1sLTEgbXItMiBhbGlnbi10ZXh0LWJvdHRvbSBpbmxpbmUtYmxvY2snKSk7XG4gICAgICB9IGVsc2UgYnRuLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmNvbnNvbGUpO1xuICAgIH07XG4gIH1cblxuICBnZXRCdG4oaXRlbSwgdGFyZ2V0KSB7XG4gICAgY29uc3QgYnRua2V5ID0gdGhpcy5vcHRpb25zLmJ0bnByZWZpeCArIGl0ZW0gKyB0YXJnZXQ7XG4gICAgaWYgKHRoaXNbYnRua2V5XSkgcmV0dXJuIHRoaXNbYnRua2V5XTtcbiAgICBjb25zdCBkaXNwbGF5ID0gdGhpcy5vcHRpb25zLmNvbnRyb2xzW2l0ZW1dLmJ0blt0YXJnZXRdO1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRpc3BsYXkpO1xuICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuZGlzcGxheXByb2dyZXNzaW9uO1xuICAgIGlmICghYnRuKSB7XG4gICAgICBwYXJlbnQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBgPGJ1dHRvbiBpZD1cIiR7ZGlzcGxheX1cIiBjbGFzcz1cIiR7ZGlzcGxheX0gJHtjc3MuYnV0dG9ufSAke2Nzcy5oaWRlfVwiPjwvYnV0dG9uPmApO1xuICAgICAgdGhpc1tidG5rZXldID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZGlzcGxheSk7XG4gICAgICB0aGlzW2J0bmtleV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoZSkgPT4ge1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuZW1pdFRvWmlwKGUuY3VycmVudFRhcmdldCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgcGFyZW50LmFwcGVuZChidG4pO1xuICAgIHJldHVybiB0aGlzW2J0bmtleV07XG4gIH1cblxuICBpbml0Q29udHJvbHMoKSB7XG4gICAgT2JqZWN0LmVudHJpZXModGhpcy5vcHRpb25zLmNvbnRyb2xzKS5mb3JFYWNoKChba2V5LCBjb250cm9sXSwgaSkgPT4ge1xuICAgICAgdGhpcy5pbml0RmlsZUNvdW50ZXIoa2V5LCBjb250cm9sLmRpc3BsYXksIGkpO1xuICAgICAgaWYgKGNvbnRyb2wuYnRuKSB0aGlzLmFjdGl2YXRlQ29udHJvbHMoa2V5LCBjb250cm9sLmJ0bik7XG4gICAgfSk7XG4gIH1cbiAgYWN0aXZhdGVDb250cm9scyhrZXksIGJ0bnMpIHtcbiAgICBPYmplY3Qua2V5cyhidG5zKS5mb3JFYWNoKChidG4pID0+IHtcbiAgICAgIHRoaXNbdGhpcy5vcHRpb25zLmJ0bnByZWZpeCArIGtleSArIGJ0bl0gPSB0aGlzLmdldEJ0bihrZXksIGJ0bik7XG4gICAgfSlcblxuICB9XG5cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/js-my-files.js\n")}}]);