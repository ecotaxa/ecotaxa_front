/*! For license information please see src_modules_js-my-files_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-my-files_js"],{"./src/modules/files/js-dirlist.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsDirList: () => (/* binding */ JsDirList),\n/* harmony export */   dirlistOptions: () => (/* binding */ dirlistOptions)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\n/* harmony import */ var _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../modules/entry.js */ \"./src/modules/entry.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\n// local css\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash = 'intrash';\n// original types\nconst json_types = {\n  directory: 'D',\n  file: 'F'\n}\nconst trash_dir_name = 'trash.';\nconst dirlistOptions = {\n  api_parameters: {\n    entry: 'entry',\n    dest: 'dest',\n    rootname: 'My Files'\n  },\n  url: '/gui/files',\n  controls: {\n    scan: {\n      display: {\n        counter: 'counter',\n        size: 'size',\n      }\n    },\n    zip: {\n      btn: {\n        zip: 'makezip',\n        zipped: 'makezipped'\n      },\n      display: {\n        size: 'sizezipped',\n        counter: 'counterzipped',\n      }\n    },\n  },\n  upload: {\n    label: 'upload'\n  },\n  btnprefix: 'btn',\n  btnfilelist: null,\n  entry: {\n    draggables: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node],\n    icons: {\n      image: 'img',\n      document: 'doc'\n    },\n  },\n  entrycontrols: {\n    selectors: {\n      typentries: '[data-typentries]',\n      hascontrols: '.has-controls',\n    },\n    controls: {\n      list: {\n        action: 'list',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard]\n      },\n      create: {\n        action: 'create',\n        text: 'new folder',\n        icon: 'icon-folder-plus',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root]\n      },\n      remove: {\n        action: 'remove',\n        text: 'delete',\n        icon: 'icon-trash',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded]\n      },\n      move: {\n        action: 'move',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node]\n      },\n      rename: {\n        action: 'rename',\n        trigger: 'dblclick',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node]\n      }\n    },\n    css: {\n      entrycontrols: 'entrycontrols',\n      entries: '.entries',\n    }\n  },\n  selectors: {\n    doupload: '.target-upload',\n    droptarget: '.droptarget',\n    dirlist: '.dirlist',\n    uploadfile: 'uploadfile',\n    displayimport: 'displayimport',\n    trigger: '.trigger',\n  },\n}\n\nfunction EntryAction(args, options) {\n  const entryaction = new _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.Entry(args, options);\n  entryaction.eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    isdiscard: 'isdiscard',\n    discarded: 'discarded',\n    editable: 'editable'\n  }\n  entryaction.newEntry = function(entry) {\n    return EntryAction(entry, this.options);\n  }\n  entryaction.isTrashDir = function(name = null) {\n    return ((name === null) ? this.name : name).indexOf(trash_dir_name) === 0;\n  }\n  entryaction.isInTrash = function(path = null) {\n    path = (path === null) ? this.getCurrentDirPath() : path;\n    if (path === null) (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.stop_on_error)('path_not_found');\n    path = path.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n    return (path.length > 1 && path[0].indexOf(trash_dir_name)) === 0;\n  }\n  entryaction.branchListener = function(callback = null) {\n    const el = this.container;\n    if (el.dataset.action === \"create\") return;\n    this.toggleActive();\n    if (this.isActive()) this.branchActivate(callback).then(() => {\n      this.emitEvent();\n    });\n  }\n  entryaction.getCurrentDirPath = function() {\n    return this.getCurrentPath().join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n  }\n\n  entryaction.fetchAction = async function(action, callback = null, callback_error = null) {\n    const api_parameters = this.options.api_parameters;\n    const label = this.getLabelElement();\n    let entrypath = this.getCurrentDirPath();\n    if (entrypath === '') return;\n    const data = new FormData();\n    data.append(api_parameters.entry, entrypath);\n    switch (action) {\n      case this.options.actions.create:\n        if (label === null) return;\n        entrypath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        entrypath[entrypath.length - 1] = label.textContent;\n        if (entrypath !== \"\") data.set(api_parameters.entry, entrypath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n      case this.options.actions.move:\n        // get new path - append item to drop directory\n        if (callback !== null) {\n          let destpath = callback();\n          callback = null;\n          if (destpath === entrypath) return;\n          data.append(api_parameters.dest, destpath);\n        } else return;\n        break;\n      case this.options.actions.rename:\n        const destpath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        destpath[destpath.length - 1] = label.textContent;\n        if (destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator) === entrypath) return;\n        data.append(api_parameters.dest, destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n    }\n    const response = await fetch(this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + action, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)({\n      method: \"POST\",\n      body: data\n    }));\n    const json = await response.json();\n    if (json.status === 200) {\n      if (callback) callback(json.message);\n      return true;\n    } else {\n      if (callback_error) callback_error(json);\n      else (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.stop_on_error)(json);\n    }\n  }\n  entryaction.listenRename = function(evt = 'dblclick') {\n    const entry = this;\n    const label = entry.getLabelElement();\n    label.addEventListener(evt, (e) => {\n      label.dataset.oldname = label.textContent;\n      if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) {\n        e.preventDefault();\n        return;\n      }\n      entry.setEditable();\n    });\n    // remove editable when click on entry\n    entry.container.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      entry.setEditable(false);\n      if (entry.container.dataset.action === entry.options.actions.create) entry.container.remove();\n    });\n  }\n  entryaction.setEditable = function(on = true) {\n    const entry = this;\n    const label = entry.getLabelElement();\n    const send_rename = async (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        if (label.dataset.oldname && label.dataset.oldname !== label.textContent) {\n          const callback = (txt) => {\n            if (txt === \"\") _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage(label, {\n              type: 'error',\n              content: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.i18nmessages.exists,\n              duration: 2000\n            });\n            else txt = txt.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator).pop();\n            label.textContent = txt;\n            if (entry.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch) entry.branchListener();\n            delete entry.container.dataset.action;\n          }\n          const action = (entry.container.dataset.action) ? entry.container.dataset.action : entry.options.actions.rename;\n          await entry.fetchAction(action, callback);\n        }\n        entry.setEditable(false);\n      }\n    }\n    if (on === true) {\n      label.contentEditable = true;\n      entry.container.draggable = false;\n      label.classList.add(entry.options.css.editable);\n      label.addEventListener('keydown', send_rename);\n    } else {\n      label.contentEditable = false;\n      label.classList.remove(entry.options.css.editable);\n      label.removeEventListener('keydown', send_rename);\n      entry.container.draggable = entry.isDraggable();\n    }\n  }\n  entryaction.getListeners = function() {\n    let listeners = [];\n    let func = (e) => {\n      e.stopImmediatePropagation();\n      this.branchListener(() => {\n        this.emitEvent(this.eventnames.attach);\n      });\n    };\n\n    if ([_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard].indexOf(this.type) < 0) {\n      listeners = this.moveHandlers();\n      if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node) {\n        func = (e) => {\n          e.stopImmediatePropagation();\n          this.toggleActive();\n          this.emitEvent();\n        }\n      } else if (this.isInTrash()) {\n        this.type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded;\n      } else listeners = listeners.concat(this.dropHandlers());\n      this.listenRename();\n    } else listeners = listeners.concat(this.dropHandlers());\n    listeners.unshift({\n      name: 'click',\n      target: 'label',\n      func: func\n    });\n    return listeners;\n  }\n  entryaction.setAttributes = function(entry) {\n    // convert attributes\n\n    entry.type = (entry.type === json_types.directory) ? _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch : _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node;\n    if (this.isTrashDir(entry.name)) entry.type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard;\n    entry.parent = this;\n    return entry;\n  }\n  entryaction.extraStyles = function(entry) {\n    const ext = entry.name.split('.').pop();\n    const cl = (entry.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node) ? (filter_files.images.split(',').indexOf(ext) >= 0) ? this.options.icons.image : this.options.icons.document : null;\n    if (cl !== null) this.options.css.icons.push(cl);\n  }\n  entryaction.setDiscard = function() {\n    if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) this.emitEvent(this.eventnames.isdiscard);\n  }\n\n  entryaction.getUrl = function() {\n    const subdir = (this.name) ? this.getCurrentDirPath() : null;\n    return this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + this.options.actions.list + ((subdir) ? _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + subdir : '');\n  }\n  entryaction.jsonEntries = async function(response) {\n    const json = await response.json();\n    return (json.entries) ? json.entries : undefined;\n  }\n\n  entryaction.remove = function() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.remove).then(ret => {\n      this.setParent(null);\n      this.removeListeners(this.dropHandlers());\n      this.setOff();\n      this.container.animate({\n        transform: \"translateX(-100%) scale(0)\"\n      }, {\n        duration: 1000\n      });\n      setTimeout(() => {\n        if (this.from && this.from.isInTrash()) this.destroy();\n        else this.emitEvent(this.eventnames.discarded);\n      }, 1000);\n\n    }).catch(error => {\n      console.log('err', error);\n    });\n  }\n  entryaction.create = function() {\n    const new_entry = this.createEntry({\n      type: json_types.directory,\n      name: 'NewFolder'\n    });\n    // move new entry to top of the list\n    const entries = this.getEntriesElement();\n    entries.prepend(new_entry.container);\n    new_entry.container.dataset.action = this.options.actions.create;\n    new_entry.label.dispatchEvent(new Event('dblclick'));\n  }\n  entryaction.rename = function() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.rename).then(() => {\n      console.log('renamed', this)\n    });\n  }\n\n  entryaction.move = function(dest, callback = null) {\n    if (this.isTrashDir()) return;\n    if (this.isDiscarded()) return this.remove();\n    this.fetchAction(this.options.actions.move, () => {\n      return dest.getCurrentDirPath() + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + this.name;\n    }).then(() => {\n      this.setParent(dest);\n      if (callback !== null) callback();\n    }).catch(err => {\n      console.log('errmove', err)\n    });\n  }\n  entryaction.setParent = function(dest) {\n    this.from = this.parent;\n    if (dest !== null) {\n      dest.entries.push(this);\n      this.parent = dest;\n      const entries = dest.getEntriesElement(true);\n      entries.append(this.container);\n    }\n    const i = this.parent.entries.indexOf(this);\n    if (i >= 0) delete this.parent.entries[i];\n    else console.log('entry not found in parent entries', this.parent);\n\n  }\n  return entryaction;\n}\n\nclass JsDirList {\n  _events = {};\n  eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    action: 'action',\n    complete: 'complete',\n    error: 'error',\n  }\n  options;\n\n  constructor(parent, options = {}) {\n    if (!parent.jsdirlist) {\n      parent = (parent instanceof HTMLElement) ? parent : document.querySelector(parent);\n      if (!parent) return;\n      this.options = { ...dirlistOptions,\n        ...options\n      };\n\n      this.options.entry = { ..._modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryOptions,\n        ...this.options.entry,\n      };\n      this.options.entry.url = this.options.url;\n      this.container = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(\n        this.options.entry.tags.tag, {\n          class: this.options.selectors.dirlist.substr(1)\n        }, parent);\n      this.init();\n      this.container.append(this.root.container);\n      parent.jsdirlist = this;\n    }\n    return parent.jsdirlist;\n  }\n\n  init() {\n    const type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root;\n    const obj = {};\n    this.entrycontrols = (this.entrycontrols === undefined) ? (0,_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.EntryControls)(this.container, this.options.entrycontrols) : null;\n    Object.entries(this.options.entrycontrols.controls).forEach(([key, control]) => {\n      obj[key] = control.action;\n    });\n    this.options.entry.actions = obj;\n    this.initEvents();\n    const options = { ...this.options.entry,\n      ...{\n        api_parameters: this.options.api_parameters\n      }\n    };\n    options.event = {\n      name: this.options.entry.event.name,\n      listener: this.container\n    }\n    this.root = EntryAction({\n      type: type,\n      name: '',\n      label: this.options.api_parameters.rootname,\n\n    }, options);\n    this.root.addListeners();\n  }\n  initEvents() {\n    // events controls on entries\n    const self = this;\n    // alerts on error\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.on(this.eventnames.error, (e) => {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.renderAlert({\n        type: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.error,\n        content: e,\n        inverse: true,\n        dismissible: true\n      });\n    });\n    this.container.addEventListener(this.options.entry.event.name, (e) => {\n      const evtnames = e.detail.entry.eventnames;\n      switch (e.detail.action) {\n        case evtnames.isdiscard:\n          if (this.trashdir) this.trashdir.container.remove();\n          this.trashdir = e.detail.entry;\n          this.root.container.parentElement.insertBefore(e.detail.entry.container, this.root.container);\n          this.root.container.append(e.detail.entry.container);\n          break;\n        case evtnames.discarded:\n          let parent = e.detail.entry.parent;\n          if (e.detail.entry.isInTrash()) {\n            e.detail.entry.container.remove();\n            parent = this.root;\n          } else {\n            e.detail.entry.moveTo(this.trashdir);\n            e.detail.entry.container.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash);\n          }\n          this.attachControls(parent);\n          break;\n        case evtnames.attach:\n          // no upload on trash dir\n          const type = (e.detail.entry.isInTrash()) ? _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded : e.detail.entry.container.dataset.type;\n          if (type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) return;\n          if (e.detail.action === evtnames.attach && type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded) return;\n          this.attachControls(e.detail.entry);\n          break;\n        case \"dragstart\":\n          this.dragentry = this.activentry = e.detail.entry;\n          e.detail.entry.container.classList.add(e.detail.entry.options.css.dragging);\n          this.detachControls();\n          break;\n        case \"dragover\":\n          if (!this.dragentry) return;\n          if (this.overitem !== e.detail.entry.container) {\n            if (this.overitem) this.overitem.classList.remove(e.detail.entry.options.css.dragover);\n            e.detail.entry.container.classList.add(e.detail.entry.options.css.dragover);\n            this.overitem = e.detail.entry.container;\n          }\n          break;\n        case \"dragend\":\n          this.dragentry = null;\n          if (this.overitem) this.overitem.classList.remove(e.detail.entry.options.css.dragover);\n          this.overitem = null;\n          break;\n        case \"drop\":\n          if (!this.dragentry) {\n            _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.action, e);\n            return true;\n          }\n          const el = this.dragentry.container;\n          const dest_entry = e.detail.entry;\n          dest_entry.resetDragOver();\n          if (this.dragentry !== null) {\n            if (this.dragentry.options.actions.move) {\n              try {\n                this.dragentry.move(dest_entry);\n                if ([_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded].indexOf(dest_entry.type) >= 0) this.attachControls(dest_entry);\n              } catch (error) {\n                console.log('errordrop ', error)\n                this.dragentry.unMove();\n              }\n            } else console.log('noactionon drop');\n\n          } else console.log(' parent===null or dragitem===null or dragitem===parent', this.dragentry)\n\n          break;\n        case evtnames.editable:\n          if (this.editable) this.editable.setEditable(false);\n          break;\n\n        default:\n          if (e.detail.entry.active) {\n            this.attachControls(e.detail.entry);\n          } else this.attachControls(this.root);\n          break;\n      }\n    });\n  }\n\n  attachControls(entry) {\n    if (this.entrycontrols) this.entrycontrols.attachControls(entry);\n    this.activentry = entry;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.attach, {\n      entry: this.activentry\n    });\n  }\n\n  detachControls() {\n    const dest = (this.activentry) ? ((this.activentry.parent) ? this.activentry.parent : this.root) : this.root;\n    if (this.entrycontrols) this.entrycontrols.attachControls(dest);\n    this.activentry = dest;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.attach, {\n      entry: dest\n    });\n  }\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/files/js-dirlist.js\n")},"./src/modules/js-my-files.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsMyFiles: () => (/* binding */ JsMyFiles)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/files/js-dirlist.js */ \"./src/modules/files/js-dirlist.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst objaccept = {\n  \"image/*\": [\".png\", \".jpeg\", \".jpg\"],\n  \"text/tab-separated-values\": [\".tsv\"],\n  \"application/zip\": [\".zip\"],\n  \"application/gzip\": [\".gz\"],\n  \"application/x-bzip\": [\".bz\"],\n  \"application/x-bzip2\": [\".bz2\"]\n}\nconst accept = Object.values(objaccept).reduce((a, b) => a.concat(b));\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button = 'button p-1 mx-auto sm:mr-4 mb-4';\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\nclass JsMyFiles {\n  done = true;\n  jsDirToZip = null;\n  jsDirList = null;\n  trash_dir_name = 'trash.';\n  counters = {};\n  _events = {};\n  eventnames = {\n    complete: 'complete',\n    error: 'error',\n  };\n  rejected = [];\n  errorfile = [];\n\n  constructor(container, options = {}) {\n    if (!container.jsmyfiles) {\n      console.log('build myfiles')\n      container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n      if (!container) return;\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dom_purify)(container, 'dataset');\n      this.container = container;\n      const defaultOptions = {\n        controls: {\n          scan: {\n            display: {\n              counter: 'counter',\n              size: 'size',\n            }\n          },\n          zip: {\n            btn: {\n              zip: 'makezip',\n              zipped: 'makezipped'\n            },\n            display: {\n              size: 'sizezipped',\n              counter: 'counterzipped',\n            }\n          },\n          reject: {\n            display: {\n              counter: 'counterrejected'\n            }\n          },\n          errorfile: {\n            display: {\n              counter: 'countererrorfile'\n            }\n          }\n        },\n        upload: {\n          label: 'upload'\n        },\n        btnprefix: 'btn',\n        btnfilelist: null,\n        selectors: {\n          droptarget: '.droptarget',\n          trigger: '.trigger',\n          uploadfile: 'uploadfile',\n        },\n        display: {\n          progression: 'display-progression',\n          dropzone: 'dropzone',\n          boxtitle: 'boxtitle',\n          counters: 'counters',\n          sizes: 'sizes',\n          timers: 'timers'\n        },\n\n        css: {\n          dragover: 'dragover'\n        }\n      };\n      this.options = Object.assign(defaultOptions, options);\n      this.options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : ['directory', 'file'];\n      this.haspicker = (window.showDirectoryPicker);\n      this.options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : ['directory', 'file'];\n      this.init();\n      container.jsmyfiles = this;\n    }\n    return container.jsmyfiles;\n  }\n  init() {\n    // create dirlist box\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    this.addDisplayProgression();\n\n    this.addDirList();\n    this.addDropzone();\n    this.initControls();\n    this.initEvents().then(() => {\n      this.resetCounters();\n    });\n  }\n  initTimer() {\n    this.timer = new Date();\n  }\n  async initEvents() {\n    (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.add_custom_events)(this);\n    //To be refactored - for steppers )\n    this.on(this.eventnames.processed, async (e) => {\n      if (this.nextaction) await this.nextaction();\n    });\n    // alerts on error\n    this.on(this.eventnames.error, (e) => {\n      console.log('scandir receive error message', e)\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n        type: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.error,\n        content: e,\n        inverse: true,\n        dismissible: true\n      });\n\n    });\n    const self = this;\n    if (this.options.controls.zip) {\n      const {\n        JsDirToZip\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_fflate_esm_browser_js\"), __webpack_require__.e(\"src_modules_files_js-dirtozip_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-dirtozip.js */ \"./src/modules/files/js-dirtozip.js\"));\n      this.jsDirToZip = JsDirToZip();\n      Object.keys(this.jsDirToZip.eventnames).forEach((key) => {\n        this.eventnames[key] = this.jsDirToZip.eventnames[key];\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(key, (e) => {\n          switch (key) {\n            case this.eventnames.clientcounter:\n              this.fileCounter(e);\n              break;\n            case this.eventnames.reject:\n              this.rejected.push(e.path);\n              this.fileCounter({\n                name: 'reject',\n                path: e.path,\n              });\n              break;\n            case this.eventnames.follow:\n            case this.eventnames.complete:\n              if (!e || !e.hasOwnProperty(\"name\") || e.name === \"\") {\n                console.log('no emit complete name' + key, e);\n                return;\n              }\n              self.showControl(e.name, e);\n              break;\n            case this.eventnames.message:\n              switch (e.name) {\n                case 'console':\n                  this.addConsoleMessage({\n                    id: (e.id) ? e.id : null,\n                    content: e.message,\n                    parent: this.container\n                  });\n                  break;\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.error:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.success:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.danger:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.info:\n                  _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n                    type: e.name,\n                    content: e.message,\n                    dismissible: true,\n                    inverse: false\n                  });\n                  console.log('error', e);\n                  break;\n                default:\n                  console.log('message', e);\n                  break;\n              }\n              break;\n          }\n        });\n      });\n    }\n    window.addEventListener('beforeunload', (e) => {\n      if (!this.done) {\n        e.preventDefault();\n        e.returnValue = (this.options.preventclose) ? this.options.preventclose : `Some work is in progress in this window.\\nAre you sure you want to leave?`;\n      }\n    });\n  }\n  emitToZip(btn) {\n    const message = (btn.dataset.message) ? JSON.parse(btn.dataset.message) : null;\n    if (!message) btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (message) {\n      if (message.name) {\n        const name = message.name;\n        delete message.name;\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.emit(name, message);\n      }\n    }\n    if (name === this.eventnames.sendfile) btn.disabled = true;\n  }\n\n  quotaEstimate(obj) {\n    return this.jsDirToZip.quotaEstimate();\n  }\n  scanBrowse(e, options) {\n    return this.jsDirToZip.scanBrowse(e, options);\n\n  }\n  scanHandle(dir, options) {\n    return this.jsDirToZip.scanHandle(dir, options);\n  }\n  async handleBrowse(e) {\n    if (!this.setUploadEntry()) return;\n    this.initTimer();\n    this.toggleCounters(true);\n    if (!this.haspicker) e = e.target.files;\n    await this.scanBrowse(e, {\n      accept: accept,\n    });\n  }\n\n  addDropzone() { //\n    this.dropzone = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n      id: this.options.display.dropzone\n    });\n    const input = (this.haspicker) ? null : (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('input', {\n      type: \"file\",\n      name: this.options.selectors.uploadfile,\n      id: this.options.selectors.uploadfile,\n      multiple: true,\n      allowdirs: true,\n      accept: accept,\n      class: 'hidden'\n    }, this.dropzone);\n    if (input) input.addEventListener(\"change\", (e) => {\n      this.handleBrowse(e)\n    });\n    const btns = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {},\n      this.dropzone);\n\n    this.options.browse.forEach(opt => {\n      const text = (this.container.dataset[`textbrowse${opt}`]) ? this.container.dataset[`textbrowse${opt}`] : `browse${opt}`;\n      const btn = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n        class: this.options.selectors.trigger.slice(1),\n        dataset: {\n          type: opt\n        },\n        text: text\n      }, btns);\n      btn.addEventListener('click', async (e) => {\n        if (this.haspicker) {\n          this.openDirDialog(opt, (e) => {\n            this.handleBrowse(e)\n          });\n        } else {\n          if (opt === \"directory\") {\n            input.directory = true;\n            input.webkitdirectory = true;\n          } else { //file\n            input.directory = false;\n            input.webkitdirectory = false;\n          }\n          input.dispatchEvent(new MouseEvent(\"click\"));\n\n        }\n\n      });\n    });\n    const spandrop = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n      text: this.container.dataset.textdrop\n    }, btns);\n\n  }\n\n  toggleDropTarget(on = true) {\n    const self = this;\n    const droptarget = (this.activentry) ? this.activentry.container : null;\n    if (droptarget === null) return;\n    const cssdragover = (this.jsDirList) ? (this.jsDirList.options.entry) ? this.jsDirList.options.entry.css.dragover : this.options.css.dragover : this.options.css.dragover;\n    const target_dragover = (e) => {\n      if (!this.dragover && this.activentry && this.activentry.container === e.currentTarget) {\n        droptarget.classList.add(cssdragover);\n      }\n      self.handleDragOver(e);\n    }\n    const target_drop = async (e) => {\n      droptarget.classList.remove(cssdragover);\n      await self.handleDrop(e);\n    }\n\n    // set events and css for new dropzone\n    if (on === false) {\n      droptarget.removeEventListener('dragover', target_dragover);\n      droptarget.removeEventListener('drop', target_drop);\n      droptarget.classList.remove(this.options.selectors.droptarget.substr(1));\n    } else {\n      droptarget.addEventListener('dragover', target_dragover);\n      droptarget.addEventListener('drop', target_drop);\n      droptarget.classList.add(this.options.selectors.droptarget.substr(1));\n    }\n  }\n\n  async addDirList() {\n    this.jsDirList = new _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__.JsDirList(this.container);\n    this.activentry = this.jsDirList.root;\n    this.rootitem = this.targetitem = this.activentry.container;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.attach, (e) => {\n      if (!e.entry) return;\n      this.detachDropzone();\n      this.activentry = e.entry;\n      this.targetitem = this.activentry.container;\n      if (this.activentry.isBranch(true)) this.addUploadDialog();\n    });\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.detach, (e) => {\n      this.detachDropzone();\n      this.activentry = null;\n      this.targetitem = null;\n    });\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.action, (e) => {\n      if (e.detail.action === \"drop\") this.handleDrop(e.detail.event);\n      else console.log('action not managed ' + e.detail.action, e.detail)\n    });\n    this.activentry.label.dispatchEvent(new Event('click'));\n  }\n\n  addDisplayProgression() {\n    // add counters\n    if (this.displayprogression) return;\n    let el = document.getElementById(this.options.display.progression);\n    if (!el) {\n      el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        id: this.options.display.progression\n      }, this.container);\n      el.insertAdjacentHTML('afterbegin', `<div class=\"${this.options.display.progression}\"><div class=\"${this.options.display.counters}\"></div><div class=\"${this.options.display.sizes}\"></div><div class=\"${_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress}\"></div><div class=\"${this.options.display.timers}\"></div></div>`);\n      this.displayprogression = el;\n    }\n  }\n  enableDropzone(enable = true, destroy = false) {\n    if (destroy || enable === false) this.dropzone.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (enable) {\n      this.dropzone.dataset.enabled = true;\n      this.dropzone.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    } else delete this.dropzone.dataset.enabled;\n  }\n  //\n  attachDropzone() {\n    if (this.dropzone.dataset.enabled) {\n      this.targetitem.insertBefore(this.dropzone, this.activentry.label.nextElementSibling);\n      this.toggleDropTarget(true);\n    }\n  }\n  detachDropzone() {\n    this.enableDropzone(false);\n    this.toggleDropTarget(false);\n  }\n\n  openDirDialog(type, callback) {\n    // if chrome 86 , edge 86, opera 72\n    const showpick = (type === \"directory\") ? window.showDirectoryPicker : window.showOpenFilePicker;\n    const pickopts = (type === \"directory\") ? {\n      mode: \"read\",\n      multiple: true\n    } : {\n      types: [{\n        description: \"Images,.tsv, zip, gzip, tar files\",\n        accept: objaccept,\n      }, ],\n      excludeAcceptAllOption: true,\n      multiple: true,\n    };\n    showpick(pickopts).then(pick => {\n      callback(pick);\n    });\n  }\n  setUploadEntry() {\n    if (this.uploadentry) return false;\n    this.uploadentry = this.activentry;\n    return true;\n  }\n  // drag&drop\n  async handleDrop(e) {\n    if (!this.setUploadEntry()) return;\n    let dataTransfer;\n    if (e.dataTransfer) {\n      e.preventDefault();\n      dataTransfer = e.dataTransfer;\n    } else dataTransfer = e;\n    this.done = false;\n    this.initTimer();\n    const items = [...((dataTransfer.items) ? dataTransfer.items : dataTransfer.files)];\n    if (items.length) {\n      this.enableDropzone(false);\n      await items.forEach(async item => {\n        if (item.kind === \"file\") {\n          item = await item.webkitGetAsEntry();\n          this.toggleCounters(true);\n          await this.scanHandle(item);\n        }\n      })\n    }\n  }\n  handleDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n  }\n  showComplete() {\n    this.timer = (new Date() - this.timer) / 1000;\n    console.log('item-------------------------------------' + parseInt(this.timer / 60) + ' --- ' + (this.timer - (parseInt(this.timer / 60) * 60)));\n    this.enableDropzone();\n  }\n\n  stopOnError(err) {\n    console.log('err', err);\n  }\n\n  addConsoleMessage(message) {\n    //message {message:, parent:}\n    message.parent = (message.parent) ? message.parent : this.container;\n    _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addConsole(message);\n  }\n\n  addUploadDialog() {\n    if (this.options.controls.scan) {\n      this.enableDropzone(true);\n      this.attachDropzone();\n    }\n  }\n\n  async addFilesStore(name, callback) {\n    name = (name) ? name : this.options.dbname;\n    if (!this.jsFilesStore) {\n      const {\n        JsFilesStore\n      } = await __webpack_require__.e(/*! import() */ \"src_modules_files_js-filesystem_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-filesystem.js */ \"./src/modules/files/js-filesystem.js\"));\n      this.jsFilesStore = new JsFilesStore(null, callback);\n      this.displayFiles();\n    }\n    if (callback) await callback();\n  }\n  displayFiles() {\n    this.jsFilesStore.getItems('local');\n  }\n\n  fileCounter(e) {\n    const counters = this.counters[e.name];\n    counters.counter += 1;\n    if (e.size !== null) counters.size += parseInt(e.size);\n    counters.display.counter.textContent = counters.counter;\n    if (counters.display.size) counters.display.size.textContent = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(counters.size);\n    this.quotaEstimate();\n  }\n\n  resetCounter(item) {\n    const counters = this.counters[item];\n    ['counter', 'size'].forEach(el => {\n      if (counters.display[el]) {\n        counters[el] = 0;\n        counters.display[el].textContent = 0;\n      }\n    });\n  }\n  resetCounters() {\n    Object.keys(this.options.controls).forEach(key => {\n      this.resetCounter(key);\n    });\n    this.toggleCounters(false);\n  }\n  toggleCounters(show = true) {\n    const el = document.getElementById(this.options.display.progression);\n    if (!el) return;\n    if (show) el.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    else el.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n  }\n\n  initFileCounter(item, opts, i) {\n    const sep = (i) ? ` / ` : ``;\n    let counter = 0;\n    let counterdisplay = null;\n    let size = 0;\n    let sizedisplay = null;\n    // create dom display elements\n\n\n    let boxcounters = document.getElementById(this.options.display.progression);\n\n    const itemopts = {\n      display: {},\n    };\n    Object.entries(opts).forEach(([k, val]) => {\n      const cl = k + 's';\n      const txt = {\n        counter: ' read',\n        size: ' read',\n        counterzipped: ' compressed',\n        sizezipped: ' compressed',\n        counterrejected: ' rejected',\n        countererrorfile: ' error',\n      }\n      const displaylist = ['counterrejected', 'countererrorfile'];\n      let elinsert = boxcounters.querySelector('.' + cl);\n      if (!elinsert) elinsert = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        class: cl\n      }, boxcounters, ``);\n      let el = elinsert.querySelector('.' + val);\n      if (!el) {\n        el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n          class: val,\n        }, elinsert, ` / `);\n        if (txt.hasOwnProperty(val)) {\n          // add a link to display the rejected files list\n          if (displaylist.indexOf(val) >= 0) {\n            const link = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('a', {\n              text: txt[val],\n              class: 'text-error',\n              title: `Click to display the list of ${txt[val]} files`\n            }, elinsert);\n            link.addEventListener('click', (e) => {\n              e.preventDefault();\n              this.displayExcept(link, val);\n            });\n          } else elinsert.append(document.createTextNode(txt[val]));\n        }\n      } else this.resetCounter(item);\n      itemopts.display[k] = el;\n      itemopts[k] = 0;\n    });\n\n    this.counters = { ...this.counters,\n      ...{\n        [item]: itemopts\n      }\n    };\n\n  }\n  displayExcept(el, type) {\n    type = type.replace('counter', '');\n    const textval = {\n      rejected: ` type rejected`,\n      errorfile: ` in error`\n    };\n    if (Object.keys(textval).indexOf(type) < 0) return;\n    const message = {\n      type: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.warning,\n      parent: el,\n      content: `Files ${this.rejected.join('<br>')} ${textval[type]}`,\n    };\n    if (el.dataset.hasmessage) {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.removeMessage(message);\n      delete el.dataset.hasmessage;\n    } else {\n      el.dataset.hasmessage = true;\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage(message);\n    }\n  }\n\n  showControl(action, opts) {\n    const part = (opts && opts.part) ? opts.part : false;\n    const bigfile = (opts && opts.bigfile) ? opts.bigfile : false;\n    const filepath = (opts && opts.path) ? opts.path : this.uploadentry.getCurrentDirPath();\n    const target = ((opts.hasOwnProperty('bigfile') && bigfile !== false) ? 'zipped' : 'zip');\n    let message, text = null;\n    // 'zip' ---only btn for zip actions for the moment\n    const btn = this[this.options.btnprefix + 'zip' + target];\n    if (!btn) return;\n    btn.disabled = false;\n    switch (action) {\n      case this.eventnames.ready:\n        this.resetCounters();\n        if (this.uploadentry) {\n          this.uploadentry.list();\n          this.uploadentry = null;\n        }\n        message = null;\n        break;\n      case this.eventnames.follow:\n        if (bigfile) {\n          console.log(' follow', opts);\n          message = {};\n          btn.textContent = `Wait for next operation`;\n          btn.disabled = true;\n        } else message = null;\n\n        break;\n      case this.eventnames.endzip:\n        if (!part) this.showComplete();\n        btn.textContent = `Close zip file` + ((part) ? ` ` + part : ``);\n        btn.title = (part) ? `Your file is too big - you have to send this part before continuing to process the directory` : `Click to end zip file`;\n        message = {\n          name: this.eventnames.endzip,\n          part: part,\n          filepath: filepath,\n          bigfile: bigfile,\n        };\n        break;\n      case this.eventnames.bigfile:\n        if (bigfile && bigfile !== '') {\n          btn.textContent = `Upload big File separately`;\n          message = {\n            name: this.eventnames.bigfile,\n            path: filepath,\n            part: part,\n            bigfile: bigfile\n          };\n        }\n        break;\n      case this.eventnames.sendfile:\n        message = {\n          name: this.eventnames.sendfile,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        btn.textContent = `Upload zip file`;\n        if (message.bigfile && message.bigfile !== '') btn.textContent += ` ` + opts;\n        btn.dataset.message = JSON.stringify(message);\n        break;\n      case this.eventnames.pending:\n        btn.textContent = ` Pending ` + ((target !== 'zip') ? ' big file' : '');\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.gzip:\n        text = `compressing big file :${(opts && opts.bigfile)?filepath :``} ${(opts && opts.size)?(0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(opts.size):``}`;\n        btn.textContent = text;\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.terminate:\n        btn.dataset.message = JSON.stringify({\n          name: this.eventnames.init,\n          bigfile: bigfile,\n          part: part,\n          path: filepath\n        });\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n        btn.click();\n        return;\n        break;\n      case this.eventnames.errorfile:\n        this.errorfile.push(filepath);\n      case this.eventnames.error:\n        btn.textContent = (opts.text) ? opts.text : `Error`;\n        message = {\n          name: opts.name,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        console.log('????????ERROR??????????????????????????????????????--- errorcontrol' + action, message);\n        break;\n      default:\n        console.log('??????????????????????????????????????????????----default control ' + action, opts);\n        return;\n        break;\n    }\n    if (message === null) {\n      delete btn.dataset.message;\n      btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide)\n    } else {\n      btn.dataset.message = JSON.stringify(message);\n      btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n      if (btn.disabled) {\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n        btn.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.html_spinner)('text-stone-200 ml-1 mr-2 align-text-bottom inline-block'));\n      } else btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n    };\n  }\n\n  getBtn(item, target) {\n    const btnkey = this.options.btnprefix + item + target;\n    if (this[btnkey]) return this[btnkey];\n    const display = this.options.controls[item].btn[target];\n    const btn = document.getElementById(display);\n    const parent = this.displayprogression;\n    if (!btn) {\n      this[btnkey] = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('button', {\n        id: display,\n        class: [display, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide].concat(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button.split(' '))\n      }, parent);\n      this[btnkey].addEventListener('click', async (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.emitToZip(e.currentTarget);\n      });\n    } else parent.append(btn);\n    return this[btnkey];\n  }\n\n  initControls() {\n    Object.entries(this.options.controls).forEach(([key, control], i) => {\n      this.initFileCounter(key, control.display, i);\n      if (control.btn) this.activateControls(key, control.btn);\n    });\n  }\n  activateControls(key, btns) {\n    Object.keys(btns).forEach((btn) => {\n      this[this.options.btnprefix + key + btn] = this.getBtn(key, btn);\n    })\n\n  }\n\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/js-my-files.js\n")}}]);