/*! For license information please see src_modules_js-my-files_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-my-files_js"],{"./src/modules/files/js-dirlist.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsDirList: () => (/* binding */ JsDirList),\n/* harmony export */   dirlistOptions: () => (/* binding */ dirlistOptions)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\n/* harmony import */ var _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../modules/entry.js */ \"./src/modules/entry.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\n// local css\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash = 'intrash';\n// original types\nconst json_types = {\n  directory: 'D',\n  file: 'F'\n}\nconst trash_dir_name = 'trash.';\nconst dirlistOptions = {\n  api_parameters: {\n    entry: 'entry',\n    dest: 'dest',\n    rootname: 'My Files',\n  },\n  url: '/gui/files',\n  controls: {\n    scan: {\n      display: {\n        counter: 'counter',\n        size: 'size',\n      }\n    },\n    zip: {\n      btn: {\n        zip: 'makezip',\n        zipped: 'makezipped'\n      },\n      display: {\n        size: 'sizezipped',\n        counter: 'counterzipped',\n      }\n    },\n  },\n  upload: {\n    label: 'upload'\n  },\n  btnprefix: 'btn',\n  btnfilelist: null,\n  entry: {\n    draggables: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node],\n    icons: {\n      image: 'img',\n      document: 'doc'\n    },\n  },\n  entrycontrols: {\n    selectors: {\n      typentries: '[data-typentries]',\n      hascontrols: '.has-controls',\n    },\n    controls: {\n      list: {\n        action: 'list',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard]\n      },\n      create: {\n        action: 'create',\n        text: 'new folder',\n        icon: 'icon-folder-plus',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root]\n      },\n      remove: {\n        action: 'remove',\n        text: 'delete',\n        icon: 'icon-trash',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded]\n      },\n      move: {\n        action: 'move',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node]\n      },\n      rename: {\n        action: 'rename',\n        trigger: 'dblclick',\n        typentries: [_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node]\n      }\n    },\n    css: {\n      entrycontrols: 'entrycontrols',\n      entries: '.entries',\n    }\n  },\n  selectors: {\n    doupload: '.target-upload',\n    droptarget: '.droptarget',\n    dirlist: '.dirlist',\n    uploadfile: 'uploadfile',\n    displayimport: 'displayimport',\n    trigger: '.trigger',\n  },\n}\n\nfunction EntryAction(args, options) {\n  const entryaction = new _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.Entry(args, options);\n  entryaction.eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    isdiscard: 'isdiscard',\n    discarded: 'discarded',\n    editable: 'editable'\n  };\n  entryaction.newEntry = function(entry) {\n\n    return EntryAction(entry, this.options);\n  }\n  entryaction.isTrashDir = function(name = null) {\n    return ((name === null) ? this.name : name).indexOf(trash_dir_name) === 0;\n  }\n  entryaction.isInTrash = function(path = null) {\n    path = (path === null) ? this.getCurrentDirPath() : path;\n    if (path === null) (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.stop_on_error)('path_not_found');\n    path = path.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n    return (path.length > 1 && path[0].indexOf(trash_dir_name)) === 0;\n  }\n  entryaction.branchListener = function(callback = null) {\n    const el = this.container;\n    if (el.dataset.action === \"create\") return;\n    this.toggleActive();\n    if (this.isActive()) this.branchActivate(callback).then(() => {\n      this.emitEvent();\n    });\n  }\n\n  entryaction.getCurrentDirPath = function() {\n    return this.getCurrentPath().join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n  }\n\n  entryaction.fetchAction = async function(action, callback = null, callback_error = null) {\n    const api_parameters = this.options.api_parameters;\n    const label = this.getLabelElement();\n    let entrypath = this.getCurrentDirPath();\n    if (entrypath === '') return;\n    const data = new FormData();\n    data.append(api_parameters.entry, entrypath);\n    switch (action) {\n      case this.options.actions.create:\n        if (label === null) return;\n        entrypath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        entrypath[entrypath.length - 1] = label.textContent;\n        if (entrypath !== \"\") data.set(api_parameters.entry, entrypath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n      case this.options.actions.move:\n        // get new path - append item to drop directory\n        if (callback !== null) {\n          let destpath = callback();\n          callback = null;\n          if (destpath === entrypath) return;\n          data.append(api_parameters.dest, destpath);\n        } else return;\n        break;\n      case this.options.actions.rename:\n        const destpath = entrypath.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator);\n        destpath[destpath.length - 1] = label.textContent;\n        if (destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator) === entrypath) return;\n        data.append(api_parameters.dest, destpath.join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator));\n        break;\n    }\n    const response = await fetch(this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + action, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)({\n      method: \"POST\",\n      body: data,\n    }));\n    const json = await response.json();\n    if (response.status === 200) {\n      if (callback) callback(json.message);\n      return true;\n    } else {\n      if (callback_error) {\n        callback_error(json);\n      } else {\n        if (typeof json.body === 'string') json.body = JSON.parse(json.body);\n        const detail = (json.body.detail) ? json.body.detail : json.body;\n        _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n          type: \"error\",\n          content: response.status + ' ' + json.text + ' ' + detail,\n          dismiss: true\n        })\n      }\n      return false;\n    }\n  }\n  entryaction.listenRename = function(evt = 'dblclick') {\n    const entry = this;\n    const label = entry.getLabelElement();\n    label.addEventListener(evt, (e) => {\n      label.dataset.oldname = label.textContent;\n      if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) {\n        e.preventDefault();\n        return;\n      }\n      entry.setEditable();\n    });\n    // remove editable when click on entry\n    entry.container.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      entry.setEditable(false);\n      if (entry.container.dataset.action === entry.options.actions.create) entry.container.remove();\n    });\n  }\n  entryaction.setEditable = function(on = true) {\n    const entry = this;\n    const label = entry.getLabelElement();\n    const send_rename = async (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        if (label.dataset.oldname && label.dataset.oldname !== label.textContent) {\n          const callback = (txt) => {\n            if (txt === \"\") _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage(label, {\n              type: 'error',\n              content: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.i18nmessages.exists,\n              duration: 2000\n            });\n            else txt = txt.split(_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator).pop();\n            label.textContent = txt;\n            if (entry.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch) entry.branchListener();\n            delete entry.container.dataset.action;\n          }\n          const action = (entry.container.dataset.action) ? entry.container.dataset.action : entry.options.actions.rename;\n          await entry.fetchAction(action, callback);\n        }\n        entry.setEditable(false);\n      }\n    }\n    if (on === true) {\n      label.contentEditable = true;\n      entry.container.draggable = false;\n      label.classList.add(entry.options.css.editable);\n      label.addEventListener('keydown', send_rename);\n    } else {\n      label.contentEditable = false;\n      label.classList.remove(entry.options.css.editable);\n      label.removeEventListener('keydown', send_rename);\n      entry.container.draggable = entry.isDraggable();\n    }\n  }\n  entryaction.getListeners = function() {\n    let listeners = [];\n    let func = (e) => {\n      e.stopImmediatePropagation();\n      this.branchListener(() => {\n        this.emitEvent(this.eventnames.attach);\n      });\n    };\n\n    if ([_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root, _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard].indexOf(this.type) < 0) {\n      listeners = this.moveHandlers();\n      if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node) {\n        func = (e) => {\n          e.stopImmediatePropagation();\n          this.toggleActive();\n          this.emitEvent();\n        }\n      } else if (this.isInTrash()) {\n        this.type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded;\n      } else listeners = listeners.concat(this.dropHandlers());\n      this.listenRename();\n    } else listeners = listeners.concat(this.dropHandlers());\n    listeners.unshift({\n      name: 'click',\n      target: 'label',\n      func: func\n    });\n    return listeners;\n  }\n  entryaction.setAttributes = function(entry) {\n    // convert attributes\n    entry.type = (entry.type === json_types.directory) ? _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.branch : _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node;\n    if (this.isTrashDir(entry.name)) entry.type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard;\n    entry.parent = this;\n    return entry;\n  }\n  entryaction.extraStyles = function(entry) {\n    const ext = entry.name.split('.').pop();\n    const cl = (entry.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.node) ? (filter_files.images.split(',').indexOf(ext) >= 0) ? this.options.icons.image : this.options.icons.document : null;\n  }\n  entryaction.setDiscard = function() {\n    if (this.type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) this.emitEvent(this.eventnames.isdiscard);\n  }\n\n  entryaction.getUrl = function() {\n    const subdir = (this.name) ? this.getCurrentDirPath() : null;\n    return this.options.url + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.urlseparator + this.options.actions.list + ((subdir) ? _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + subdir : '');\n  }\n  entryaction.jsonEntries = async function(response) {\n    const json = await response.json();\n    return (json.entries) ? json.entries : undefined;\n  }\n\n  entryaction.remove = function() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.remove).then(ret => {\n      if (ret === true) {\n        this.setParent(null);\n        this.removeListeners(this.dropHandlers());\n        this.setOff();\n        this.container.animate({\n          transform: \"translateX(-100%) scale(0)\"\n        }, {\n          duration: 1000\n        });\n        setTimeout(() => {\n          if (this.from && this.from.isInTrash()) this.destroy();\n          else this.emitEvent(this.eventnames.discarded);\n        }, 1000);\n      }\n    }).catch(error => {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage({\n        parent: this.container,\n        type: \"error\",\n        content: error.error + ' ' + error.text\n      })\n    });\n  }\n  entryaction.create = function() {\n    const new_entry = this.createEntry({\n      type: json_types.directory,\n      name: 'NewFolder'\n    });\n    // move new entry to top of the list\n    const entries = this.getEntriesElement();\n    entries.prepend(new_entry.container);\n    new_entry.container.dataset.action = this.options.actions.create;\n    new_entry.label.dispatchEvent(new Event('dblclick'));\n  }\n  entryaction.rename = function() {\n    if (this.isTrashDir()) return;\n    this.fetchAction(this.options.actions.rename).then(() => {\n      console.log('renamed', this)\n    });\n  }\n\n  entryaction.move = function(dest, callback = null) {\n    if (this.isTrashDir()) return;\n    if (this.isDiscarded()) return this.remove();\n    this.fetchAction(this.options.actions.move, () => {\n      return dest.getCurrentDirPath() + _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dirseparator + this.name;\n    }).then(() => {\n      this.setParent(dest);\n      if (callback !== null) callback();\n    }).catch(err => {\n      console.log('errmove', err)\n    });\n  }\n  entryaction.setParent = function(dest) {\n    this.from = this.parent;\n    if (dest !== null) {\n      dest.entries.push(this);\n      this.parent = dest;\n      const entries = dest.getEntriesElement(true);\n      entries.append(this.container);\n    }\n    const i = this.parent.entries.indexOf(this);\n    if (i >= 0) delete this.parent.entries[i];\n    else console.log('entry not found in parent entries', this.parent);\n\n  }\n  return entryaction;\n}\n\nclass JsDirList {\n  eventnames = {\n    attach: 'attach',\n    detach: 'detach',\n    action: 'action',\n    complete: 'complete',\n    error: 'error',\n  }\n  options;\n  uuid;\n  constructor(parent, options = {}) {\n    if (!parent.jsdirlist) {\n      parent = (parent instanceof HTMLElement) ? parent : document.querySelector(parent);\n      if (!parent) return;\n      this.options = { ...dirlistOptions,\n        ...options\n      };\n\n      this.options.entry = { ..._modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryOptions,\n        ...this.options.entry,\n      };\n      this.options.entry.url = this.options.url;\n      this.container = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)(\n        this.options.entry.tags.tag, {\n          class: this.options.selectors.dirlist.substr(1)\n        }, parent);\n      // unique id to communicate ModuleEventEmitter\n      this.uuid = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.generate_uuid)();\n      this.init();\n      this.container.append(this.root.container);\n      parent.jsdirlist = this;\n    }\n    return parent.jsdirlist;\n  }\n  init() {\n    const type = _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.root;\n    const obj = {};\n    this.entrycontrols = (this.entrycontrols === undefined) ? (0,_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.EntryControls)(this.container, this.options.entrycontrols) : null;\n    Object.entries(this.options.entrycontrols.controls).forEach(([key, control]) => {\n      obj[key] = control.action;\n    });\n    this.options.entry.actions = obj;\n\n    const options = { ...this.options.entry,\n      ...{\n        api_parameters: this.options.api_parameters\n      }\n    };\n    options.listener = this.uuid;\n    this.root = EntryAction({\n      type: type,\n      name: '',\n      label: this.options.api_parameters.rootname,\n      class: this.options.api_parameters.rootclass\n\n    }, options);\n    this.initEvents();\n    this.root.addListeners();\n  }\n\n  initEvents(options) {\n    // events controls on entries\n    const self = this;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.on(this.options.entry.event.name, (e) => {\n      const evtnames = e.entry.eventnames;\n      switch (e.action) {\n        case evtnames.isdiscard:\n          if (this.trashdir) this.trashdir.container.remove();\n          this.trashdir = e.entry;\n          this.root.container.parentElement.insertBefore(e.entry.container, this.root.container);\n          this.root.container.append(e.entry.container);\n          break;\n        case evtnames.discarded:\n          let parent = e.entry.parent;\n          if (e.entry.isInTrash()) {\n            e.entry.container.remove();\n            parent = this.root;\n          } else {\n            e.entry.moveTo(this.trashdir);\n            e.entry.container.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.intrash);\n          }\n          this.attachControls(parent);\n          break;\n        case evtnames.attach:\n          // no upload on trash dir\n          const type = (e.entry.isInTrash()) ? _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded : e.entry.container.dataset.type;\n          if (type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discard) return;\n          if (e.action === evtnames.attach && type === _modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded) return;\n          this.attachControls(e.entry);\n          break;\n        case \"dragstart\":\n          this.dragentry = this.activentry = e.entry;\n          e.entry.container.classList.add(e.entry.options.css.dragging);\n          this.detachControls();\n          break;\n        case \"dragover\":\n          if (!this.dragentry) return;\n          if (this.overitem !== e.entry.container) {\n            if (this.overitem) this.overitem.classList.remove(e.entry.options.css.dragover);\n            e.entry.container.classList.add(e.entry.options.css.dragover);\n            this.overitem = e.entry.container;\n          }\n          break;\n        case \"dragend\":\n          this.dragentry = null;\n          if (this.overitem) this.overitem.classList.remove(e.entry.options.css.dragover);\n          this.overitem = null;\n          break;\n        case \"drop\":\n          if (!this.dragentry) {\n            _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.action, e, this.uuid);\n          }\n          const dest_entry = e.entry;\n          dest_entry.resetDragOver();\n          if (this.dragentry) {\n            if (this.dragentry.options.actions.move) {\n              try {\n                this.dragentry.move(dest_entry);\n                if ([_modules_entry_js__WEBPACK_IMPORTED_MODULE_4__.entryTypes.discarded].indexOf(dest_entry.type) >= 0) this.attachControls(dest_entry);\n              } catch (error) {\n                console.log('errordrop ', error)\n                this.dragentry.unMove();\n              }\n            } else console.log('noactionon drop');\n          }\n          break;\n        case evtnames.editable:\n          if (this.editable) this.editable.setEditable(false);\n          break;\n\n        default:\n          if (e.entry.active) {\n            this.attachControls(e.entry);\n          } else this.attachControls(this.root);\n          break;\n      }\n    }, this.uuid);\n  }\n  getActiventry() {\n    return this.activentry;\n  }\n  setActiventry(entry = null) {\n    this.activentry = entry;\n  }\n  attachControls(entry) {\n    if (this.entrycontrols) this.entrycontrols.attachControls(entry);\n    this.activentry = entry;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.attach, {\n      entry: this.activentry\n    }, this.uuid);\n  }\n\n  detachControls() {\n    const dest = (this.activentry) ? ((this.activentry.parent) ? this.activentry.parent : this.root) : this.root;\n    if (this.entrycontrols) this.entrycontrols.attachControls(dest);\n    this.activentry = dest;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_3__.ModuleEventEmitter.emit(this.eventnames.attach, {\n      entry: dest\n    }, this.uuid);\n  }\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGdGQUFrQjtBQUN0QjtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0ZBQWtCO0FBQ3RCO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL2ZpbGVzL2pzLWRpcmxpc3QuanM/MjNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkb21fcHVyaWZ5LFxuICBmZXRjaFNldHRpbmdzLFxuICBjcmVhdGVfYm94LFxuICBkaXJzZXBhcmF0b3IsXG4gIHVybHNlcGFyYXRvcixcbiAgc3RvcF9vbl9lcnJvcixcbiAgZ2VuZXJhdGVfdXVpZFxufVxuZnJvbSAnLi4vLi4vbW9kdWxlcy91dGlscy5qcyc7XG5pbXBvcnQge1xuICBjc3MsXG59IGZyb20gJy4uLy4uL21vZHVsZXMvbW9kdWxlcy1jb25maWcuanMnO1xuaW1wb3J0IHtcbiAgQWxlcnRCb3hcbn0gZnJvbSAnLi4vLi4vbW9kdWxlcy9hbGVydC1ib3guanMnO1xuaW1wb3J0IHtcbiAgTW9kdWxlRXZlbnRFbWl0dGVyLFxufSBmcm9tICcuLi8uLi9tb2R1bGVzL21vZHVsZS1ldmVudC1lbWl0dGVyLmpzJztcbmltcG9ydCB7XG4gIGVudHJ5VHlwZXMsXG4gIGVudHJ5T3B0aW9ucyxcbiAgRW50cnksXG4gIEVudHJ5Q29udHJvbHNcbn0gZnJvbSAnLi4vLi4vbW9kdWxlcy9lbnRyeS5qcyc7XG5jb25zdCBmaWx0ZXJfZmlsZXMgPSB7XG4gIGltYWdlczogXCJwbmcsanBlZyxqcGcsZ2lmXCIsXG4gIHRzdjogXCJ0eHQsdHN2LHppcCwgZ3ppcCxnelwiXG59XG4vLyBsb2NhbCBjc3NcbmNzcy5pbnRyYXNoID0gJ2ludHJhc2gnO1xuLy8gb3JpZ2luYWwgdHlwZXNcbmNvbnN0IGpzb25fdHlwZXMgPSB7XG4gIGRpcmVjdG9yeTogJ0QnLFxuICBmaWxlOiAnRidcbn1cbmNvbnN0IHRyYXNoX2Rpcl9uYW1lID0gJ3RyYXNoLic7XG5leHBvcnQgY29uc3QgZGlybGlzdE9wdGlvbnMgPSB7XG4gIGFwaV9wYXJhbWV0ZXJzOiB7XG4gICAgZW50cnk6ICdlbnRyeScsXG4gICAgZGVzdDogJ2Rlc3QnLFxuICAgIHJvb3RuYW1lOiAnTXkgRmlsZXMnLFxuICB9LFxuICB1cmw6ICcvZ3VpL2ZpbGVzJyxcbiAgY29udHJvbHM6IHtcbiAgICBzY2FuOiB7XG4gICAgICBkaXNwbGF5OiB7XG4gICAgICAgIGNvdW50ZXI6ICdjb3VudGVyJyxcbiAgICAgICAgc2l6ZTogJ3NpemUnLFxuICAgICAgfVxuICAgIH0sXG4gICAgemlwOiB7XG4gICAgICBidG46IHtcbiAgICAgICAgemlwOiAnbWFrZXppcCcsXG4gICAgICAgIHppcHBlZDogJ21ha2V6aXBwZWQnXG4gICAgICB9LFxuICAgICAgZGlzcGxheToge1xuICAgICAgICBzaXplOiAnc2l6ZXppcHBlZCcsXG4gICAgICAgIGNvdW50ZXI6ICdjb3VudGVyemlwcGVkJyxcbiAgICAgIH1cbiAgICB9LFxuICB9LFxuICB1cGxvYWQ6IHtcbiAgICBsYWJlbDogJ3VwbG9hZCdcbiAgfSxcbiAgYnRucHJlZml4OiAnYnRuJyxcbiAgYnRuZmlsZWxpc3Q6IG51bGwsXG4gIGVudHJ5OiB7XG4gICAgZHJhZ2dhYmxlczogW2VudHJ5VHlwZXMuYnJhbmNoLCBlbnRyeVR5cGVzLm5vZGVdLFxuICAgIGljb25zOiB7XG4gICAgICBpbWFnZTogJ2ltZycsXG4gICAgICBkb2N1bWVudDogJ2RvYydcbiAgICB9LFxuICB9LFxuICBlbnRyeWNvbnRyb2xzOiB7XG4gICAgc2VsZWN0b3JzOiB7XG4gICAgICB0eXBlbnRyaWVzOiAnW2RhdGEtdHlwZW50cmllc10nLFxuICAgICAgaGFzY29udHJvbHM6ICcuaGFzLWNvbnRyb2xzJyxcbiAgICB9LFxuICAgIGNvbnRyb2xzOiB7XG4gICAgICBsaXN0OiB7XG4gICAgICAgIGFjdGlvbjogJ2xpc3QnLFxuICAgICAgICB0eXBlbnRyaWVzOiBbZW50cnlUeXBlcy5icmFuY2gsIGVudHJ5VHlwZXMucm9vdCwgZW50cnlUeXBlcy5kaXNjYXJkXVxuICAgICAgfSxcbiAgICAgIGNyZWF0ZToge1xuICAgICAgICBhY3Rpb246ICdjcmVhdGUnLFxuICAgICAgICB0ZXh0OiAnbmV3IGZvbGRlcicsXG4gICAgICAgIGljb246ICdpY29uLWZvbGRlci1wbHVzJyxcbiAgICAgICAgdHlwZW50cmllczogW2VudHJ5VHlwZXMuYnJhbmNoLCBlbnRyeVR5cGVzLnJvb3RdXG4gICAgICB9LFxuICAgICAgcmVtb3ZlOiB7XG4gICAgICAgIGFjdGlvbjogJ3JlbW92ZScsXG4gICAgICAgIHRleHQ6ICdkZWxldGUnLFxuICAgICAgICBpY29uOiAnaWNvbi10cmFzaCcsXG4gICAgICAgIHR5cGVudHJpZXM6IFtlbnRyeVR5cGVzLmJyYW5jaCwgZW50cnlUeXBlcy5ub2RlLCBlbnRyeVR5cGVzLmRpc2NhcmRlZF1cbiAgICAgIH0sXG4gICAgICBtb3ZlOiB7XG4gICAgICAgIGFjdGlvbjogJ21vdmUnLFxuICAgICAgICB0eXBlbnRyaWVzOiBbZW50cnlUeXBlcy5icmFuY2gsIGVudHJ5VHlwZXMubm9kZV1cbiAgICAgIH0sXG4gICAgICByZW5hbWU6IHtcbiAgICAgICAgYWN0aW9uOiAncmVuYW1lJyxcbiAgICAgICAgdHJpZ2dlcjogJ2RibGNsaWNrJyxcbiAgICAgICAgdHlwZW50cmllczogW2VudHJ5VHlwZXMuYnJhbmNoLCBlbnRyeVR5cGVzLm5vZGVdXG4gICAgICB9XG4gICAgfSxcbiAgICBjc3M6IHtcbiAgICAgIGVudHJ5Y29udHJvbHM6ICdlbnRyeWNvbnRyb2xzJyxcbiAgICAgIGVudHJpZXM6ICcuZW50cmllcycsXG4gICAgfVxuICB9LFxuICBzZWxlY3RvcnM6IHtcbiAgICBkb3VwbG9hZDogJy50YXJnZXQtdXBsb2FkJyxcbiAgICBkcm9wdGFyZ2V0OiAnLmRyb3B0YXJnZXQnLFxuICAgIGRpcmxpc3Q6ICcuZGlybGlzdCcsXG4gICAgdXBsb2FkZmlsZTogJ3VwbG9hZGZpbGUnLFxuICAgIGRpc3BsYXlpbXBvcnQ6ICdkaXNwbGF5aW1wb3J0JyxcbiAgICB0cmlnZ2VyOiAnLnRyaWdnZXInLFxuICB9LFxufVxuXG5mdW5jdGlvbiBFbnRyeUFjdGlvbihhcmdzLCBvcHRpb25zKSB7XG4gIGNvbnN0IGVudHJ5YWN0aW9uID0gbmV3IEVudHJ5KGFyZ3MsIG9wdGlvbnMpO1xuICBlbnRyeWFjdGlvbi5ldmVudG5hbWVzID0ge1xuICAgIGF0dGFjaDogJ2F0dGFjaCcsXG4gICAgZGV0YWNoOiAnZGV0YWNoJyxcbiAgICBpc2Rpc2NhcmQ6ICdpc2Rpc2NhcmQnLFxuICAgIGRpc2NhcmRlZDogJ2Rpc2NhcmRlZCcsXG4gICAgZWRpdGFibGU6ICdlZGl0YWJsZSdcbiAgfTtcbiAgZW50cnlhY3Rpb24ubmV3RW50cnkgPSBmdW5jdGlvbihlbnRyeSkge1xuXG4gICAgcmV0dXJuIEVudHJ5QWN0aW9uKGVudHJ5LCB0aGlzLm9wdGlvbnMpO1xuICB9XG4gIGVudHJ5YWN0aW9uLmlzVHJhc2hEaXIgPSBmdW5jdGlvbihuYW1lID0gbnVsbCkge1xuICAgIHJldHVybiAoKG5hbWUgPT09IG51bGwpID8gdGhpcy5uYW1lIDogbmFtZSkuaW5kZXhPZih0cmFzaF9kaXJfbmFtZSkgPT09IDA7XG4gIH1cbiAgZW50cnlhY3Rpb24uaXNJblRyYXNoID0gZnVuY3Rpb24ocGF0aCA9IG51bGwpIHtcbiAgICBwYXRoID0gKHBhdGggPT09IG51bGwpID8gdGhpcy5nZXRDdXJyZW50RGlyUGF0aCgpIDogcGF0aDtcbiAgICBpZiAocGF0aCA9PT0gbnVsbCkgc3RvcF9vbl9lcnJvcigncGF0aF9ub3RfZm91bmQnKTtcbiAgICBwYXRoID0gcGF0aC5zcGxpdChkaXJzZXBhcmF0b3IpO1xuICAgIHJldHVybiAocGF0aC5sZW5ndGggPiAxICYmIHBhdGhbMF0uaW5kZXhPZih0cmFzaF9kaXJfbmFtZSkpID09PSAwO1xuICB9XG4gIGVudHJ5YWN0aW9uLmJyYW5jaExpc3RlbmVyID0gZnVuY3Rpb24oY2FsbGJhY2sgPSBudWxsKSB7XG4gICAgY29uc3QgZWwgPSB0aGlzLmNvbnRhaW5lcjtcbiAgICBpZiAoZWwuZGF0YXNldC5hY3Rpb24gPT09IFwiY3JlYXRlXCIpIHJldHVybjtcbiAgICB0aGlzLnRvZ2dsZUFjdGl2ZSgpO1xuICAgIGlmICh0aGlzLmlzQWN0aXZlKCkpIHRoaXMuYnJhbmNoQWN0aXZhdGUoY2FsbGJhY2spLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5lbWl0RXZlbnQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGVudHJ5YWN0aW9uLmdldEN1cnJlbnREaXJQYXRoID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0Q3VycmVudFBhdGgoKS5qb2luKGRpcnNlcGFyYXRvcik7XG4gIH1cblxuICBlbnRyeWFjdGlvbi5mZXRjaEFjdGlvbiA9IGFzeW5jIGZ1bmN0aW9uKGFjdGlvbiwgY2FsbGJhY2sgPSBudWxsLCBjYWxsYmFja19lcnJvciA9IG51bGwpIHtcbiAgICBjb25zdCBhcGlfcGFyYW1ldGVycyA9IHRoaXMub3B0aW9ucy5hcGlfcGFyYW1ldGVycztcbiAgICBjb25zdCBsYWJlbCA9IHRoaXMuZ2V0TGFiZWxFbGVtZW50KCk7XG4gICAgbGV0IGVudHJ5cGF0aCA9IHRoaXMuZ2V0Q3VycmVudERpclBhdGgoKTtcbiAgICBpZiAoZW50cnlwYXRoID09PSAnJykgcmV0dXJuO1xuICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICBkYXRhLmFwcGVuZChhcGlfcGFyYW1ldGVycy5lbnRyeSwgZW50cnlwYXRoKTtcbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgY2FzZSB0aGlzLm9wdGlvbnMuYWN0aW9ucy5jcmVhdGU6XG4gICAgICAgIGlmIChsYWJlbCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBlbnRyeXBhdGggPSBlbnRyeXBhdGguc3BsaXQoZGlyc2VwYXJhdG9yKTtcbiAgICAgICAgZW50cnlwYXRoW2VudHJ5cGF0aC5sZW5ndGggLSAxXSA9IGxhYmVsLnRleHRDb250ZW50O1xuICAgICAgICBpZiAoZW50cnlwYXRoICE9PSBcIlwiKSBkYXRhLnNldChhcGlfcGFyYW1ldGVycy5lbnRyeSwgZW50cnlwYXRoLmpvaW4oZGlyc2VwYXJhdG9yKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLm9wdGlvbnMuYWN0aW9ucy5tb3ZlOlxuICAgICAgICAvLyBnZXQgbmV3IHBhdGggLSBhcHBlbmQgaXRlbSB0byBkcm9wIGRpcmVjdG9yeVxuICAgICAgICBpZiAoY2FsbGJhY2sgIT09IG51bGwpIHtcbiAgICAgICAgICBsZXQgZGVzdHBhdGggPSBjYWxsYmFjaygpO1xuICAgICAgICAgIGNhbGxiYWNrID0gbnVsbDtcbiAgICAgICAgICBpZiAoZGVzdHBhdGggPT09IGVudHJ5cGF0aCkgcmV0dXJuO1xuICAgICAgICAgIGRhdGEuYXBwZW5kKGFwaV9wYXJhbWV0ZXJzLmRlc3QsIGRlc3RwYXRoKTtcbiAgICAgICAgfSBlbHNlIHJldHVybjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRoaXMub3B0aW9ucy5hY3Rpb25zLnJlbmFtZTpcbiAgICAgICAgY29uc3QgZGVzdHBhdGggPSBlbnRyeXBhdGguc3BsaXQoZGlyc2VwYXJhdG9yKTtcbiAgICAgICAgZGVzdHBhdGhbZGVzdHBhdGgubGVuZ3RoIC0gMV0gPSBsYWJlbC50ZXh0Q29udGVudDtcbiAgICAgICAgaWYgKGRlc3RwYXRoLmpvaW4oZGlyc2VwYXJhdG9yKSA9PT0gZW50cnlwYXRoKSByZXR1cm47XG4gICAgICAgIGRhdGEuYXBwZW5kKGFwaV9wYXJhbWV0ZXJzLmRlc3QsIGRlc3RwYXRoLmpvaW4oZGlyc2VwYXJhdG9yKSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHRoaXMub3B0aW9ucy51cmwgKyB1cmxzZXBhcmF0b3IgKyBhY3Rpb24sIGZldGNoU2V0dGluZ3Moe1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGJvZHk6IGRhdGEsXG4gICAgfSkpO1xuICAgIGNvbnN0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKGpzb24ubWVzc2FnZSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGNhbGxiYWNrX2Vycm9yKSB7XG4gICAgICAgIGNhbGxiYWNrX2Vycm9yKGpzb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHR5cGVvZiBqc29uLmJvZHkgPT09ICdzdHJpbmcnKSBqc29uLmJvZHkgPSBKU09OLnBhcnNlKGpzb24uYm9keSk7XG4gICAgICAgIGNvbnN0IGRldGFpbCA9IChqc29uLmJvZHkuZGV0YWlsKSA/IGpzb24uYm9keS5kZXRhaWwgOiBqc29uLmJvZHk7XG4gICAgICAgIEFsZXJ0Qm94LmFkZEFsZXJ0KHtcbiAgICAgICAgICB0eXBlOiBcImVycm9yXCIsXG4gICAgICAgICAgY29udGVudDogcmVzcG9uc2Uuc3RhdHVzICsgJyAnICsganNvbi50ZXh0ICsgJyAnICsgZGV0YWlsLFxuICAgICAgICAgIGRpc21pc3M6IHRydWVcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZW50cnlhY3Rpb24ubGlzdGVuUmVuYW1lID0gZnVuY3Rpb24oZXZ0ID0gJ2RibGNsaWNrJykge1xuICAgIGNvbnN0IGVudHJ5ID0gdGhpcztcbiAgICBjb25zdCBsYWJlbCA9IGVudHJ5LmdldExhYmVsRWxlbWVudCgpO1xuICAgIGxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoZXZ0LCAoZSkgPT4ge1xuICAgICAgbGFiZWwuZGF0YXNldC5vbGRuYW1lID0gbGFiZWwudGV4dENvbnRlbnQ7XG4gICAgICBpZiAodGhpcy50eXBlID09PSBlbnRyeVR5cGVzLmRpc2NhcmQpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBlbnRyeS5zZXRFZGl0YWJsZSgpO1xuICAgIH0pO1xuICAgIC8vIHJlbW92ZSBlZGl0YWJsZSB3aGVuIGNsaWNrIG9uIGVudHJ5XG4gICAgZW50cnkuY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICBlbnRyeS5zZXRFZGl0YWJsZShmYWxzZSk7XG4gICAgICBpZiAoZW50cnkuY29udGFpbmVyLmRhdGFzZXQuYWN0aW9uID09PSBlbnRyeS5vcHRpb25zLmFjdGlvbnMuY3JlYXRlKSBlbnRyeS5jb250YWluZXIucmVtb3ZlKCk7XG4gICAgfSk7XG4gIH1cbiAgZW50cnlhY3Rpb24uc2V0RWRpdGFibGUgPSBmdW5jdGlvbihvbiA9IHRydWUpIHtcbiAgICBjb25zdCBlbnRyeSA9IHRoaXM7XG4gICAgY29uc3QgbGFiZWwgPSBlbnRyeS5nZXRMYWJlbEVsZW1lbnQoKTtcbiAgICBjb25zdCBzZW5kX3JlbmFtZSA9IGFzeW5jIChlKSA9PiB7XG4gICAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZiAobGFiZWwuZGF0YXNldC5vbGRuYW1lICYmIGxhYmVsLmRhdGFzZXQub2xkbmFtZSAhPT0gbGFiZWwudGV4dENvbnRlbnQpIHtcbiAgICAgICAgICBjb25zdCBjYWxsYmFjayA9ICh0eHQpID0+IHtcbiAgICAgICAgICAgIGlmICh0eHQgPT09IFwiXCIpIEFsZXJ0Qm94LmFkZE1lc3NhZ2UobGFiZWwsIHtcbiAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgICAgICAgY29udGVudDogQWxlcnRCb3guaTE4bm1lc3NhZ2VzLmV4aXN0cyxcbiAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZWxzZSB0eHQgPSB0eHQuc3BsaXQoZGlyc2VwYXJhdG9yKS5wb3AoKTtcbiAgICAgICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gdHh0O1xuICAgICAgICAgICAgaWYgKGVudHJ5LnR5cGUgPT09IGVudHJ5VHlwZXMuYnJhbmNoKSBlbnRyeS5icmFuY2hMaXN0ZW5lcigpO1xuICAgICAgICAgICAgZGVsZXRlIGVudHJ5LmNvbnRhaW5lci5kYXRhc2V0LmFjdGlvbjtcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgYWN0aW9uID0gKGVudHJ5LmNvbnRhaW5lci5kYXRhc2V0LmFjdGlvbikgPyBlbnRyeS5jb250YWluZXIuZGF0YXNldC5hY3Rpb24gOiBlbnRyeS5vcHRpb25zLmFjdGlvbnMucmVuYW1lO1xuICAgICAgICAgIGF3YWl0IGVudHJ5LmZldGNoQWN0aW9uKGFjdGlvbiwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICAgIGVudHJ5LnNldEVkaXRhYmxlKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG9uID09PSB0cnVlKSB7XG4gICAgICBsYWJlbC5jb250ZW50RWRpdGFibGUgPSB0cnVlO1xuICAgICAgZW50cnkuY29udGFpbmVyLmRyYWdnYWJsZSA9IGZhbHNlO1xuICAgICAgbGFiZWwuY2xhc3NMaXN0LmFkZChlbnRyeS5vcHRpb25zLmNzcy5lZGl0YWJsZSk7XG4gICAgICBsYWJlbC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgc2VuZF9yZW5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsYWJlbC5jb250ZW50RWRpdGFibGUgPSBmYWxzZTtcbiAgICAgIGxhYmVsLmNsYXNzTGlzdC5yZW1vdmUoZW50cnkub3B0aW9ucy5jc3MuZWRpdGFibGUpO1xuICAgICAgbGFiZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHNlbmRfcmVuYW1lKTtcbiAgICAgIGVudHJ5LmNvbnRhaW5lci5kcmFnZ2FibGUgPSBlbnRyeS5pc0RyYWdnYWJsZSgpO1xuICAgIH1cbiAgfVxuICBlbnRyeWFjdGlvbi5nZXRMaXN0ZW5lcnMgPSBmdW5jdGlvbigpIHtcbiAgICBsZXQgbGlzdGVuZXJzID0gW107XG4gICAgbGV0IGZ1bmMgPSAoZSkgPT4ge1xuICAgICAgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICAgIHRoaXMuYnJhbmNoTGlzdGVuZXIoKCkgPT4ge1xuICAgICAgICB0aGlzLmVtaXRFdmVudCh0aGlzLmV2ZW50bmFtZXMuYXR0YWNoKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBpZiAoW2VudHJ5VHlwZXMucm9vdCwgZW50cnlUeXBlcy5kaXNjYXJkXS5pbmRleE9mKHRoaXMudHlwZSkgPCAwKSB7XG4gICAgICBsaXN0ZW5lcnMgPSB0aGlzLm1vdmVIYW5kbGVycygpO1xuICAgICAgaWYgKHRoaXMudHlwZSA9PT0gZW50cnlUeXBlcy5ub2RlKSB7XG4gICAgICAgIGZ1bmMgPSAoZSkgPT4ge1xuICAgICAgICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgdGhpcy50b2dnbGVBY3RpdmUoKTtcbiAgICAgICAgICB0aGlzLmVtaXRFdmVudCgpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNJblRyYXNoKCkpIHtcbiAgICAgICAgdGhpcy50eXBlID0gZW50cnlUeXBlcy5kaXNjYXJkZWQ7XG4gICAgICB9IGVsc2UgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmNvbmNhdCh0aGlzLmRyb3BIYW5kbGVycygpKTtcbiAgICAgIHRoaXMubGlzdGVuUmVuYW1lKCk7XG4gICAgfSBlbHNlIGxpc3RlbmVycyA9IGxpc3RlbmVycy5jb25jYXQodGhpcy5kcm9wSGFuZGxlcnMoKSk7XG4gICAgbGlzdGVuZXJzLnVuc2hpZnQoe1xuICAgICAgbmFtZTogJ2NsaWNrJyxcbiAgICAgIHRhcmdldDogJ2xhYmVsJyxcbiAgICAgIGZ1bmM6IGZ1bmNcbiAgICB9KTtcbiAgICByZXR1cm4gbGlzdGVuZXJzO1xuICB9XG4gIGVudHJ5YWN0aW9uLnNldEF0dHJpYnV0ZXMgPSBmdW5jdGlvbihlbnRyeSkge1xuICAgIC8vIGNvbnZlcnQgYXR0cmlidXRlc1xuICAgIGVudHJ5LnR5cGUgPSAoZW50cnkudHlwZSA9PT0ganNvbl90eXBlcy5kaXJlY3RvcnkpID8gZW50cnlUeXBlcy5icmFuY2ggOiBlbnRyeVR5cGVzLm5vZGU7XG4gICAgaWYgKHRoaXMuaXNUcmFzaERpcihlbnRyeS5uYW1lKSkgZW50cnkudHlwZSA9IGVudHJ5VHlwZXMuZGlzY2FyZDtcbiAgICBlbnRyeS5wYXJlbnQgPSB0aGlzO1xuICAgIHJldHVybiBlbnRyeTtcbiAgfVxuICBlbnRyeWFjdGlvbi5leHRyYVN0eWxlcyA9IGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgY29uc3QgZXh0ID0gZW50cnkubmFtZS5zcGxpdCgnLicpLnBvcCgpO1xuICAgIGNvbnN0IGNsID0gKGVudHJ5LnR5cGUgPT09IGVudHJ5VHlwZXMubm9kZSkgPyAoZmlsdGVyX2ZpbGVzLmltYWdlcy5zcGxpdCgnLCcpLmluZGV4T2YoZXh0KSA+PSAwKSA/IHRoaXMub3B0aW9ucy5pY29ucy5pbWFnZSA6IHRoaXMub3B0aW9ucy5pY29ucy5kb2N1bWVudCA6IG51bGw7XG4gIH1cbiAgZW50cnlhY3Rpb24uc2V0RGlzY2FyZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLnR5cGUgPT09IGVudHJ5VHlwZXMuZGlzY2FyZCkgdGhpcy5lbWl0RXZlbnQodGhpcy5ldmVudG5hbWVzLmlzZGlzY2FyZCk7XG4gIH1cblxuICBlbnRyeWFjdGlvbi5nZXRVcmwgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBzdWJkaXIgPSAodGhpcy5uYW1lKSA/IHRoaXMuZ2V0Q3VycmVudERpclBhdGgoKSA6IG51bGw7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9ucy51cmwgKyB1cmxzZXBhcmF0b3IgKyB0aGlzLm9wdGlvbnMuYWN0aW9ucy5saXN0ICsgKChzdWJkaXIpID8gZGlyc2VwYXJhdG9yICsgc3ViZGlyIDogJycpO1xuICB9XG4gIGVudHJ5YWN0aW9uLmpzb25FbnRyaWVzID0gYXN5bmMgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIHJldHVybiAoanNvbi5lbnRyaWVzKSA/IGpzb24uZW50cmllcyA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGVudHJ5YWN0aW9uLnJlbW92ZSA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLmlzVHJhc2hEaXIoKSkgcmV0dXJuO1xuICAgIHRoaXMuZmV0Y2hBY3Rpb24odGhpcy5vcHRpb25zLmFjdGlvbnMucmVtb3ZlKS50aGVuKHJldCA9PiB7XG4gICAgICBpZiAocmV0ID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuc2V0UGFyZW50KG51bGwpO1xuICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVycyh0aGlzLmRyb3BIYW5kbGVycygpKTtcbiAgICAgICAgdGhpcy5zZXRPZmYoKTtcbiAgICAgICAgdGhpcy5jb250YWluZXIuYW5pbWF0ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoLTEwMCUpIHNjYWxlKDApXCJcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiAxMDAwXG4gICAgICAgIH0pO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5mcm9tICYmIHRoaXMuZnJvbS5pc0luVHJhc2goKSkgdGhpcy5kZXN0cm95KCk7XG4gICAgICAgICAgZWxzZSB0aGlzLmVtaXRFdmVudCh0aGlzLmV2ZW50bmFtZXMuZGlzY2FyZGVkKTtcbiAgICAgICAgfSwgMTAwMCk7XG4gICAgICB9XG4gICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgQWxlcnRCb3guYWRkTWVzc2FnZSh7XG4gICAgICAgIHBhcmVudDogdGhpcy5jb250YWluZXIsXG4gICAgICAgIHR5cGU6IFwiZXJyb3JcIixcbiAgICAgICAgY29udGVudDogZXJyb3IuZXJyb3IgKyAnICcgKyBlcnJvci50ZXh0XG4gICAgICB9KVxuICAgIH0pO1xuICB9XG4gIGVudHJ5YWN0aW9uLmNyZWF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IG5ld19lbnRyeSA9IHRoaXMuY3JlYXRlRW50cnkoe1xuICAgICAgdHlwZToganNvbl90eXBlcy5kaXJlY3RvcnksXG4gICAgICBuYW1lOiAnTmV3Rm9sZGVyJ1xuICAgIH0pO1xuICAgIC8vIG1vdmUgbmV3IGVudHJ5IHRvIHRvcCBvZiB0aGUgbGlzdFxuICAgIGNvbnN0IGVudHJpZXMgPSB0aGlzLmdldEVudHJpZXNFbGVtZW50KCk7XG4gICAgZW50cmllcy5wcmVwZW5kKG5ld19lbnRyeS5jb250YWluZXIpO1xuICAgIG5ld19lbnRyeS5jb250YWluZXIuZGF0YXNldC5hY3Rpb24gPSB0aGlzLm9wdGlvbnMuYWN0aW9ucy5jcmVhdGU7XG4gICAgbmV3X2VudHJ5LmxhYmVsLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdkYmxjbGljaycpKTtcbiAgfVxuICBlbnRyeWFjdGlvbi5yZW5hbWUgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5pc1RyYXNoRGlyKCkpIHJldHVybjtcbiAgICB0aGlzLmZldGNoQWN0aW9uKHRoaXMub3B0aW9ucy5hY3Rpb25zLnJlbmFtZSkudGhlbigoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygncmVuYW1lZCcsIHRoaXMpXG4gICAgfSk7XG4gIH1cblxuICBlbnRyeWFjdGlvbi5tb3ZlID0gZnVuY3Rpb24oZGVzdCwgY2FsbGJhY2sgPSBudWxsKSB7XG4gICAgaWYgKHRoaXMuaXNUcmFzaERpcigpKSByZXR1cm47XG4gICAgaWYgKHRoaXMuaXNEaXNjYXJkZWQoKSkgcmV0dXJuIHRoaXMucmVtb3ZlKCk7XG4gICAgdGhpcy5mZXRjaEFjdGlvbih0aGlzLm9wdGlvbnMuYWN0aW9ucy5tb3ZlLCAoKSA9PiB7XG4gICAgICByZXR1cm4gZGVzdC5nZXRDdXJyZW50RGlyUGF0aCgpICsgZGlyc2VwYXJhdG9yICsgdGhpcy5uYW1lO1xuICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5zZXRQYXJlbnQoZGVzdCk7XG4gICAgICBpZiAoY2FsbGJhY2sgIT09IG51bGwpIGNhbGxiYWNrKCk7XG4gICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdlcnJtb3ZlJywgZXJyKVxuICAgIH0pO1xuICB9XG4gIGVudHJ5YWN0aW9uLnNldFBhcmVudCA9IGZ1bmN0aW9uKGRlc3QpIHtcbiAgICB0aGlzLmZyb20gPSB0aGlzLnBhcmVudDtcbiAgICBpZiAoZGVzdCAhPT0gbnVsbCkge1xuICAgICAgZGVzdC5lbnRyaWVzLnB1c2godGhpcyk7XG4gICAgICB0aGlzLnBhcmVudCA9IGRlc3Q7XG4gICAgICBjb25zdCBlbnRyaWVzID0gZGVzdC5nZXRFbnRyaWVzRWxlbWVudCh0cnVlKTtcbiAgICAgIGVudHJpZXMuYXBwZW5kKHRoaXMuY29udGFpbmVyKTtcbiAgICB9XG4gICAgY29uc3QgaSA9IHRoaXMucGFyZW50LmVudHJpZXMuaW5kZXhPZih0aGlzKTtcbiAgICBpZiAoaSA+PSAwKSBkZWxldGUgdGhpcy5wYXJlbnQuZW50cmllc1tpXTtcbiAgICBlbHNlIGNvbnNvbGUubG9nKCdlbnRyeSBub3QgZm91bmQgaW4gcGFyZW50IGVudHJpZXMnLCB0aGlzLnBhcmVudCk7XG5cbiAgfVxuICByZXR1cm4gZW50cnlhY3Rpb247XG59XG5cbmV4cG9ydCBjbGFzcyBKc0Rpckxpc3Qge1xuICBldmVudG5hbWVzID0ge1xuICAgIGF0dGFjaDogJ2F0dGFjaCcsXG4gICAgZGV0YWNoOiAnZGV0YWNoJyxcbiAgICBhY3Rpb246ICdhY3Rpb24nLFxuICAgIGNvbXBsZXRlOiAnY29tcGxldGUnLFxuICAgIGVycm9yOiAnZXJyb3InLFxuICB9XG4gIG9wdGlvbnM7XG4gIHV1aWQ7XG4gIGNvbnN0cnVjdG9yKHBhcmVudCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKCFwYXJlbnQuanNkaXJsaXN0KSB7XG4gICAgICBwYXJlbnQgPSAocGFyZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpID8gcGFyZW50IDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwYXJlbnQpO1xuICAgICAgaWYgKCFwYXJlbnQpIHJldHVybjtcbiAgICAgIHRoaXMub3B0aW9ucyA9IHsgLi4uZGlybGlzdE9wdGlvbnMsXG4gICAgICAgIC4uLm9wdGlvbnNcbiAgICAgIH07XG5cbiAgICAgIHRoaXMub3B0aW9ucy5lbnRyeSA9IHsgLi4uZW50cnlPcHRpb25zLFxuICAgICAgICAuLi50aGlzLm9wdGlvbnMuZW50cnksXG4gICAgICB9O1xuICAgICAgdGhpcy5vcHRpb25zLmVudHJ5LnVybCA9IHRoaXMub3B0aW9ucy51cmw7XG4gICAgICB0aGlzLmNvbnRhaW5lciA9IGNyZWF0ZV9ib3goXG4gICAgICAgIHRoaXMub3B0aW9ucy5lbnRyeS50YWdzLnRhZywge1xuICAgICAgICAgIGNsYXNzOiB0aGlzLm9wdGlvbnMuc2VsZWN0b3JzLmRpcmxpc3Quc3Vic3RyKDEpXG4gICAgICAgIH0sIHBhcmVudCk7XG4gICAgICAvLyB1bmlxdWUgaWQgdG8gY29tbXVuaWNhdGUgTW9kdWxlRXZlbnRFbWl0dGVyXG4gICAgICB0aGlzLnV1aWQgPSBnZW5lcmF0ZV91dWlkKCk7XG4gICAgICB0aGlzLmluaXQoKTtcbiAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnJvb3QuY29udGFpbmVyKTtcbiAgICAgIHBhcmVudC5qc2Rpcmxpc3QgPSB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gcGFyZW50LmpzZGlybGlzdDtcbiAgfVxuICBpbml0KCkge1xuICAgIGNvbnN0IHR5cGUgPSBlbnRyeVR5cGVzLnJvb3Q7XG4gICAgY29uc3Qgb2JqID0ge307XG4gICAgdGhpcy5lbnRyeWNvbnRyb2xzID0gKHRoaXMuZW50cnljb250cm9scyA9PT0gdW5kZWZpbmVkKSA/IEVudHJ5Q29udHJvbHModGhpcy5jb250YWluZXIsIHRoaXMub3B0aW9ucy5lbnRyeWNvbnRyb2xzKSA6IG51bGw7XG4gICAgT2JqZWN0LmVudHJpZXModGhpcy5vcHRpb25zLmVudHJ5Y29udHJvbHMuY29udHJvbHMpLmZvckVhY2goKFtrZXksIGNvbnRyb2xdKSA9PiB7XG4gICAgICBvYmpba2V5XSA9IGNvbnRyb2wuYWN0aW9uO1xuICAgIH0pO1xuICAgIHRoaXMub3B0aW9ucy5lbnRyeS5hY3Rpb25zID0gb2JqO1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IHsgLi4udGhpcy5vcHRpb25zLmVudHJ5LFxuICAgICAgLi4ue1xuICAgICAgICBhcGlfcGFyYW1ldGVyczogdGhpcy5vcHRpb25zLmFwaV9wYXJhbWV0ZXJzXG4gICAgICB9XG4gICAgfTtcbiAgICBvcHRpb25zLmxpc3RlbmVyID0gdGhpcy51dWlkO1xuICAgIHRoaXMucm9vdCA9IEVudHJ5QWN0aW9uKHtcbiAgICAgIHR5cGU6IHR5cGUsXG4gICAgICBuYW1lOiAnJyxcbiAgICAgIGxhYmVsOiB0aGlzLm9wdGlvbnMuYXBpX3BhcmFtZXRlcnMucm9vdG5hbWUsXG4gICAgICBjbGFzczogdGhpcy5vcHRpb25zLmFwaV9wYXJhbWV0ZXJzLnJvb3RjbGFzc1xuXG4gICAgfSwgb3B0aW9ucyk7XG4gICAgdGhpcy5pbml0RXZlbnRzKCk7XG4gICAgdGhpcy5yb290LmFkZExpc3RlbmVycygpO1xuICB9XG5cbiAgaW5pdEV2ZW50cyhvcHRpb25zKSB7XG4gICAgLy8gZXZlbnRzIGNvbnRyb2xzIG9uIGVudHJpZXNcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBNb2R1bGVFdmVudEVtaXR0ZXIub24odGhpcy5vcHRpb25zLmVudHJ5LmV2ZW50Lm5hbWUsIChlKSA9PiB7XG4gICAgICBjb25zdCBldnRuYW1lcyA9IGUuZW50cnkuZXZlbnRuYW1lcztcbiAgICAgIHN3aXRjaCAoZS5hY3Rpb24pIHtcbiAgICAgICAgY2FzZSBldnRuYW1lcy5pc2Rpc2NhcmQ6XG4gICAgICAgICAgaWYgKHRoaXMudHJhc2hkaXIpIHRoaXMudHJhc2hkaXIuY29udGFpbmVyLnJlbW92ZSgpO1xuICAgICAgICAgIHRoaXMudHJhc2hkaXIgPSBlLmVudHJ5O1xuICAgICAgICAgIHRoaXMucm9vdC5jb250YWluZXIucGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUoZS5lbnRyeS5jb250YWluZXIsIHRoaXMucm9vdC5jb250YWluZXIpO1xuICAgICAgICAgIHRoaXMucm9vdC5jb250YWluZXIuYXBwZW5kKGUuZW50cnkuY29udGFpbmVyKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBldnRuYW1lcy5kaXNjYXJkZWQ6XG4gICAgICAgICAgbGV0IHBhcmVudCA9IGUuZW50cnkucGFyZW50O1xuICAgICAgICAgIGlmIChlLmVudHJ5LmlzSW5UcmFzaCgpKSB7XG4gICAgICAgICAgICBlLmVudHJ5LmNvbnRhaW5lci5yZW1vdmUoKTtcbiAgICAgICAgICAgIHBhcmVudCA9IHRoaXMucm9vdDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZS5lbnRyeS5tb3ZlVG8odGhpcy50cmFzaGRpcik7XG4gICAgICAgICAgICBlLmVudHJ5LmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGNzcy5pbnRyYXNoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5hdHRhY2hDb250cm9scyhwYXJlbnQpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIGV2dG5hbWVzLmF0dGFjaDpcbiAgICAgICAgICAvLyBubyB1cGxvYWQgb24gdHJhc2ggZGlyXG4gICAgICAgICAgY29uc3QgdHlwZSA9IChlLmVudHJ5LmlzSW5UcmFzaCgpKSA/IGVudHJ5VHlwZXMuZGlzY2FyZGVkIDogZS5lbnRyeS5jb250YWluZXIuZGF0YXNldC50eXBlO1xuICAgICAgICAgIGlmICh0eXBlID09PSBlbnRyeVR5cGVzLmRpc2NhcmQpIHJldHVybjtcbiAgICAgICAgICBpZiAoZS5hY3Rpb24gPT09IGV2dG5hbWVzLmF0dGFjaCAmJiB0eXBlID09PSBlbnRyeVR5cGVzLmRpc2NhcmRlZCkgcmV0dXJuO1xuICAgICAgICAgIHRoaXMuYXR0YWNoQ29udHJvbHMoZS5lbnRyeSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJkcmFnc3RhcnRcIjpcbiAgICAgICAgICB0aGlzLmRyYWdlbnRyeSA9IHRoaXMuYWN0aXZlbnRyeSA9IGUuZW50cnk7XG4gICAgICAgICAgZS5lbnRyeS5jb250YWluZXIuY2xhc3NMaXN0LmFkZChlLmVudHJ5Lm9wdGlvbnMuY3NzLmRyYWdnaW5nKTtcbiAgICAgICAgICB0aGlzLmRldGFjaENvbnRyb2xzKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJkcmFnb3ZlclwiOlxuICAgICAgICAgIGlmICghdGhpcy5kcmFnZW50cnkpIHJldHVybjtcbiAgICAgICAgICBpZiAodGhpcy5vdmVyaXRlbSAhPT0gZS5lbnRyeS5jb250YWluZXIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm92ZXJpdGVtKSB0aGlzLm92ZXJpdGVtLmNsYXNzTGlzdC5yZW1vdmUoZS5lbnRyeS5vcHRpb25zLmNzcy5kcmFnb3Zlcik7XG4gICAgICAgICAgICBlLmVudHJ5LmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGUuZW50cnkub3B0aW9ucy5jc3MuZHJhZ292ZXIpO1xuICAgICAgICAgICAgdGhpcy5vdmVyaXRlbSA9IGUuZW50cnkuY29udGFpbmVyO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRyYWdlbmRcIjpcbiAgICAgICAgICB0aGlzLmRyYWdlbnRyeSA9IG51bGw7XG4gICAgICAgICAgaWYgKHRoaXMub3Zlcml0ZW0pIHRoaXMub3Zlcml0ZW0uY2xhc3NMaXN0LnJlbW92ZShlLmVudHJ5Lm9wdGlvbnMuY3NzLmRyYWdvdmVyKTtcbiAgICAgICAgICB0aGlzLm92ZXJpdGVtID0gbnVsbDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImRyb3BcIjpcbiAgICAgICAgICBpZiAoIXRoaXMuZHJhZ2VudHJ5KSB7XG4gICAgICAgICAgICBNb2R1bGVFdmVudEVtaXR0ZXIuZW1pdCh0aGlzLmV2ZW50bmFtZXMuYWN0aW9uLCBlLCB0aGlzLnV1aWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBkZXN0X2VudHJ5ID0gZS5lbnRyeTtcbiAgICAgICAgICBkZXN0X2VudHJ5LnJlc2V0RHJhZ092ZXIoKTtcbiAgICAgICAgICBpZiAodGhpcy5kcmFnZW50cnkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmRyYWdlbnRyeS5vcHRpb25zLmFjdGlvbnMubW92ZSkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhZ2VudHJ5Lm1vdmUoZGVzdF9lbnRyeSk7XG4gICAgICAgICAgICAgICAgaWYgKFtlbnRyeVR5cGVzLmRpc2NhcmRlZF0uaW5kZXhPZihkZXN0X2VudHJ5LnR5cGUpID49IDApIHRoaXMuYXR0YWNoQ29udHJvbHMoZGVzdF9lbnRyeSk7XG4gICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yZHJvcCAnLCBlcnJvcilcbiAgICAgICAgICAgICAgICB0aGlzLmRyYWdlbnRyeS51bk1vdmUoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGNvbnNvbGUubG9nKCdub2FjdGlvbm9uIGRyb3AnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgZXZ0bmFtZXMuZWRpdGFibGU6XG4gICAgICAgICAgaWYgKHRoaXMuZWRpdGFibGUpIHRoaXMuZWRpdGFibGUuc2V0RWRpdGFibGUoZmFsc2UpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgaWYgKGUuZW50cnkuYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmF0dGFjaENvbnRyb2xzKGUuZW50cnkpO1xuICAgICAgICAgIH0gZWxzZSB0aGlzLmF0dGFjaENvbnRyb2xzKHRoaXMucm9vdCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSwgdGhpcy51dWlkKTtcbiAgfVxuICBnZXRBY3RpdmVudHJ5KCkge1xuICAgIHJldHVybiB0aGlzLmFjdGl2ZW50cnk7XG4gIH1cbiAgc2V0QWN0aXZlbnRyeShlbnRyeSA9IG51bGwpIHtcbiAgICB0aGlzLmFjdGl2ZW50cnkgPSBlbnRyeTtcbiAgfVxuICBhdHRhY2hDb250cm9scyhlbnRyeSkge1xuICAgIGlmICh0aGlzLmVudHJ5Y29udHJvbHMpIHRoaXMuZW50cnljb250cm9scy5hdHRhY2hDb250cm9scyhlbnRyeSk7XG4gICAgdGhpcy5hY3RpdmVudHJ5ID0gZW50cnk7XG4gICAgTW9kdWxlRXZlbnRFbWl0dGVyLmVtaXQodGhpcy5ldmVudG5hbWVzLmF0dGFjaCwge1xuICAgICAgZW50cnk6IHRoaXMuYWN0aXZlbnRyeVxuICAgIH0sIHRoaXMudXVpZCk7XG4gIH1cblxuICBkZXRhY2hDb250cm9scygpIHtcbiAgICBjb25zdCBkZXN0ID0gKHRoaXMuYWN0aXZlbnRyeSkgPyAoKHRoaXMuYWN0aXZlbnRyeS5wYXJlbnQpID8gdGhpcy5hY3RpdmVudHJ5LnBhcmVudCA6IHRoaXMucm9vdCkgOiB0aGlzLnJvb3Q7XG4gICAgaWYgKHRoaXMuZW50cnljb250cm9scykgdGhpcy5lbnRyeWNvbnRyb2xzLmF0dGFjaENvbnRyb2xzKGRlc3QpO1xuICAgIHRoaXMuYWN0aXZlbnRyeSA9IGRlc3Q7XG4gICAgTW9kdWxlRXZlbnRFbWl0dGVyLmVtaXQodGhpcy5ldmVudG5hbWVzLmF0dGFjaCwge1xuICAgICAgZW50cnk6IGRlc3RcbiAgICB9LCB0aGlzLnV1aWQpO1xuICB9XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/files/js-dirlist.js\n")},"./src/modules/js-my-files.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsMyFiles: () => (/* binding */ JsMyFiles)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/alert-box.js */ \"./src/modules/alert-box.js\");\n/* harmony import */ var _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/files/js-dirlist.js */ \"./src/modules/files/js-dirlist.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__, _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst objaccept = {\n  \"image/*\": [\".png\", \".jpeg\", \".jpg\"],\n  \"text/tab-separated-values\": [\".tsv\"],\n  \"application/zip\": [\".zip\"],\n  \"application/gzip\": [\".gz\"],\n  \"application/x-bzip\": [\".bz\"],\n  \"application/x-bzip2\": [\".bz2\"]\n}\nconst accept = Object.values(objaccept).reduce((a, b) => a.concat(b));\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button = 'button p-1 mx-auto sm:mr-4 mb-4';\nconst filter_files = {\n  images: \"png,jpeg,jpg,gif\",\n  tsv: \"txt,tsv,zip, gzip,gz\"\n}\nclass JsMyFiles {\n  done = true;\n  jsDirToZip = null;\n  jsDirList = null;\n  trash_dir_name = 'trash.';\n  counters = {};\n  _events = {};\n  eventnames = {\n    complete: 'complete',\n    error: 'error',\n  };\n  rejected = [];\n  errorfile = [];\n\n  constructor(container, options = {}) {\n    if (!container.jsmyfiles) {\n      console.log('build myfiles')\n      container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n      if (!container) return;\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.dom_purify)(container, 'dataset');\n      this.container = container;\n      const defaultOptions = {\n        controls: {\n          scan: {\n            display: {\n              counter: 'counter',\n              size: 'size',\n            }\n          },\n          zip: {\n            btn: {\n              zip: 'makezip',\n              zipped: 'makezipped'\n            },\n            display: {\n              size: 'sizezipped',\n              counter: 'counterzipped',\n            }\n          },\n          reject: {\n            display: {\n              counter: 'counterrejected'\n            }\n          },\n          errorfile: {\n            display: {\n              counter: 'countererrorfile'\n            }\n          }\n        },\n        upload: {\n          label: 'upload'\n        },\n        btnprefix: 'btn',\n        btnfilelist: null,\n        selectors: {\n          droptarget: '.droptarget',\n          trigger: '.trigger',\n          uploadfile: 'uploadfile',\n        },\n        display: {\n          progression: 'display-progression',\n          dropzone: 'dropzone',\n          boxtitle: 'boxtitle',\n          counters: 'counters',\n          sizes: 'sizes',\n          timers: 'timers'\n        },\n\n        css: {\n          dragover: 'dragover'\n        }\n      };\n      this.options = Object.assign(defaultOptions, options);\n      this.options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : ['directory', 'file'];\n      this.haspicker = (window.showDirectoryPicker);\n      this.uuid = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.generate_uuid)();\n      this.init();\n      container.jsmyfiles = this;\n    }\n    return container.jsmyfiles;\n  }\n  init() {\n    // create dirlist box\n    this.addDisplayProgression();\n    this.addDirList();\n    this.addDropzone();\n    this.initControls();\n    this.initEvents().then(() => {\n      this.resetCounters();\n    });\n  }\n  initTimer() {\n    this.timer = new Date();\n  }\n  async initEvents() {\n\n    //To be refactored - for steppers )\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.eventnames.processed, async (e) => {\n      if (this.nextaction) await this.nextaction();\n    }, this.uuid);\n    const self = this;\n    if (this.options.controls.zip) {\n      const {\n        JsDirToZip\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_fflate_esm_browser_js\"), __webpack_require__.e(\"src_modules_files_js-dirtozip_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-dirtozip.js */ \"./src/modules/files/js-dirtozip.js\"));\n      this.jsDirToZip = JsDirToZip({\n        listener: this.uuid\n      });\n      Object.keys(this.jsDirToZip.eventnames).forEach((key) => {\n        this.eventnames[key] = this.jsDirToZip.eventnames[key];\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(key, (e) => {\n          switch (key) {\n            case this.eventnames.counter:\n              this.fileCounter(e);\n              break;\n            case this.eventnames.reject:\n              this.rejected.push(e.path);\n              this.fileCounter({\n                name: 'reject',\n                path: e.path,\n              });\n              break;\n            case this.eventnames.follow:\n            case this.eventnames.complete:\n              if (!e || !e.hasOwnProperty(\"name\") || e.name === \"\") {\n                console.log('no emit complete name' + key, e);\n                return;\n              }\n              self.showControl(e.name, e);\n              break;\n            case this.eventnames.message:\n              switch (e.name) {\n                case 'console':\n                  this.addConsoleMessage({\n                    id: (e.id) ? e.id : null,\n                    content: e.message,\n                    parent: this.container\n                  });\n                  break;\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.error:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.success:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.danger:\n                case _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.info:\n                  _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n                    type: e.name,\n                    content: e.message,\n                    dismissible: true,\n                    inverse: false\n                  });\n                  console.log('error', e);\n                  break;\n                default:\n                  console.log('message', e);\n                  break;\n              }\n              break;\n          }\n        }, this.uuid);\n      });\n    }\n    window.addEventListener('beforeunload', (e) => {\n      if (!this.done) {\n        e.preventDefault();\n        e.returnValue = (this.options.preventclose) ? this.options.preventclose : `Some work is in progress in this window.\\nAre you sure you want to leave?`;\n      }\n    });\n  }\n  emitToZip(btn) {\n    const message = (btn.dataset.message) ? JSON.parse(btn.dataset.message) : null;\n    if (!message) btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (message) {\n      if (message.name) {\n        const name = message.name;\n        delete message.name;\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.emit(name, message, this.jsDirToZip.uuid);\n        //ModuleEventEmitter.emit(name, message);\n      }\n    }\n    if (name === this.eventnames.sendfile) btn.disabled = true;\n  }\n\n  quotaEstimate(obj) {\n    return this.jsDirToZip.quotaEstimate();\n  }\n  scanBrowse(e, options) {\n    return this.jsDirToZip.scanBrowse(e, options);\n\n  }\n  scanHandle(dir, options) {\n    return this.jsDirToZip.scanHandle(dir, options);\n  }\n  async handleBrowse(e) {\n    if (!this.setUploadEntry()) return;\n    this.initTimer();\n    this.toggleCounters(true);\n    if (!this.haspicker) e = e.target.files;\n    await this.scanBrowse(e, {\n      accept: accept,\n    });\n  }\n\n  addDropzone() { //\n    this.dropzone = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n      id: this.options.display.dropzone\n    });\n    const input = (this.haspicker) ? null : (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('input', {\n      type: \"file\",\n      name: this.options.selectors.uploadfile,\n      id: this.options.selectors.uploadfile,\n      multiple: true,\n      allowdirs: true,\n      accept: accept,\n      class: 'hidden'\n    }, this.dropzone);\n    if (input) input.addEventListener(\"change\", (e) => {\n      this.handleBrowse(e)\n    });\n    const btns = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {},\n      this.dropzone);\n\n    this.options.browse.forEach(opt => {\n      const text = (this.container.dataset[`textbrowse${opt}`]) ? this.container.dataset[`textbrowse${opt}`] : `browse${opt}`;\n      const btn = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n        class: this.options.selectors.trigger.slice(1),\n        dataset: {\n          type: opt\n        },\n        text: text\n      }, btns);\n\n      btn.addEventListener('click', async (e) => {\n        if (this.haspicker) {\n          this.openDirDialog(opt, (e) => {\n            this.handleBrowse(e)\n          });\n        } else {\n          if (opt === \"directory\") {\n            input.directory = true;\n            input.webkitdirectory = true;\n          } else { //file\n            input.directory = false;\n            input.webkitdirectory = false;\n          }\n          input.dispatchEvent(new MouseEvent(\"click\"));\n\n        }\n\n      });\n    });\n    const spandrop = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n      text: this.container.dataset.textdrop\n    }, btns);\n\n  }\n\n  toggleDropTarget(on = true) {\n    const self = this;\n    const droptarget = (this.activentry) ? this.activentry.container : null;\n    if (droptarget === null) return;\n    const cssdragover = (this.jsDirList) ? (this.jsDirList.options.entry) ? this.jsDirList.options.entry.css.dragover : this.options.css.dragover : this.options.css.dragover;\n    const target_dragover = (e) => {\n      if (!this.dragover && this.activentry && this.activentry.container === e.currentTarget) {\n        droptarget.classList.add(cssdragover);\n      }\n      self.handleDragOver(e);\n    }\n    const target_drop = async (e) => {\n      droptarget.classList.remove(cssdragover);\n      await self.handleDrop(e);\n    }\n    // set events and css for new dropzone\n    if (on === false) {\n      droptarget.removeEventListener('dragover', target_dragover);\n      droptarget.removeEventListener('drop', target_drop);\n      droptarget.classList.remove(this.options.selectors.droptarget.substr(1));\n    } else {\n      droptarget.addEventListener('dragover', target_dragover);\n      droptarget.addEventListener('drop', target_drop);\n      droptarget.classList.add(this.options.selectors.droptarget.substr(1));\n    }\n  }\n\n  async addDirList() {\n    this.jsDirList = new _modules_files_js_dirlist_js__WEBPACK_IMPORTED_MODULE_3__.JsDirList(this.container);\n    this.activentry = this.jsDirList.root;\n    this.rootitem = this.targetitem = this.activentry.container;\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.attach, (e) => {\n      if (!e.entry) return;\n      if (e.entry !== this.activentry && this.activentry.isBranch(true)) this.detachDropzone();\n      this.activentry = e.entry;\n      this.targetitem = this.activentry.container;\n      if (this.activentry.isBranch(true)) this.addUploadDialog();\n    }, this.jsDirList.uuid);\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.detach, (e) => {\n      this.detachDropzone();\n      this.activentry = null;\n      this.uploadentry = null;\n      this.targetitem = null;\n    }, this.jsDirList.uuid);\n    _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(this.jsDirList.eventnames.action, (e) => {\n      switch (e.action) {\n        case \"drop\":\n          this.handleDrop(e.event);\n          break;\n\n        default:\n          console.log('action not managed ' + e.action, e);\n          break;\n      }\n    }, this.jsDirList.uuid);\n    this.activentry.label.dispatchEvent(new Event('click'));\n  }\n\n  addDisplayProgression() {\n    // add counters\n    if (this.displayprogression) return;\n    let el = document.getElementById(this.options.display.progression);\n    if (!el) {\n      el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        id: this.options.display.progression\n      }, this.container);\n      el.insertAdjacentHTML('afterbegin', `<div class=\"${this.options.display.progression}\"><div class=\"${this.options.display.counters}\"></div><div class=\"${this.options.display.sizes}\"></div><div class=\"${_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.progress}\"></div><div class=\"${this.options.display.timers}\"></div></div>`);\n      this.displayprogression = el;\n    }\n  }\n  enableDropzone(enable = true, destroy = false) {\n    if (destroy || enable === false) this.dropzone.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    if (enable) {\n      this.dropzone.dataset.active = true;\n      this.dropzone.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    } else delete this.dropzone.dataset.active;\n  }\n  //\n  attachDropzone() {\n    if (this.dropzone.dataset.active) {\n      this.targetitem.insertBefore(this.dropzone, this.activentry.label.nextElementSibling);\n      this.toggleDropTarget(true);\n    }\n  }\n  detachDropzone() {\n    this.enableDropzone(false);\n    this.toggleDropTarget(false);\n  }\n\n  openDirDialog(type, callback) {\n    // if chrome 86 , edge 86, opera 72\n    const showpick = (type === \"directory\") ? window.showDirectoryPicker : window.showOpenFilePicker;\n    const pickopts = (type === \"directory\") ? {\n      mode: \"read\",\n      multiple: true\n    } : {\n      types: [{\n        description: \"Images,.tsv, zip, gzip, tar files\",\n        accept: objaccept,\n      }, ],\n      excludeAcceptAllOption: true,\n      multiple: true,\n    };\n    showpick(pickopts).then(pick => {\n      callback(pick);\n    });\n  }\n\n  setUploadEntry() {\n    if (this.uploadentry && this.uploadentry !== this.activentry) {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addAlert({\n        type: \"error\",\n        content: 'Only one upload destination authorized. Close and upload the current zipfile.',\n        dismissible: true,\n        inverse: true\n      });\n      return false;\n    }\n    this.uploadentry = this.activentry;\n    return true;\n  }\n  // drag&drop\n  async handleDrop(e) {\n    e.preventDefault();\n    if (!this.setUploadEntry()) return;\n    let dataTransfer;\n    if (e.dataTransfer) {\n      dataTransfer = e.dataTransfer;\n    } else dataTransfer = e;\n    this.done = false;\n    this.initTimer();\n    const items = [...((dataTransfer.items) ? dataTransfer.items : dataTransfer.files)];\n    if (items.length) {\n      this.enableDropzone(false);\n      await items.forEach(async item => {\n        if (item.kind === \"file\") {\n          item = await item.webkitGetAsEntry();\n          this.toggleCounters(true);\n          await this.scanHandle(item);\n        }\n      })\n    }\n  }\n  handleDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n  }\n  showComplete() {\n    this.timer = (new Date() - this.timer) / 1000;\n    console.log('item-------------------------------------' + parseInt(this.timer / 60) + ' --- ' + (this.timer - (parseInt(this.timer / 60) * 60)));\n    this.enableDropzone(true);\n  }\n\n  stopOnError(err) {\n    console.log('err', err);\n  }\n\n  addConsoleMessage(message) {\n    //message {message:, parent:}\n    message.parent = (message.parent) ? message.parent : this.container;\n    _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addConsole(message);\n  }\n\n  addUploadDialog() {\n    if (this.options.controls.scan) {\n      this.enableDropzone(true);\n      this.attachDropzone();\n    }\n  }\n\n  async addFilesStore(name, callback) {\n    name = (name) ? name : this.options.dbname;\n    if (!this.jsFilesStore) {\n      const {\n        JsFilesStore\n      } = await __webpack_require__.e(/*! import() */ \"src_modules_files_js-filesystem_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/files/js-filesystem.js */ \"./src/modules/files/js-filesystem.js\"));\n      this.jsFilesStore = new JsFilesStore(null, callback);\n      this.displayFiles();\n    }\n    if (callback) await callback();\n  }\n  displayFiles() {\n    this.jsFilesStore.getItems('local');\n  }\n\n  fileCounter(e) {\n    const counters = this.counters[e.name];\n    counters.counter += 1;\n    if (e.size !== null) counters.size += parseInt(e.size);\n    counters.display.counter.textContent = counters.counter;\n    if (counters.display.size) counters.display.size.textContent = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(counters.size);\n    this.quotaEstimate();\n  }\n\n  resetCounter(item) {\n    const counters = this.counters[item];\n    ['counter', 'size'].forEach(el => {\n      if (counters.display[el]) {\n        counters[el] = 0;\n        counters.display[el].textContent = 0;\n      }\n    });\n  }\n  resetCounters() {\n    Object.keys(this.options.controls).forEach(key => {\n      this.resetCounter(key);\n    });\n    this.toggleCounters(false);\n  }\n  toggleCounters(show = true) {\n    const el = document.getElementById(this.options.display.progression);\n    if (!el) return;\n    if (show) el.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n    else el.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n  }\n\n  initFileCounter(item, opts, i) {\n    const sep = (i) ? ` / ` : ``;\n    let counter = 0;\n    let counterdisplay = null;\n    let size = 0;\n    let sizedisplay = null;\n    // create dom display elements\n\n\n    let boxcounters = document.getElementById(this.options.display.progression);\n\n    const itemopts = {\n      display: {},\n    };\n    Object.entries(opts).forEach(([k, val]) => {\n      const cl = k + 's';\n      const txt = {\n        counter: ' read',\n        size: ' read',\n        counterzipped: ' compressed',\n        sizezipped: ' compressed',\n        counterrejected: ' rejected',\n        countererrorfile: ' error',\n      }\n      const displaylist = ['counterrejected', 'countererrorfile'];\n      let elinsert = boxcounters.querySelector('.' + cl);\n      if (!elinsert) elinsert = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('div', {\n        class: cl\n      }, boxcounters, ``);\n      let el = elinsert.querySelector('.' + val);\n      if (!el) {\n        el = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('span', {\n          class: val,\n        }, elinsert, ` / `);\n        if (txt.hasOwnProperty(val)) {\n          // add a link to display the rejected files list\n          if (displaylist.indexOf(val) >= 0) {\n            const link = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('a', {\n              text: txt[val],\n              class: 'text-error',\n              title: `Click to display the list of ${txt[val]} files`\n            }, elinsert);\n            link.addEventListener('click', (e) => {\n              e.preventDefault();\n              this.displayExcept(link, val);\n            });\n          } else elinsert.append(document.createTextNode(txt[val]));\n        }\n      } else this.resetCounter(item);\n      itemopts.display[k] = el;\n      itemopts[k] = 0;\n    });\n\n    this.counters = { ...this.counters,\n      ...{\n        [item]: itemopts\n      }\n    };\n\n  }\n  displayExcept(el, type) {\n    type = type.replace('counter', '');\n    const textval = {\n      rejected: ` type rejected`,\n      errorfile: ` in error`\n    };\n    if (Object.keys(textval).indexOf(type) < 0) return;\n    const message = {\n      type: _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.alertconfig.types.warning,\n      parent: el,\n      content: `Files ${this.rejected.join('<br>')} ${textval[type]}`,\n    };\n    if (el.dataset.hasmessage) {\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.removeMessage(message);\n      delete el.dataset.hasmessage;\n    } else {\n      el.dataset.hasmessage = true;\n      _modules_alert_box_js__WEBPACK_IMPORTED_MODULE_2__.AlertBox.addMessage(message);\n    }\n  }\n\n  showControl(action, opts) {\n    const part = (opts && opts.part) ? opts.part : false;\n    const bigfile = (opts && opts.bigfile) ? opts.bigfile : false;\n    const filepath = (opts && opts.path) ? opts.path : this.uploadentry.getCurrentDirPath();\n    const target = ((opts.hasOwnProperty('bigfile') && bigfile !== false) ? 'zipped' : 'zip');\n    let message, text = null;\n    // 'zip' ---only btn for zip actions for the moment\n    const btn = this[this.options.btnprefix + 'zip' + target];\n    if (!btn) return;\n    btn.disabled = false;\n    switch (action) {\n      case this.eventnames.ready:\n        this.resetCounters();\n        if (this.uploadentry) {\n          this.uploadentry.list();\n          this.uploadentry = null;\n        }\n        message = null;\n        break;\n      case this.eventnames.follow:\n        if (bigfile) {\n          console.log(' follow', opts);\n          message = {};\n          btn.textContent = `Wait for next operation`;\n          btn.disabled = true;\n        } else message = null;\n\n        break;\n      case this.eventnames.endzip:\n        if (!part) this.showComplete();\n        btn.textContent = `Close zip file` + ((part) ? ` ` + part : ``);\n        btn.title = (part) ? `Your file is too big - you have to send this part before continuing to process the directory` : `Click to end zip file`;\n        message = {\n          name: this.eventnames.endzip,\n          part: part,\n          filepath: filepath,\n          bigfile: bigfile,\n        };\n        break;\n      case this.eventnames.bigfile:\n        if (bigfile && bigfile !== '') {\n          btn.textContent = `Upload big File separately`;\n          message = {\n            name: this.eventnames.bigfile,\n            path: filepath,\n            part: part,\n            bigfile: bigfile\n          };\n        }\n        break;\n      case this.eventnames.sendfile:\n        message = {\n          name: this.eventnames.sendfile,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        btn.textContent = `Upload zip file`;\n        if (message.bigfile && message.bigfile !== '') btn.textContent += ` ` + opts;\n        btn.dataset.message = JSON.stringify(message);\n        break;\n      case this.eventnames.pending:\n        btn.textContent = ` Pending ` + ((target !== 'zip') ? ' big file' : '');\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.gzip:\n        text = `compressing big file :${(opts && opts.bigfile)?filepath :``} ${(opts && opts.size)?(0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.format_bytes)(opts.size):``}`;\n        btn.textContent = text;\n        btn.disabled = true;\n        message = {};\n        break;\n      case this.eventnames.terminate:\n        btn.dataset.message = JSON.stringify({\n          name: this.eventnames.init,\n          bigfile: bigfile,\n          part: part,\n          path: filepath\n        });\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n        btn.click();\n        return;\n        break;\n      case this.eventnames.errorfile:\n        this.errorfile.push(filepath);\n      case this.eventnames.error:\n        btn.textContent = (opts.text) ? opts.text : `Error`;\n        message = {\n          name: opts.name,\n          path: filepath,\n          part: part,\n          bigfile: bigfile\n        };\n        console.log('????????ERROR??????????????????????????????????????--- errorcontrol' + action, message);\n        break;\n      default:\n        console.log('??????????????????????????????????????????????----default control ' + action, opts);\n        return;\n        break;\n    }\n    if (message === null) {\n      delete btn.dataset.message;\n      btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide)\n    } else {\n      btn.dataset.message = JSON.stringify(message);\n      btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n      if (btn.disabled) {\n        btn.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n        btn.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.html_spinner)('text-stone-200 ml-1 mr-2 align-text-bottom inline-block'));\n      } else btn.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.console);\n    };\n  }\n\n  getBtn(item, target) {\n    const btnkey = this.options.btnprefix + item + target;\n    if (this[btnkey]) return this[btnkey];\n    const display = this.options.controls[item].btn[target];\n    const btn = document.getElementById(display);\n    const parent = this.displayprogression;\n    if (!btn) {\n      this[btnkey] = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.create_box)('button', {\n        id: display,\n        class: [display, _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide].concat(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.button.split(' '))\n      }, parent);\n      this[btnkey].addEventListener('click', async (e) => {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.emitToZip(e.currentTarget);\n      });\n    } else parent.append(btn);\n    return this[btnkey];\n  }\n\n  initControls() {\n    Object.entries(this.options.controls).forEach(([key, control], i) => {\n      this.initFileCounter(key, control.display, i);\n      if (control.btn) this.activateControls(key, control.btn);\n    });\n  }\n  activateControls(key, btns) {\n    Object.keys(btns).forEach((btn) => {\n      this[this.options.btnprefix + key + btn] = this.getBtn(key, btn);\n    })\n\n  }\n\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDQSxxQkFBcUIsNkRBQVU7QUFDL0I7QUFDQSx5QkFBeUIsMkRBQUcsY0FBYywyREFBRztBQUM3QyxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9qcy1teS1maWxlcy5qcz8xM2I5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGJyb3dzZXJfYWNjZXB0LFxuICBkb21fcHVyaWZ5LFxuICBmZXRjaFNldHRpbmdzLFxuICBjcmVhdGVfYm94LFxuICBmb3JtYXRfYnl0ZXMsXG4gIGdlbmVyYXRlX3V1aWQsXG4gIGRpcnNlcGFyYXRvcixcbiAgaHRtbF9zcGlubmVyXG59IGZyb20gJy4uL21vZHVsZXMvdXRpbHMuanMnO1xuaW1wb3J0IHtcbiAgY3NzLFxufSBmcm9tICcuLi9tb2R1bGVzL21vZHVsZXMtY29uZmlnLmpzJztcbmltcG9ydCB7XG4gIEFsZXJ0Qm94XG59IGZyb20gJy4uL21vZHVsZXMvYWxlcnQtYm94LmpzJztcbmltcG9ydCB7XG4gIEpzRGlyTGlzdCxcbiAgZGlybGlzdE9wdGlvbnNcbn0gZnJvbSAnLi4vbW9kdWxlcy9maWxlcy9qcy1kaXJsaXN0LmpzJztcbmltcG9ydCB7XG4gIE1vZHVsZUV2ZW50RW1pdHRlclxufSBmcm9tICcuLi9tb2R1bGVzL21vZHVsZS1ldmVudC1lbWl0dGVyLmpzJztcbmNvbnN0IG9iamFjY2VwdCA9IHtcbiAgXCJpbWFnZS8qXCI6IFtcIi5wbmdcIiwgXCIuanBlZ1wiLCBcIi5qcGdcIl0sXG4gIFwidGV4dC90YWItc2VwYXJhdGVkLXZhbHVlc1wiOiBbXCIudHN2XCJdLFxuICBcImFwcGxpY2F0aW9uL3ppcFwiOiBbXCIuemlwXCJdLFxuICBcImFwcGxpY2F0aW9uL2d6aXBcIjogW1wiLmd6XCJdLFxuICBcImFwcGxpY2F0aW9uL3gtYnppcFwiOiBbXCIuYnpcIl0sXG4gIFwiYXBwbGljYXRpb24veC1iemlwMlwiOiBbXCIuYnoyXCJdXG59XG5jb25zdCBhY2NlcHQgPSBPYmplY3QudmFsdWVzKG9iamFjY2VwdCkucmVkdWNlKChhLCBiKSA9PiBhLmNvbmNhdChiKSk7XG5jc3MuYnV0dG9uID0gJ2J1dHRvbiBwLTEgbXgtYXV0byBzbTptci00IG1iLTQnO1xuY29uc3QgZmlsdGVyX2ZpbGVzID0ge1xuICBpbWFnZXM6IFwicG5nLGpwZWcsanBnLGdpZlwiLFxuICB0c3Y6IFwidHh0LHRzdix6aXAsIGd6aXAsZ3pcIlxufVxuZXhwb3J0IGNsYXNzIEpzTXlGaWxlcyB7XG4gIGRvbmUgPSB0cnVlO1xuICBqc0RpclRvWmlwID0gbnVsbDtcbiAganNEaXJMaXN0ID0gbnVsbDtcbiAgdHJhc2hfZGlyX25hbWUgPSAndHJhc2guJztcbiAgY291bnRlcnMgPSB7fTtcbiAgX2V2ZW50cyA9IHt9O1xuICBldmVudG5hbWVzID0ge1xuICAgIGNvbXBsZXRlOiAnY29tcGxldGUnLFxuICAgIGVycm9yOiAnZXJyb3InLFxuICB9O1xuICByZWplY3RlZCA9IFtdO1xuICBlcnJvcmZpbGUgPSBbXTtcblxuICBjb25zdHJ1Y3Rvcihjb250YWluZXIsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICghY29udGFpbmVyLmpzbXlmaWxlcykge1xuICAgICAgY29uc29sZS5sb2coJ2J1aWxkIG15ZmlsZXMnKVxuICAgICAgY29udGFpbmVyID0gKGNvbnRhaW5lciBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSA/IGNvbnRhaW5lciA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyKTtcbiAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47XG4gICAgICBkb21fcHVyaWZ5KGNvbnRhaW5lciwgJ2RhdGFzZXQnKTtcbiAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgICAgIGNvbnRyb2xzOiB7XG4gICAgICAgICAgc2Nhbjoge1xuICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICBjb3VudGVyOiAnY291bnRlcicsXG4gICAgICAgICAgICAgIHNpemU6ICdzaXplJyxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHppcDoge1xuICAgICAgICAgICAgYnRuOiB7XG4gICAgICAgICAgICAgIHppcDogJ21ha2V6aXAnLFxuICAgICAgICAgICAgICB6aXBwZWQ6ICdtYWtlemlwcGVkJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgc2l6ZTogJ3NpemV6aXBwZWQnLFxuICAgICAgICAgICAgICBjb3VudGVyOiAnY291bnRlcnppcHBlZCcsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICByZWplY3Q6IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgICAgICAgY291bnRlcjogJ2NvdW50ZXJyZWplY3RlZCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGVycm9yZmlsZToge1xuICAgICAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgICAgICBjb3VudGVyOiAnY291bnRlcmVycm9yZmlsZSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHVwbG9hZDoge1xuICAgICAgICAgIGxhYmVsOiAndXBsb2FkJ1xuICAgICAgICB9LFxuICAgICAgICBidG5wcmVmaXg6ICdidG4nLFxuICAgICAgICBidG5maWxlbGlzdDogbnVsbCxcbiAgICAgICAgc2VsZWN0b3JzOiB7XG4gICAgICAgICAgZHJvcHRhcmdldDogJy5kcm9wdGFyZ2V0JyxcbiAgICAgICAgICB0cmlnZ2VyOiAnLnRyaWdnZXInLFxuICAgICAgICAgIHVwbG9hZGZpbGU6ICd1cGxvYWRmaWxlJyxcbiAgICAgICAgfSxcbiAgICAgICAgZGlzcGxheToge1xuICAgICAgICAgIHByb2dyZXNzaW9uOiAnZGlzcGxheS1wcm9ncmVzc2lvbicsXG4gICAgICAgICAgZHJvcHpvbmU6ICdkcm9wem9uZScsXG4gICAgICAgICAgYm94dGl0bGU6ICdib3h0aXRsZScsXG4gICAgICAgICAgY291bnRlcnM6ICdjb3VudGVycycsXG4gICAgICAgICAgc2l6ZXM6ICdzaXplcycsXG4gICAgICAgICAgdGltZXJzOiAndGltZXJzJ1xuICAgICAgICB9LFxuXG4gICAgICAgIGNzczoge1xuICAgICAgICAgIGRyYWdvdmVyOiAnZHJhZ292ZXInXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcbiAgICAgIHRoaXMub3B0aW9ucy5icm93c2UgPSAoY29udGFpbmVyLmRhdGFzZXQuYnJvd3NlKSA/IGNvbnRhaW5lci5kYXRhc2V0LmJyb3dzZS5zcGxpdCgnLCcpIDogWydkaXJlY3RvcnknLCAnZmlsZSddO1xuICAgICAgdGhpcy5oYXNwaWNrZXIgPSAod2luZG93LnNob3dEaXJlY3RvcnlQaWNrZXIpO1xuICAgICAgdGhpcy51dWlkID0gZ2VuZXJhdGVfdXVpZCgpO1xuICAgICAgdGhpcy5pbml0KCk7XG4gICAgICBjb250YWluZXIuanNteWZpbGVzID0gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRhaW5lci5qc215ZmlsZXM7XG4gIH1cbiAgaW5pdCgpIHtcbiAgICAvLyBjcmVhdGUgZGlybGlzdCBib3hcbiAgICB0aGlzLmFkZERpc3BsYXlQcm9ncmVzc2lvbigpO1xuICAgIHRoaXMuYWRkRGlyTGlzdCgpO1xuICAgIHRoaXMuYWRkRHJvcHpvbmUoKTtcbiAgICB0aGlzLmluaXRDb250cm9scygpO1xuICAgIHRoaXMuaW5pdEV2ZW50cygpLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5yZXNldENvdW50ZXJzKCk7XG4gICAgfSk7XG4gIH1cbiAgaW5pdFRpbWVyKCkge1xuICAgIHRoaXMudGltZXIgPSBuZXcgRGF0ZSgpO1xuICB9XG4gIGFzeW5jIGluaXRFdmVudHMoKSB7XG5cbiAgICAvL1RvIGJlIHJlZmFjdG9yZWQgLSBmb3Igc3RlcHBlcnMgKVxuICAgIE1vZHVsZUV2ZW50RW1pdHRlci5vbih0aGlzLmV2ZW50bmFtZXMucHJvY2Vzc2VkLCBhc3luYyAoZSkgPT4ge1xuICAgICAgaWYgKHRoaXMubmV4dGFjdGlvbikgYXdhaXQgdGhpcy5uZXh0YWN0aW9uKCk7XG4gICAgfSwgdGhpcy51dWlkKTtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBpZiAodGhpcy5vcHRpb25zLmNvbnRyb2xzLnppcCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBKc0RpclRvWmlwXG4gICAgICB9ID0gYXdhaXQgaW1wb3J0KCcuLi9tb2R1bGVzL2ZpbGVzL2pzLWRpcnRvemlwLmpzJyk7XG4gICAgICB0aGlzLmpzRGlyVG9aaXAgPSBKc0RpclRvWmlwKHtcbiAgICAgICAgbGlzdGVuZXI6IHRoaXMudXVpZFxuICAgICAgfSk7XG4gICAgICBPYmplY3Qua2V5cyh0aGlzLmpzRGlyVG9aaXAuZXZlbnRuYW1lcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHRoaXMuZXZlbnRuYW1lc1trZXldID0gdGhpcy5qc0RpclRvWmlwLmV2ZW50bmFtZXNba2V5XTtcbiAgICAgICAgTW9kdWxlRXZlbnRFbWl0dGVyLm9uKGtleSwgKGUpID0+IHtcbiAgICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuY291bnRlcjpcbiAgICAgICAgICAgICAgdGhpcy5maWxlQ291bnRlcihlKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy5yZWplY3Q6XG4gICAgICAgICAgICAgIHRoaXMucmVqZWN0ZWQucHVzaChlLnBhdGgpO1xuICAgICAgICAgICAgICB0aGlzLmZpbGVDb3VudGVyKHtcbiAgICAgICAgICAgICAgICBuYW1lOiAncmVqZWN0JyxcbiAgICAgICAgICAgICAgICBwYXRoOiBlLnBhdGgsXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLmZvbGxvdzpcbiAgICAgICAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLmNvbXBsZXRlOlxuICAgICAgICAgICAgICBpZiAoIWUgfHwgIWUuaGFzT3duUHJvcGVydHkoXCJuYW1lXCIpIHx8IGUubmFtZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdubyBlbWl0IGNvbXBsZXRlIG5hbWUnICsga2V5LCBlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgc2VsZi5zaG93Q29udHJvbChlLm5hbWUsIGUpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLm1lc3NhZ2U6XG4gICAgICAgICAgICAgIHN3aXRjaCAoZS5uYW1lKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnY29uc29sZSc6XG4gICAgICAgICAgICAgICAgICB0aGlzLmFkZENvbnNvbGVNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IChlLmlkKSA/IGUuaWQgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudDogdGhpcy5jb250YWluZXJcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBBbGVydEJveC5hbGVydGNvbmZpZy50eXBlcy5lcnJvcjpcbiAgICAgICAgICAgICAgICBjYXNlIEFsZXJ0Qm94LmFsZXJ0Y29uZmlnLnR5cGVzLnN1Y2Nlc3M6XG4gICAgICAgICAgICAgICAgY2FzZSBBbGVydEJveC5hbGVydGNvbmZpZy50eXBlcy5kYW5nZXI6XG4gICAgICAgICAgICAgICAgY2FzZSBBbGVydEJveC5hbGVydGNvbmZpZy50eXBlcy5pbmZvOlxuICAgICAgICAgICAgICAgICAgQWxlcnRCb3guYWRkQWxlcnQoe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBlLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGUubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgZGlzbWlzc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGludmVyc2U6IGZhbHNlXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicsIGUpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtZXNzYWdlJywgZSk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMudXVpZCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIChlKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuZG9uZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGUucmV0dXJuVmFsdWUgPSAodGhpcy5vcHRpb25zLnByZXZlbnRjbG9zZSkgPyB0aGlzLm9wdGlvbnMucHJldmVudGNsb3NlIDogYFNvbWUgd29yayBpcyBpbiBwcm9ncmVzcyBpbiB0aGlzIHdpbmRvdy5cXG5BcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gbGVhdmU/YDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBlbWl0VG9aaXAoYnRuKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IChidG4uZGF0YXNldC5tZXNzYWdlKSA/IEpTT04ucGFyc2UoYnRuLmRhdGFzZXQubWVzc2FnZSkgOiBudWxsO1xuICAgIGlmICghbWVzc2FnZSkgYnRuLmNsYXNzTGlzdC5hZGQoY3NzLmhpZGUpO1xuICAgIGlmIChtZXNzYWdlKSB7XG4gICAgICBpZiAobWVzc2FnZS5uYW1lKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBtZXNzYWdlLm5hbWU7XG4gICAgICAgIGRlbGV0ZSBtZXNzYWdlLm5hbWU7XG4gICAgICAgIE1vZHVsZUV2ZW50RW1pdHRlci5lbWl0KG5hbWUsIG1lc3NhZ2UsIHRoaXMuanNEaXJUb1ppcC51dWlkKTtcbiAgICAgICAgLy9Nb2R1bGVFdmVudEVtaXR0ZXIuZW1pdChuYW1lLCBtZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG5hbWUgPT09IHRoaXMuZXZlbnRuYW1lcy5zZW5kZmlsZSkgYnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIHF1b3RhRXN0aW1hdGUob2JqKSB7XG4gICAgcmV0dXJuIHRoaXMuanNEaXJUb1ppcC5xdW90YUVzdGltYXRlKCk7XG4gIH1cbiAgc2NhbkJyb3dzZShlLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuanNEaXJUb1ppcC5zY2FuQnJvd3NlKGUsIG9wdGlvbnMpO1xuXG4gIH1cbiAgc2NhbkhhbmRsZShkaXIsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5qc0RpclRvWmlwLnNjYW5IYW5kbGUoZGlyLCBvcHRpb25zKTtcbiAgfVxuICBhc3luYyBoYW5kbGVCcm93c2UoZSkge1xuICAgIGlmICghdGhpcy5zZXRVcGxvYWRFbnRyeSgpKSByZXR1cm47XG4gICAgdGhpcy5pbml0VGltZXIoKTtcbiAgICB0aGlzLnRvZ2dsZUNvdW50ZXJzKHRydWUpO1xuICAgIGlmICghdGhpcy5oYXNwaWNrZXIpIGUgPSBlLnRhcmdldC5maWxlcztcbiAgICBhd2FpdCB0aGlzLnNjYW5Ccm93c2UoZSwge1xuICAgICAgYWNjZXB0OiBhY2NlcHQsXG4gICAgfSk7XG4gIH1cblxuICBhZGREcm9wem9uZSgpIHsgLy9cbiAgICB0aGlzLmRyb3B6b25lID0gY3JlYXRlX2JveCgnZGl2Jywge1xuICAgICAgaWQ6IHRoaXMub3B0aW9ucy5kaXNwbGF5LmRyb3B6b25lXG4gICAgfSk7XG4gICAgY29uc3QgaW5wdXQgPSAodGhpcy5oYXNwaWNrZXIpID8gbnVsbCA6IGNyZWF0ZV9ib3goJ2lucHV0Jywge1xuICAgICAgdHlwZTogXCJmaWxlXCIsXG4gICAgICBuYW1lOiB0aGlzLm9wdGlvbnMuc2VsZWN0b3JzLnVwbG9hZGZpbGUsXG4gICAgICBpZDogdGhpcy5vcHRpb25zLnNlbGVjdG9ycy51cGxvYWRmaWxlLFxuICAgICAgbXVsdGlwbGU6IHRydWUsXG4gICAgICBhbGxvd2RpcnM6IHRydWUsXG4gICAgICBhY2NlcHQ6IGFjY2VwdCxcbiAgICAgIGNsYXNzOiAnaGlkZGVuJ1xuICAgIH0sIHRoaXMuZHJvcHpvbmUpO1xuICAgIGlmIChpbnB1dCkgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZSkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVCcm93c2UoZSlcbiAgICB9KTtcbiAgICBjb25zdCBidG5zID0gY3JlYXRlX2JveCgnZGl2Jywge30sXG4gICAgICB0aGlzLmRyb3B6b25lKTtcblxuICAgIHRoaXMub3B0aW9ucy5icm93c2UuZm9yRWFjaChvcHQgPT4ge1xuICAgICAgY29uc3QgdGV4dCA9ICh0aGlzLmNvbnRhaW5lci5kYXRhc2V0W2B0ZXh0YnJvd3NlJHtvcHR9YF0pID8gdGhpcy5jb250YWluZXIuZGF0YXNldFtgdGV4dGJyb3dzZSR7b3B0fWBdIDogYGJyb3dzZSR7b3B0fWA7XG4gICAgICBjb25zdCBidG4gPSBjcmVhdGVfYm94KCdzcGFuJywge1xuICAgICAgICBjbGFzczogdGhpcy5vcHRpb25zLnNlbGVjdG9ycy50cmlnZ2VyLnNsaWNlKDEpLFxuICAgICAgICBkYXRhc2V0OiB7XG4gICAgICAgICAgdHlwZTogb3B0XG4gICAgICAgIH0sXG4gICAgICAgIHRleHQ6IHRleHRcbiAgICAgIH0sIGJ0bnMpO1xuXG4gICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoZSkgPT4ge1xuICAgICAgICBpZiAodGhpcy5oYXNwaWNrZXIpIHtcbiAgICAgICAgICB0aGlzLm9wZW5EaXJEaWFsb2cob3B0LCAoZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVCcm93c2UoZSlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAob3B0ID09PSBcImRpcmVjdG9yeVwiKSB7XG4gICAgICAgICAgICBpbnB1dC5kaXJlY3RvcnkgPSB0cnVlO1xuICAgICAgICAgICAgaW5wdXQud2Via2l0ZGlyZWN0b3J5ID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2UgeyAvL2ZpbGVcbiAgICAgICAgICAgIGlucHV0LmRpcmVjdG9yeSA9IGZhbHNlO1xuICAgICAgICAgICAgaW5wdXQud2Via2l0ZGlyZWN0b3J5ID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlucHV0LmRpc3BhdGNoRXZlbnQobmV3IE1vdXNlRXZlbnQoXCJjbGlja1wiKSk7XG5cbiAgICAgICAgfVxuXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBjb25zdCBzcGFuZHJvcCA9IGNyZWF0ZV9ib3goJ3NwYW4nLCB7XG4gICAgICB0ZXh0OiB0aGlzLmNvbnRhaW5lci5kYXRhc2V0LnRleHRkcm9wXG4gICAgfSwgYnRucyk7XG5cbiAgfVxuXG4gIHRvZ2dsZURyb3BUYXJnZXQob24gPSB0cnVlKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgY29uc3QgZHJvcHRhcmdldCA9ICh0aGlzLmFjdGl2ZW50cnkpID8gdGhpcy5hY3RpdmVudHJ5LmNvbnRhaW5lciA6IG51bGw7XG4gICAgaWYgKGRyb3B0YXJnZXQgPT09IG51bGwpIHJldHVybjtcbiAgICBjb25zdCBjc3NkcmFnb3ZlciA9ICh0aGlzLmpzRGlyTGlzdCkgPyAodGhpcy5qc0Rpckxpc3Qub3B0aW9ucy5lbnRyeSkgPyB0aGlzLmpzRGlyTGlzdC5vcHRpb25zLmVudHJ5LmNzcy5kcmFnb3ZlciA6IHRoaXMub3B0aW9ucy5jc3MuZHJhZ292ZXIgOiB0aGlzLm9wdGlvbnMuY3NzLmRyYWdvdmVyO1xuICAgIGNvbnN0IHRhcmdldF9kcmFnb3ZlciA9IChlKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuZHJhZ292ZXIgJiYgdGhpcy5hY3RpdmVudHJ5ICYmIHRoaXMuYWN0aXZlbnRyeS5jb250YWluZXIgPT09IGUuY3VycmVudFRhcmdldCkge1xuICAgICAgICBkcm9wdGFyZ2V0LmNsYXNzTGlzdC5hZGQoY3NzZHJhZ292ZXIpO1xuICAgICAgfVxuICAgICAgc2VsZi5oYW5kbGVEcmFnT3ZlcihlKTtcbiAgICB9XG4gICAgY29uc3QgdGFyZ2V0X2Ryb3AgPSBhc3luYyAoZSkgPT4ge1xuICAgICAgZHJvcHRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKGNzc2RyYWdvdmVyKTtcbiAgICAgIGF3YWl0IHNlbGYuaGFuZGxlRHJvcChlKTtcbiAgICB9XG4gICAgLy8gc2V0IGV2ZW50cyBhbmQgY3NzIGZvciBuZXcgZHJvcHpvbmVcbiAgICBpZiAob24gPT09IGZhbHNlKSB7XG4gICAgICBkcm9wdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWdvdmVyJywgdGFyZ2V0X2RyYWdvdmVyKTtcbiAgICAgIGRyb3B0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJvcCcsIHRhcmdldF9kcm9wKTtcbiAgICAgIGRyb3B0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLm9wdGlvbnMuc2VsZWN0b3JzLmRyb3B0YXJnZXQuc3Vic3RyKDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZHJvcHRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIHRhcmdldF9kcmFnb3Zlcik7XG4gICAgICBkcm9wdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ2Ryb3AnLCB0YXJnZXRfZHJvcCk7XG4gICAgICBkcm9wdGFyZ2V0LmNsYXNzTGlzdC5hZGQodGhpcy5vcHRpb25zLnNlbGVjdG9ycy5kcm9wdGFyZ2V0LnN1YnN0cigxKSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgYWRkRGlyTGlzdCgpIHtcbiAgICB0aGlzLmpzRGlyTGlzdCA9IG5ldyBKc0Rpckxpc3QodGhpcy5jb250YWluZXIpO1xuICAgIHRoaXMuYWN0aXZlbnRyeSA9IHRoaXMuanNEaXJMaXN0LnJvb3Q7XG4gICAgdGhpcy5yb290aXRlbSA9IHRoaXMudGFyZ2V0aXRlbSA9IHRoaXMuYWN0aXZlbnRyeS5jb250YWluZXI7XG4gICAgTW9kdWxlRXZlbnRFbWl0dGVyLm9uKHRoaXMuanNEaXJMaXN0LmV2ZW50bmFtZXMuYXR0YWNoLCAoZSkgPT4ge1xuICAgICAgaWYgKCFlLmVudHJ5KSByZXR1cm47XG4gICAgICBpZiAoZS5lbnRyeSAhPT0gdGhpcy5hY3RpdmVudHJ5ICYmIHRoaXMuYWN0aXZlbnRyeS5pc0JyYW5jaCh0cnVlKSkgdGhpcy5kZXRhY2hEcm9wem9uZSgpO1xuICAgICAgdGhpcy5hY3RpdmVudHJ5ID0gZS5lbnRyeTtcbiAgICAgIHRoaXMudGFyZ2V0aXRlbSA9IHRoaXMuYWN0aXZlbnRyeS5jb250YWluZXI7XG4gICAgICBpZiAodGhpcy5hY3RpdmVudHJ5LmlzQnJhbmNoKHRydWUpKSB0aGlzLmFkZFVwbG9hZERpYWxvZygpO1xuICAgIH0sIHRoaXMuanNEaXJMaXN0LnV1aWQpO1xuICAgIE1vZHVsZUV2ZW50RW1pdHRlci5vbih0aGlzLmpzRGlyTGlzdC5ldmVudG5hbWVzLmRldGFjaCwgKGUpID0+IHtcbiAgICAgIHRoaXMuZGV0YWNoRHJvcHpvbmUoKTtcbiAgICAgIHRoaXMuYWN0aXZlbnRyeSA9IG51bGw7XG4gICAgICB0aGlzLnVwbG9hZGVudHJ5ID0gbnVsbDtcbiAgICAgIHRoaXMudGFyZ2V0aXRlbSA9IG51bGw7XG4gICAgfSwgdGhpcy5qc0Rpckxpc3QudXVpZCk7XG4gICAgTW9kdWxlRXZlbnRFbWl0dGVyLm9uKHRoaXMuanNEaXJMaXN0LmV2ZW50bmFtZXMuYWN0aW9uLCAoZSkgPT4ge1xuICAgICAgc3dpdGNoIChlLmFjdGlvbikge1xuICAgICAgICBjYXNlIFwiZHJvcFwiOlxuICAgICAgICAgIHRoaXMuaGFuZGxlRHJvcChlLmV2ZW50KTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGNvbnNvbGUubG9nKCdhY3Rpb24gbm90IG1hbmFnZWQgJyArIGUuYWN0aW9uLCBlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9LCB0aGlzLmpzRGlyTGlzdC51dWlkKTtcbiAgICB0aGlzLmFjdGl2ZW50cnkubGFiZWwuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NsaWNrJykpO1xuICB9XG5cbiAgYWRkRGlzcGxheVByb2dyZXNzaW9uKCkge1xuICAgIC8vIGFkZCBjb3VudGVyc1xuICAgIGlmICh0aGlzLmRpc3BsYXlwcm9ncmVzc2lvbikgcmV0dXJuO1xuICAgIGxldCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uKTtcbiAgICBpZiAoIWVsKSB7XG4gICAgICBlbCA9IGNyZWF0ZV9ib3goJ2RpdicsIHtcbiAgICAgICAgaWQ6IHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uXG4gICAgICB9LCB0aGlzLmNvbnRhaW5lcik7XG4gICAgICBlbC5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBgPGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmRpc3BsYXkucHJvZ3Jlc3Npb259XCI+PGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmRpc3BsYXkuY291bnRlcnN9XCI+PC9kaXY+PGRpdiBjbGFzcz1cIiR7dGhpcy5vcHRpb25zLmRpc3BsYXkuc2l6ZXN9XCI+PC9kaXY+PGRpdiBjbGFzcz1cIiR7Y3NzLnByb2dyZXNzfVwiPjwvZGl2PjxkaXYgY2xhc3M9XCIke3RoaXMub3B0aW9ucy5kaXNwbGF5LnRpbWVyc31cIj48L2Rpdj48L2Rpdj5gKTtcbiAgICAgIHRoaXMuZGlzcGxheXByb2dyZXNzaW9uID0gZWw7XG4gICAgfVxuICB9XG4gIGVuYWJsZURyb3B6b25lKGVuYWJsZSA9IHRydWUsIGRlc3Ryb3kgPSBmYWxzZSkge1xuICAgIGlmIChkZXN0cm95IHx8IGVuYWJsZSA9PT0gZmFsc2UpIHRoaXMuZHJvcHpvbmUuY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gICAgaWYgKGVuYWJsZSkge1xuICAgICAgdGhpcy5kcm9wem9uZS5kYXRhc2V0LmFjdGl2ZSA9IHRydWU7XG4gICAgICB0aGlzLmRyb3B6b25lLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgIH0gZWxzZSBkZWxldGUgdGhpcy5kcm9wem9uZS5kYXRhc2V0LmFjdGl2ZTtcbiAgfVxuICAvL1xuICBhdHRhY2hEcm9wem9uZSgpIHtcbiAgICBpZiAodGhpcy5kcm9wem9uZS5kYXRhc2V0LmFjdGl2ZSkge1xuICAgICAgdGhpcy50YXJnZXRpdGVtLmluc2VydEJlZm9yZSh0aGlzLmRyb3B6b25lLCB0aGlzLmFjdGl2ZW50cnkubGFiZWwubmV4dEVsZW1lbnRTaWJsaW5nKTtcbiAgICAgIHRoaXMudG9nZ2xlRHJvcFRhcmdldCh0cnVlKTtcbiAgICB9XG4gIH1cbiAgZGV0YWNoRHJvcHpvbmUoKSB7XG4gICAgdGhpcy5lbmFibGVEcm9wem9uZShmYWxzZSk7XG4gICAgdGhpcy50b2dnbGVEcm9wVGFyZ2V0KGZhbHNlKTtcbiAgfVxuXG4gIG9wZW5EaXJEaWFsb2codHlwZSwgY2FsbGJhY2spIHtcbiAgICAvLyBpZiBjaHJvbWUgODYgLCBlZGdlIDg2LCBvcGVyYSA3MlxuICAgIGNvbnN0IHNob3dwaWNrID0gKHR5cGUgPT09IFwiZGlyZWN0b3J5XCIpID8gd2luZG93LnNob3dEaXJlY3RvcnlQaWNrZXIgOiB3aW5kb3cuc2hvd09wZW5GaWxlUGlja2VyO1xuICAgIGNvbnN0IHBpY2tvcHRzID0gKHR5cGUgPT09IFwiZGlyZWN0b3J5XCIpID8ge1xuICAgICAgbW9kZTogXCJyZWFkXCIsXG4gICAgICBtdWx0aXBsZTogdHJ1ZVxuICAgIH0gOiB7XG4gICAgICB0eXBlczogW3tcbiAgICAgICAgZGVzY3JpcHRpb246IFwiSW1hZ2VzLC50c3YsIHppcCwgZ3ppcCwgdGFyIGZpbGVzXCIsXG4gICAgICAgIGFjY2VwdDogb2JqYWNjZXB0LFxuICAgICAgfSwgXSxcbiAgICAgIGV4Y2x1ZGVBY2NlcHRBbGxPcHRpb246IHRydWUsXG4gICAgICBtdWx0aXBsZTogdHJ1ZSxcbiAgICB9O1xuICAgIHNob3dwaWNrKHBpY2tvcHRzKS50aGVuKHBpY2sgPT4ge1xuICAgICAgY2FsbGJhY2socGljayk7XG4gICAgfSk7XG4gIH1cblxuICBzZXRVcGxvYWRFbnRyeSgpIHtcbiAgICBpZiAodGhpcy51cGxvYWRlbnRyeSAmJiB0aGlzLnVwbG9hZGVudHJ5ICE9PSB0aGlzLmFjdGl2ZW50cnkpIHtcbiAgICAgIEFsZXJ0Qm94LmFkZEFsZXJ0KHtcbiAgICAgICAgdHlwZTogXCJlcnJvclwiLFxuICAgICAgICBjb250ZW50OiAnT25seSBvbmUgdXBsb2FkIGRlc3RpbmF0aW9uIGF1dGhvcml6ZWQuIENsb3NlIGFuZCB1cGxvYWQgdGhlIGN1cnJlbnQgemlwZmlsZS4nLFxuICAgICAgICBkaXNtaXNzaWJsZTogdHJ1ZSxcbiAgICAgICAgaW52ZXJzZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRoaXMudXBsb2FkZW50cnkgPSB0aGlzLmFjdGl2ZW50cnk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgLy8gZHJhZyZkcm9wXG4gIGFzeW5jIGhhbmRsZURyb3AoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoIXRoaXMuc2V0VXBsb2FkRW50cnkoKSkgcmV0dXJuO1xuICAgIGxldCBkYXRhVHJhbnNmZXI7XG4gICAgaWYgKGUuZGF0YVRyYW5zZmVyKSB7XG4gICAgICBkYXRhVHJhbnNmZXIgPSBlLmRhdGFUcmFuc2ZlcjtcbiAgICB9IGVsc2UgZGF0YVRyYW5zZmVyID0gZTtcbiAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICB0aGlzLmluaXRUaW1lcigpO1xuICAgIGNvbnN0IGl0ZW1zID0gWy4uLigoZGF0YVRyYW5zZmVyLml0ZW1zKSA/IGRhdGFUcmFuc2Zlci5pdGVtcyA6IGRhdGFUcmFuc2Zlci5maWxlcyldO1xuICAgIGlmIChpdGVtcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuZW5hYmxlRHJvcHpvbmUoZmFsc2UpO1xuICAgICAgYXdhaXQgaXRlbXMuZm9yRWFjaChhc3luYyBpdGVtID0+IHtcbiAgICAgICAgaWYgKGl0ZW0ua2luZCA9PT0gXCJmaWxlXCIpIHtcbiAgICAgICAgICBpdGVtID0gYXdhaXQgaXRlbS53ZWJraXRHZXRBc0VudHJ5KCk7XG4gICAgICAgICAgdGhpcy50b2dnbGVDb3VudGVycyh0cnVlKTtcbiAgICAgICAgICBhd2FpdCB0aGlzLnNjYW5IYW5kbGUoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG4gIGhhbmRsZURyYWdPdmVyKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9IFwibW92ZVwiO1xuICB9XG4gIHNob3dDb21wbGV0ZSgpIHtcbiAgICB0aGlzLnRpbWVyID0gKG5ldyBEYXRlKCkgLSB0aGlzLnRpbWVyKSAvIDEwMDA7XG4gICAgY29uc29sZS5sb2coJ2l0ZW0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyArIHBhcnNlSW50KHRoaXMudGltZXIgLyA2MCkgKyAnIC0tLSAnICsgKHRoaXMudGltZXIgLSAocGFyc2VJbnQodGhpcy50aW1lciAvIDYwKSAqIDYwKSkpO1xuICAgIHRoaXMuZW5hYmxlRHJvcHpvbmUodHJ1ZSk7XG4gIH1cblxuICBzdG9wT25FcnJvcihlcnIpIHtcbiAgICBjb25zb2xlLmxvZygnZXJyJywgZXJyKTtcbiAgfVxuXG4gIGFkZENvbnNvbGVNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAvL21lc3NhZ2Uge21lc3NhZ2U6LCBwYXJlbnQ6fVxuICAgIG1lc3NhZ2UucGFyZW50ID0gKG1lc3NhZ2UucGFyZW50KSA/IG1lc3NhZ2UucGFyZW50IDogdGhpcy5jb250YWluZXI7XG4gICAgQWxlcnRCb3guYWRkQ29uc29sZShtZXNzYWdlKTtcbiAgfVxuXG4gIGFkZFVwbG9hZERpYWxvZygpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLmNvbnRyb2xzLnNjYW4pIHtcbiAgICAgIHRoaXMuZW5hYmxlRHJvcHpvbmUodHJ1ZSk7XG4gICAgICB0aGlzLmF0dGFjaERyb3B6b25lKCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgYWRkRmlsZXNTdG9yZShuYW1lLCBjYWxsYmFjaykge1xuICAgIG5hbWUgPSAobmFtZSkgPyBuYW1lIDogdGhpcy5vcHRpb25zLmRibmFtZTtcbiAgICBpZiAoIXRoaXMuanNGaWxlc1N0b3JlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIEpzRmlsZXNTdG9yZVxuICAgICAgfSA9IGF3YWl0IGltcG9ydCgnLi4vbW9kdWxlcy9maWxlcy9qcy1maWxlc3lzdGVtLmpzJyk7XG4gICAgICB0aGlzLmpzRmlsZXNTdG9yZSA9IG5ldyBKc0ZpbGVzU3RvcmUobnVsbCwgY2FsbGJhY2spO1xuICAgICAgdGhpcy5kaXNwbGF5RmlsZXMoKTtcbiAgICB9XG4gICAgaWYgKGNhbGxiYWNrKSBhd2FpdCBjYWxsYmFjaygpO1xuICB9XG4gIGRpc3BsYXlGaWxlcygpIHtcbiAgICB0aGlzLmpzRmlsZXNTdG9yZS5nZXRJdGVtcygnbG9jYWwnKTtcbiAgfVxuXG4gIGZpbGVDb3VudGVyKGUpIHtcbiAgICBjb25zdCBjb3VudGVycyA9IHRoaXMuY291bnRlcnNbZS5uYW1lXTtcbiAgICBjb3VudGVycy5jb3VudGVyICs9IDE7XG4gICAgaWYgKGUuc2l6ZSAhPT0gbnVsbCkgY291bnRlcnMuc2l6ZSArPSBwYXJzZUludChlLnNpemUpO1xuICAgIGNvdW50ZXJzLmRpc3BsYXkuY291bnRlci50ZXh0Q29udGVudCA9IGNvdW50ZXJzLmNvdW50ZXI7XG4gICAgaWYgKGNvdW50ZXJzLmRpc3BsYXkuc2l6ZSkgY291bnRlcnMuZGlzcGxheS5zaXplLnRleHRDb250ZW50ID0gZm9ybWF0X2J5dGVzKGNvdW50ZXJzLnNpemUpO1xuICAgIHRoaXMucXVvdGFFc3RpbWF0ZSgpO1xuICB9XG5cbiAgcmVzZXRDb3VudGVyKGl0ZW0pIHtcbiAgICBjb25zdCBjb3VudGVycyA9IHRoaXMuY291bnRlcnNbaXRlbV07XG4gICAgWydjb3VudGVyJywgJ3NpemUnXS5mb3JFYWNoKGVsID0+IHtcbiAgICAgIGlmIChjb3VudGVycy5kaXNwbGF5W2VsXSkge1xuICAgICAgICBjb3VudGVyc1tlbF0gPSAwO1xuICAgICAgICBjb3VudGVycy5kaXNwbGF5W2VsXS50ZXh0Q29udGVudCA9IDA7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgcmVzZXRDb3VudGVycygpIHtcbiAgICBPYmplY3Qua2V5cyh0aGlzLm9wdGlvbnMuY29udHJvbHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIHRoaXMucmVzZXRDb3VudGVyKGtleSk7XG4gICAgfSk7XG4gICAgdGhpcy50b2dnbGVDb3VudGVycyhmYWxzZSk7XG4gIH1cbiAgdG9nZ2xlQ291bnRlcnMoc2hvdyA9IHRydWUpIHtcbiAgICBjb25zdCBlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uKTtcbiAgICBpZiAoIWVsKSByZXR1cm47XG4gICAgaWYgKHNob3cpIGVsLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgIGVsc2UgZWwuY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gIH1cblxuICBpbml0RmlsZUNvdW50ZXIoaXRlbSwgb3B0cywgaSkge1xuICAgIGNvbnN0IHNlcCA9IChpKSA/IGAgLyBgIDogYGA7XG4gICAgbGV0IGNvdW50ZXIgPSAwO1xuICAgIGxldCBjb3VudGVyZGlzcGxheSA9IG51bGw7XG4gICAgbGV0IHNpemUgPSAwO1xuICAgIGxldCBzaXplZGlzcGxheSA9IG51bGw7XG4gICAgLy8gY3JlYXRlIGRvbSBkaXNwbGF5IGVsZW1lbnRzXG5cblxuICAgIGxldCBib3hjb3VudGVycyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5kaXNwbGF5LnByb2dyZXNzaW9uKTtcblxuICAgIGNvbnN0IGl0ZW1vcHRzID0ge1xuICAgICAgZGlzcGxheToge30sXG4gICAgfTtcbiAgICBPYmplY3QuZW50cmllcyhvcHRzKS5mb3JFYWNoKChbaywgdmFsXSkgPT4ge1xuICAgICAgY29uc3QgY2wgPSBrICsgJ3MnO1xuICAgICAgY29uc3QgdHh0ID0ge1xuICAgICAgICBjb3VudGVyOiAnIHJlYWQnLFxuICAgICAgICBzaXplOiAnIHJlYWQnLFxuICAgICAgICBjb3VudGVyemlwcGVkOiAnIGNvbXByZXNzZWQnLFxuICAgICAgICBzaXplemlwcGVkOiAnIGNvbXByZXNzZWQnLFxuICAgICAgICBjb3VudGVycmVqZWN0ZWQ6ICcgcmVqZWN0ZWQnLFxuICAgICAgICBjb3VudGVyZXJyb3JmaWxlOiAnIGVycm9yJyxcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRpc3BsYXlsaXN0ID0gWydjb3VudGVycmVqZWN0ZWQnLCAnY291bnRlcmVycm9yZmlsZSddO1xuICAgICAgbGV0IGVsaW5zZXJ0ID0gYm94Y291bnRlcnMucXVlcnlTZWxlY3RvcignLicgKyBjbCk7XG4gICAgICBpZiAoIWVsaW5zZXJ0KSBlbGluc2VydCA9IGNyZWF0ZV9ib3goJ2RpdicsIHtcbiAgICAgICAgY2xhc3M6IGNsXG4gICAgICB9LCBib3hjb3VudGVycywgYGApO1xuICAgICAgbGV0IGVsID0gZWxpbnNlcnQucXVlcnlTZWxlY3RvcignLicgKyB2YWwpO1xuICAgICAgaWYgKCFlbCkge1xuICAgICAgICBlbCA9IGNyZWF0ZV9ib3goJ3NwYW4nLCB7XG4gICAgICAgICAgY2xhc3M6IHZhbCxcbiAgICAgICAgfSwgZWxpbnNlcnQsIGAgLyBgKTtcbiAgICAgICAgaWYgKHR4dC5oYXNPd25Qcm9wZXJ0eSh2YWwpKSB7XG4gICAgICAgICAgLy8gYWRkIGEgbGluayB0byBkaXNwbGF5IHRoZSByZWplY3RlZCBmaWxlcyBsaXN0XG4gICAgICAgICAgaWYgKGRpc3BsYXlsaXN0LmluZGV4T2YodmFsKSA+PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBsaW5rID0gY3JlYXRlX2JveCgnYScsIHtcbiAgICAgICAgICAgICAgdGV4dDogdHh0W3ZhbF0sXG4gICAgICAgICAgICAgIGNsYXNzOiAndGV4dC1lcnJvcicsXG4gICAgICAgICAgICAgIHRpdGxlOiBgQ2xpY2sgdG8gZGlzcGxheSB0aGUgbGlzdCBvZiAke3R4dFt2YWxdfSBmaWxlc2BcbiAgICAgICAgICAgIH0sIGVsaW5zZXJ0KTtcbiAgICAgICAgICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgIHRoaXMuZGlzcGxheUV4Y2VwdChsaW5rLCB2YWwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIGVsaW5zZXJ0LmFwcGVuZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0eHRbdmFsXSkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgdGhpcy5yZXNldENvdW50ZXIoaXRlbSk7XG4gICAgICBpdGVtb3B0cy5kaXNwbGF5W2tdID0gZWw7XG4gICAgICBpdGVtb3B0c1trXSA9IDA7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNvdW50ZXJzID0geyAuLi50aGlzLmNvdW50ZXJzLFxuICAgICAgLi4ue1xuICAgICAgICBbaXRlbV06IGl0ZW1vcHRzXG4gICAgICB9XG4gICAgfTtcblxuICB9XG4gIGRpc3BsYXlFeGNlcHQoZWwsIHR5cGUpIHtcbiAgICB0eXBlID0gdHlwZS5yZXBsYWNlKCdjb3VudGVyJywgJycpO1xuICAgIGNvbnN0IHRleHR2YWwgPSB7XG4gICAgICByZWplY3RlZDogYCB0eXBlIHJlamVjdGVkYCxcbiAgICAgIGVycm9yZmlsZTogYCBpbiBlcnJvcmBcbiAgICB9O1xuICAgIGlmIChPYmplY3Qua2V5cyh0ZXh0dmFsKS5pbmRleE9mKHR5cGUpIDwgMCkgcmV0dXJuO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICB0eXBlOiBBbGVydEJveC5hbGVydGNvbmZpZy50eXBlcy53YXJuaW5nLFxuICAgICAgcGFyZW50OiBlbCxcbiAgICAgIGNvbnRlbnQ6IGBGaWxlcyAke3RoaXMucmVqZWN0ZWQuam9pbignPGJyPicpfSAke3RleHR2YWxbdHlwZV19YCxcbiAgICB9O1xuICAgIGlmIChlbC5kYXRhc2V0Lmhhc21lc3NhZ2UpIHtcbiAgICAgIEFsZXJ0Qm94LnJlbW92ZU1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICBkZWxldGUgZWwuZGF0YXNldC5oYXNtZXNzYWdlO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbC5kYXRhc2V0Lmhhc21lc3NhZ2UgPSB0cnVlO1xuICAgICAgQWxlcnRCb3guYWRkTWVzc2FnZShtZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICBzaG93Q29udHJvbChhY3Rpb24sIG9wdHMpIHtcbiAgICBjb25zdCBwYXJ0ID0gKG9wdHMgJiYgb3B0cy5wYXJ0KSA/IG9wdHMucGFydCA6IGZhbHNlO1xuICAgIGNvbnN0IGJpZ2ZpbGUgPSAob3B0cyAmJiBvcHRzLmJpZ2ZpbGUpID8gb3B0cy5iaWdmaWxlIDogZmFsc2U7XG4gICAgY29uc3QgZmlsZXBhdGggPSAob3B0cyAmJiBvcHRzLnBhdGgpID8gb3B0cy5wYXRoIDogdGhpcy51cGxvYWRlbnRyeS5nZXRDdXJyZW50RGlyUGF0aCgpO1xuICAgIGNvbnN0IHRhcmdldCA9ICgob3B0cy5oYXNPd25Qcm9wZXJ0eSgnYmlnZmlsZScpICYmIGJpZ2ZpbGUgIT09IGZhbHNlKSA/ICd6aXBwZWQnIDogJ3ppcCcpO1xuICAgIGxldCBtZXNzYWdlLCB0ZXh0ID0gbnVsbDtcbiAgICAvLyAnemlwJyAtLS1vbmx5IGJ0biBmb3IgemlwIGFjdGlvbnMgZm9yIHRoZSBtb21lbnRcbiAgICBjb25zdCBidG4gPSB0aGlzW3RoaXMub3B0aW9ucy5idG5wcmVmaXggKyAnemlwJyArIHRhcmdldF07XG4gICAgaWYgKCFidG4pIHJldHVybjtcbiAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMucmVhZHk6XG4gICAgICAgIHRoaXMucmVzZXRDb3VudGVycygpO1xuICAgICAgICBpZiAodGhpcy51cGxvYWRlbnRyeSkge1xuICAgICAgICAgIHRoaXMudXBsb2FkZW50cnkubGlzdCgpO1xuICAgICAgICAgIHRoaXMudXBsb2FkZW50cnkgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIG1lc3NhZ2UgPSBudWxsO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLmZvbGxvdzpcbiAgICAgICAgaWYgKGJpZ2ZpbGUpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnIGZvbGxvdycsIG9wdHMpO1xuICAgICAgICAgIG1lc3NhZ2UgPSB7fTtcbiAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBgV2FpdCBmb3IgbmV4dCBvcGVyYXRpb25gO1xuICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIH0gZWxzZSBtZXNzYWdlID0gbnVsbDtcblxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLmVuZHppcDpcbiAgICAgICAgaWYgKCFwYXJ0KSB0aGlzLnNob3dDb21wbGV0ZSgpO1xuICAgICAgICBidG4udGV4dENvbnRlbnQgPSBgQ2xvc2UgemlwIGZpbGVgICsgKChwYXJ0KSA/IGAgYCArIHBhcnQgOiBgYCk7XG4gICAgICAgIGJ0bi50aXRsZSA9IChwYXJ0KSA/IGBZb3VyIGZpbGUgaXMgdG9vIGJpZyAtIHlvdSBoYXZlIHRvIHNlbmQgdGhpcyBwYXJ0IGJlZm9yZSBjb250aW51aW5nIHRvIHByb2Nlc3MgdGhlIGRpcmVjdG9yeWAgOiBgQ2xpY2sgdG8gZW5kIHppcCBmaWxlYDtcbiAgICAgICAgbWVzc2FnZSA9IHtcbiAgICAgICAgICBuYW1lOiB0aGlzLmV2ZW50bmFtZXMuZW5kemlwLFxuICAgICAgICAgIHBhcnQ6IHBhcnQsXG4gICAgICAgICAgZmlsZXBhdGg6IGZpbGVwYXRoLFxuICAgICAgICAgIGJpZ2ZpbGU6IGJpZ2ZpbGUsXG4gICAgICAgIH07XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuYmlnZmlsZTpcbiAgICAgICAgaWYgKGJpZ2ZpbGUgJiYgYmlnZmlsZSAhPT0gJycpIHtcbiAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBgVXBsb2FkIGJpZyBGaWxlIHNlcGFyYXRlbHlgO1xuICAgICAgICAgIG1lc3NhZ2UgPSB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLmV2ZW50bmFtZXMuYmlnZmlsZSxcbiAgICAgICAgICAgIHBhdGg6IGZpbGVwYXRoLFxuICAgICAgICAgICAgcGFydDogcGFydCxcbiAgICAgICAgICAgIGJpZ2ZpbGU6IGJpZ2ZpbGVcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuc2VuZGZpbGU6XG4gICAgICAgIG1lc3NhZ2UgPSB7XG4gICAgICAgICAgbmFtZTogdGhpcy5ldmVudG5hbWVzLnNlbmRmaWxlLFxuICAgICAgICAgIHBhdGg6IGZpbGVwYXRoLFxuICAgICAgICAgIHBhcnQ6IHBhcnQsXG4gICAgICAgICAgYmlnZmlsZTogYmlnZmlsZVxuICAgICAgICB9O1xuICAgICAgICBidG4udGV4dENvbnRlbnQgPSBgVXBsb2FkIHppcCBmaWxlYDtcbiAgICAgICAgaWYgKG1lc3NhZ2UuYmlnZmlsZSAmJiBtZXNzYWdlLmJpZ2ZpbGUgIT09ICcnKSBidG4udGV4dENvbnRlbnQgKz0gYCBgICsgb3B0cztcbiAgICAgICAgYnRuLmRhdGFzZXQubWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLnBlbmRpbmc6XG4gICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGAgUGVuZGluZyBgICsgKCh0YXJnZXQgIT09ICd6aXAnKSA/ICcgYmlnIGZpbGUnIDogJycpO1xuICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICBtZXNzYWdlID0ge307XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuZ3ppcDpcbiAgICAgICAgdGV4dCA9IGBjb21wcmVzc2luZyBiaWcgZmlsZSA6JHsob3B0cyAmJiBvcHRzLmJpZ2ZpbGUpP2ZpbGVwYXRoIDpgYH0gJHsob3B0cyAmJiBvcHRzLnNpemUpP2Zvcm1hdF9ieXRlcyhvcHRzLnNpemUpOmBgfWA7XG4gICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgIG1lc3NhZ2UgPSB7fTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRoaXMuZXZlbnRuYW1lcy50ZXJtaW5hdGU6XG4gICAgICAgIGJ0bi5kYXRhc2V0Lm1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgbmFtZTogdGhpcy5ldmVudG5hbWVzLmluaXQsXG4gICAgICAgICAgYmlnZmlsZTogYmlnZmlsZSxcbiAgICAgICAgICBwYXJ0OiBwYXJ0LFxuICAgICAgICAgIHBhdGg6IGZpbGVwYXRoXG4gICAgICAgIH0pO1xuICAgICAgICBidG4uY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gICAgICAgIGJ0bi5jbGljaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0aGlzLmV2ZW50bmFtZXMuZXJyb3JmaWxlOlxuICAgICAgICB0aGlzLmVycm9yZmlsZS5wdXNoKGZpbGVwYXRoKTtcbiAgICAgIGNhc2UgdGhpcy5ldmVudG5hbWVzLmVycm9yOlxuICAgICAgICBidG4udGV4dENvbnRlbnQgPSAob3B0cy50ZXh0KSA/IG9wdHMudGV4dCA6IGBFcnJvcmA7XG4gICAgICAgIG1lc3NhZ2UgPSB7XG4gICAgICAgICAgbmFtZTogb3B0cy5uYW1lLFxuICAgICAgICAgIHBhdGg6IGZpbGVwYXRoLFxuICAgICAgICAgIHBhcnQ6IHBhcnQsXG4gICAgICAgICAgYmlnZmlsZTogYmlnZmlsZVxuICAgICAgICB9O1xuICAgICAgICBjb25zb2xlLmxvZygnPz8/Pz8/Pz9FUlJPUj8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/LS0tIGVycm9yY29udHJvbCcgKyBhY3Rpb24sIG1lc3NhZ2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGNvbnNvbGUubG9nKCc/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/LS0tLWRlZmF1bHQgY29udHJvbCAnICsgYWN0aW9uLCBvcHRzKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgaWYgKG1lc3NhZ2UgPT09IG51bGwpIHtcbiAgICAgIGRlbGV0ZSBidG4uZGF0YXNldC5tZXNzYWdlO1xuICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoY3NzLmhpZGUpXG4gICAgfSBlbHNlIHtcbiAgICAgIGJ0bi5kYXRhc2V0Lm1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeShtZXNzYWdlKTtcbiAgICAgIGJ0bi5jbGFzc0xpc3QucmVtb3ZlKGNzcy5oaWRlKTtcbiAgICAgIGlmIChidG4uZGlzYWJsZWQpIHtcbiAgICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoY3NzLmNvbnNvbGUpO1xuICAgICAgICBidG4uaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgaHRtbF9zcGlubmVyKCd0ZXh0LXN0b25lLTIwMCBtbC0xIG1yLTIgYWxpZ24tdGV4dC1ib3R0b20gaW5saW5lLWJsb2NrJykpO1xuICAgICAgfSBlbHNlIGJ0bi5jbGFzc0xpc3QucmVtb3ZlKGNzcy5jb25zb2xlKTtcbiAgICB9O1xuICB9XG5cbiAgZ2V0QnRuKGl0ZW0sIHRhcmdldCkge1xuICAgIGNvbnN0IGJ0bmtleSA9IHRoaXMub3B0aW9ucy5idG5wcmVmaXggKyBpdGVtICsgdGFyZ2V0O1xuICAgIGlmICh0aGlzW2J0bmtleV0pIHJldHVybiB0aGlzW2J0bmtleV07XG4gICAgY29uc3QgZGlzcGxheSA9IHRoaXMub3B0aW9ucy5jb250cm9sc1tpdGVtXS5idG5bdGFyZ2V0XTtcbiAgICBjb25zdCBidG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkaXNwbGF5KTtcbiAgICBjb25zdCBwYXJlbnQgPSB0aGlzLmRpc3BsYXlwcm9ncmVzc2lvbjtcbiAgICBpZiAoIWJ0bikge1xuICAgICAgdGhpc1tidG5rZXldID0gY3JlYXRlX2JveCgnYnV0dG9uJywge1xuICAgICAgICBpZDogZGlzcGxheSxcbiAgICAgICAgY2xhc3M6IFtkaXNwbGF5LCBjc3MuaGlkZV0uY29uY2F0KGNzcy5idXR0b24uc3BsaXQoJyAnKSlcbiAgICAgIH0sIHBhcmVudCk7XG4gICAgICB0aGlzW2J0bmtleV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoZSkgPT4ge1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuZW1pdFRvWmlwKGUuY3VycmVudFRhcmdldCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgcGFyZW50LmFwcGVuZChidG4pO1xuICAgIHJldHVybiB0aGlzW2J0bmtleV07XG4gIH1cblxuICBpbml0Q29udHJvbHMoKSB7XG4gICAgT2JqZWN0LmVudHJpZXModGhpcy5vcHRpb25zLmNvbnRyb2xzKS5mb3JFYWNoKChba2V5LCBjb250cm9sXSwgaSkgPT4ge1xuICAgICAgdGhpcy5pbml0RmlsZUNvdW50ZXIoa2V5LCBjb250cm9sLmRpc3BsYXksIGkpO1xuICAgICAgaWYgKGNvbnRyb2wuYnRuKSB0aGlzLmFjdGl2YXRlQ29udHJvbHMoa2V5LCBjb250cm9sLmJ0bik7XG4gICAgfSk7XG4gIH1cbiAgYWN0aXZhdGVDb250cm9scyhrZXksIGJ0bnMpIHtcbiAgICBPYmplY3Qua2V5cyhidG5zKS5mb3JFYWNoKChidG4pID0+IHtcbiAgICAgIHRoaXNbdGhpcy5vcHRpb25zLmJ0bnByZWZpeCArIGtleSArIGJ0bl0gPSB0aGlzLmdldEJ0bihrZXksIGJ0bik7XG4gICAgfSlcblxuICB9XG5cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/js-my-files.js\n")}}]);