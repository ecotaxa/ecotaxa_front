/*! For license information please see src_modules_js-import_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-import_js"],{"./src/modules/form-submit.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormSubmit: () => (/* binding */ FormSubmit)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\nconst formcss = {\n  invalid: 'input-invalid',\n  inputvalidate: 'input-valid',\n}\nconst domselectors = {\n  captcha: '.js-captcha'\n}\n;\n\nclass FormSubmit {\n  handlers = [];\n  form = null;\n  listener = null;\n  constructor(form, options = {}) {\n    if (!form.formsubmit) {\n      if (!form) return;\n      this.form = form instanceof HTMLElement ? form : document.querySelector(form);\n      const defaultOptions = {\n        fetch: null,\n      };\n      options = Object.assign(options, this.form.dataset);\n      this.options = Object.assign(defaultOptions, options);\n      if (!this.form) return;\n      this.validateFields(true);\n      this.init();\n      form.formsubmit = this;\n    }\n    return form.formsubmit;\n  }\n  init() {\n    // init the form ( options like beforeunload etc...)\n\n    this.form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const res = await this.submitForm();\n      return res;\n    });\n    this.specialFields();\n  }\n  specialFields() {\n    // check if there is a password confirm input\n    // add show text for password fields\n\n    this.form.querySelectorAll('input[data-match]').forEach(input => {\n      //\n      const match = input.dataset.match;\n      if (!match) return;\n      const target = document.getElementById(match);\n      if (!target) return;\n      const invalid = (input.dataset.matchinvalid) ? input.dataset.matchinvalid : \"no match\";\n      const check_match = (item, itemtarget) => {\n        const label = (input.previousElementSibling && input.previousElementSibling.tagName.toLowerCase() == 'label') ? input.previousElementSibling : null;\n        const labeltarget = (target.previousElementSibling && target.previousElementSibling.tagName.toLowerCase() == 'label') ? target.previousElementSibling : null;\n        const {\n          patternMismatch = false\n        } = item.validity;\n        const customvalidity = (patternMismatch) ?\n          this.get_message(item, 'invalid') : '';\n        if (item.checkValidity() === true) {\n          item.dataset.invalid = '';\n          item.setCustomValidity(\"\");\n          if (item == input && label !== null) label.classList.remove(formcss.invalid);\n          else if (labeltarget !== null) labeltarget.classList.remove(formcss.invalid);\n          item.classList.remove(formcss.inputvalidate);\n          if (item.value !== itemtarget.value) {\n            input.setCustomValidity(invalid);\n            if (label) {\n              label.dataset.invalid = (label.dataset.invalid) ? label.dataset.invalid : invalid;\n              label.classList.add(formcss.invalid);\n            }\n            input.classList.add(formcss.inputvalidate);\n          } else {\n            input.setCustomValidity(\"\");\n            if (label) label.classList.remove(formcss.invalid);\n            input.classList.remove(formcss.inputvalidate);\n          }\n        } else {\n          item.setCustomValidity(customvalidity);\n          item.dataset.invalid = customvalidity;\n          if (label) label.classList.add(formcss.invalid);\n          item.classList.add(formcss.inputvalidate);\n        }\n        item.focus();\n      };\n      [input, target].forEach(item => {\n        item.addEventListener('keyup', (e) => {\n          const itemtarget = (item === input) ? target : input;\n          check_match(item, itemtarget);\n        });\n      });\n\n    });\n  }\n  get_message(field, type = 'invalid') {\n    if (field.checkValidity() == false) {\n      const {\n        valueMissing = true\n      } = field.validity;\n      if (valueMissing) return (field.dataset.required) ? field.dataset.required : ((this.form.dataset.required) ? this.form.dataset.required : 'required');\n      else return (field.dataset[type]) ? field.dataset[type] : 'input invalid';\n    } else return '';\n  }\n\n  validateField(field, init = false) {\n\n\n\n    if (['textarea', 'input'].indexOf(field.tagName.toLowerCase()) >= 0) {\n\n    }\n\n    if (['select', 'input[type=\"checkbox\"]'].indexOf(field.tagName.toLowerCase()) >= 0) {\n      field.querySelectorAll('option:checked').forEach(option => {\n        option.value = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.decode_HTMLEntities)(dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(option.value));\n      });\n\n    } else field.value = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.decode_HTMLEntities)(dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(field.value));\n\n    const rep = field.checkValidity();\n\n    /*  if (field.classList.contains('select-one')) {\n\n    }*/\n    const label = field.closest('.form-box') ? field.closest('.form-box').querySelector('label') : null;\n\n    if (rep && label) {\n      label.classList.remove(formcss.invalid);\n    } else if (!rep) {\n      if (label) {\n        label.dataset.invalid = this.get_message(field);\n        label.classList.add(formcss.invalid);\n        window.scrollTo({\n          top: parseInt(label.offsetTop),\n          left: parseInt(label.offsetLeft),\n          behavior: 'smooth'\n        });\n      }\n    }\n    return rep;\n  }\n\n  validateFields(init = false) {\n    //todo: complete validation foreach field type\n    let resp = true;\n    // .required input for tom-select component\n\n    [...this.form.elements].forEach(field => {\n      if (field.name) {\n\n        if (init === true) {\n\n          if (!field.dataset.listen) {\n            if (field.hasAttribute('required') && field.required) {\n              const label = field.closest('.form-box') ? field.closest('.form-box').querySelector('label') : field.parentElement.querySelector('label');\n              if (label) label.classList.add('required');\n            }\n\n            ['change', 'blur'].forEach(evt => {\n              field.addEventListener(evt, (e) => {\n                this.validateField(e.currentTarget, init);\n              });\n            });\n            field.dataset.listen = true;\n          }\n        } else resp = (resp && this.validateField(field, init));\n      }\n    });\n    return resp;\n  }\n\n  addHandler(handler) {\n    this.handlers.push(handler);\n  }\n  fieldEnable(enable = true) {\n    this.form.querySelectorAll('input[data-sub=\"enable\"]').forEach(input => {\n      if (enable === true) {\n        input.removeAttribute(\"disabled\");\n      } else input.disabled = true;\n    });\n  }\n\n  async submitHandler() {\n    if (!this.validateFields()) return false;\n\n    if (this.handlers.length === 0) return true;\n    let resp = true;\n    // series\n    /*  for (const handler of this.handlers) {\n          const rep = await handler()\n          resp = (resp && rep)\n      }*/\n    // concurrent\n    await Promise.all(this.handlers.map(async handler => {\n      const rep = await handler();\n      resp = (resp && rep);\n    }));\n    if (resp === true) this.handlers = [];\n    return resp;\n  }\n  // no redirection when using data-fetch\n  formFetch(format = null) {\n    const formdata = new FormData(this.form);\n    formdata[\"fetch\"] = true;\n    fetch(this.form.action, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.fetchSettings)({\n        method: 'POST',\n        body: formdata,\n      }))\n      .then(response => {\n        switch (format) {\n          case \"text\":\n          case \"html\":\n            return response.text();\n            break;\n          default:\n            return response.json();\n        }\n      })\n      .then(response => {\n        this.displayResponse(response);\n      })\n      .catch(err => {\n        this.displayResponse(err, true)\n      }).finally(response => {\n        this.form.disabled = true;\n      });\n    return false;\n  }\n\n  async submitForm() {\n    this.fieldEnable();\n    if (this.validateFields(false)) {\n      const isbot = (this.form.querySelector(domselectors.captcha)) ? (this.form.dataset.isbot ? (this.form.dataset.isbot === true) : true) : false;\n      if (isbot === true) return false;\n      const yessubmit = await this.submitHandler();\n      if (yessubmit) {\n        if (this.options.fetch) this.formFetch(this.options.fetch);\n        else this.form.submit();\n        this.form.disabled = true;\n        return true;\n      } else return false;\n    } else return false;\n  }\n\n  displayResponse(response, error = false) {\n    const el = document.createElement('div');\n    el.insertAdjacentHTML('afterbegin', response);\n    if (error !== false) el.classList.add('is-error');\n    this.form.parentElement.insertBefore(el, this.form);\n    this.form.remove();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/form-submit.js\n")},"./src/modules/js-import.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsImport: () => (/* binding */ JsImport)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _modules_form_submit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/form-submit.js */ \"./src/modules/form-submit.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n\n\n\n\n\n\nclass JsImport {\n  typeimport;\n  myFiles;\n  constructor(container, options = {}) {\n    container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n    if (!container) return;\n    this.container = container;\n    const defaultOptions = {\n      selector: {\n        displayresult: 'results',\n        typeimport: \"typeimport\",\n        importzone: \"file_to_load\",\n        showfiles: \".showfiles\",\n        displayselection: \"dirlist\"\n      }\n    };\n\n    this.options = Object.assign(defaultOptions, options);\n\n    this.init();\n  }\n\n  init() {\n    // init steps to display import sequence\n    this.container.querySelectorAll('input[name=\"' + this.options.selector.typeimport + '\"]').forEach(typeimport => {\n      typeimport.addEventListener('change', (e) => {\n        if (e.currentTarget.checked) {\n          console.log(e.currentTarget)\n          this.typeimport = e.currentTarget.value;\n          this.showSelection(true);\n        }\n      })\n    });\n    this.showSelection();\n  }\n  async showSelection(refresh = false) {\n    const apply_filters = () => {\n      let filters = this.typeimport.split('-');\n      filters = filters.map(filter => {\n        return new Set([...(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__.filter_files[filter] ? _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__.filter_files[filter] : [])]);\n      });\n      this.myFiles.container.querySelectorAll('[data-ftype]').forEach(entry => {\n        if (filters.has(entry.dataset.ftype)) entry.classList.remove('disabled');\n        else entry.classList.add('disabled');\n      });\n    }\n    const displayselection = document.getElementById(this.options.selector.displayselection);\n    const displayresult = document.getElementById(this.options.selector.displayresult);\n    if (!displayselection || !displayresult) return;\n    if (!this.myFiles) {\n      const {\n        JsMyFiles\n      } =\n      await __webpack_require__.e(/*! import() */ \"src_modules_js-my-files_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/js-my-files.js */ \"./src/modules/js-my-files.js\"));\n      this.myFiles = new JsMyFiles(displayselection, {\n        enableupload: true,\n        enablestore: true,\n        btnfilelist: this.options.showfiles,\n        upload: {\n          label: (displayselection.dataset.uploadlabel) ? (displayselection.dataset.uploadlabel) : 'upload',\n          callback: () => {\n            this.addImportPath('/tmp/ecotaxa_user.760/ecotaxa_import');\n            this.showSubmit();\n          }\n        }\n      });\n    }\n\n    if (refresh === true) apply_filters();\n\n  }\n  addImportPath(value) {\n    document.getElementById(this.options.selector.importzone).value = value;\n    const displayresult = document.getElementById(this.options.selector.displayresult);\n    if (displayresult) displayresult.innerHTML = `<li>${value.split('/').pop()}</li>`;\n    const options = this.container.querySelector('#' + this.options.selector.importoptions);\n  }\n\n  showSubmit(show = true) {\n    const submit = this.container.querySelector('[type=\"submit\"]');\n    console.log('sub', submit)\n    if (show) {\n      submit.classList.remove('hide');\n      submit.disabled = false;\n    } else submit.disabled = true;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9qcy1pbXBvcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtDOztBQUlDO0FBR047QUFJUzs7QUFFL0I7QUFDUDtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9FQUFZLFdBQVcsb0VBQVk7QUFDL0QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixZQUFZLHdMQUFtQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELHVCQUF1QjtBQUMvRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvanMtaW1wb3J0LmpzPzYwMjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERPTVB1cmlmeSBmcm9tICdkb21wdXJpZnknO1xuXG5pbXBvcnQge1xuICBGb3JtU3VibWl0XG59IGZyb20gJy4uL21vZHVsZXMvZm9ybS1zdWJtaXQuanMnO1xuaW1wb3J0IHtcbiAgZmV0Y2hTZXR0aW5ncyxcbn0gZnJvbSAnLi4vbW9kdWxlcy91dGlscy5qcyc7XG5pbXBvcnQge1xuICBjc3MsXG4gIGZpbHRlcl9maWxlc1xufSBmcm9tICcuLi9tb2R1bGVzL21vZHVsZXMtY29uZmlnLmpzJztcblxuZXhwb3J0IGNsYXNzIEpzSW1wb3J0IHtcbiAgdHlwZWltcG9ydDtcbiAgbXlGaWxlcztcbiAgY29uc3RydWN0b3IoY29udGFpbmVyLCBvcHRpb25zID0ge30pIHtcbiAgICBjb250YWluZXIgPSAoY29udGFpbmVyIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpID8gY29udGFpbmVyIDogZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXIpO1xuICAgIGlmICghY29udGFpbmVyKSByZXR1cm47XG4gICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgICBzZWxlY3Rvcjoge1xuICAgICAgICBkaXNwbGF5cmVzdWx0OiAncmVzdWx0cycsXG4gICAgICAgIHR5cGVpbXBvcnQ6IFwidHlwZWltcG9ydFwiLFxuICAgICAgICBpbXBvcnR6b25lOiBcImZpbGVfdG9fbG9hZFwiLFxuICAgICAgICBzaG93ZmlsZXM6IFwiLnNob3dmaWxlc1wiLFxuICAgICAgICBkaXNwbGF5c2VsZWN0aW9uOiBcImRpcmxpc3RcIlxuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcblxuICAgIHRoaXMuaW5pdCgpO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICAvLyBpbml0IHN0ZXBzIHRvIGRpc3BsYXkgaW1wb3J0IHNlcXVlbmNlXG4gICAgdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnaW5wdXRbbmFtZT1cIicgKyB0aGlzLm9wdGlvbnMuc2VsZWN0b3IudHlwZWltcG9ydCArICdcIl0nKS5mb3JFYWNoKHR5cGVpbXBvcnQgPT4ge1xuICAgICAgdHlwZWltcG9ydC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4ge1xuICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LmNoZWNrZWQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlLmN1cnJlbnRUYXJnZXQpXG4gICAgICAgICAgdGhpcy50eXBlaW1wb3J0ID0gZS5jdXJyZW50VGFyZ2V0LnZhbHVlO1xuICAgICAgICAgIHRoaXMuc2hvd1NlbGVjdGlvbih0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KTtcbiAgICB0aGlzLnNob3dTZWxlY3Rpb24oKTtcbiAgfVxuICBhc3luYyBzaG93U2VsZWN0aW9uKHJlZnJlc2ggPSBmYWxzZSkge1xuICAgIGNvbnN0IGFwcGx5X2ZpbHRlcnMgPSAoKSA9PiB7XG4gICAgICBsZXQgZmlsdGVycyA9IHRoaXMudHlwZWltcG9ydC5zcGxpdCgnLScpO1xuICAgICAgZmlsdGVycyA9IGZpbHRlcnMubWFwKGZpbHRlciA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgU2V0KFsuLi4oZmlsdGVyX2ZpbGVzW2ZpbHRlcl0gPyBmaWx0ZXJfZmlsZXNbZmlsdGVyXSA6IFtdKV0pO1xuICAgICAgfSk7XG4gICAgICB0aGlzLm15RmlsZXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWZ0eXBlXScpLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgICBpZiAoZmlsdGVycy5oYXMoZW50cnkuZGF0YXNldC5mdHlwZSkpIGVudHJ5LmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc2FibGVkJyk7XG4gICAgICAgIGVsc2UgZW50cnkuY2xhc3NMaXN0LmFkZCgnZGlzYWJsZWQnKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBkaXNwbGF5c2VsZWN0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5vcHRpb25zLnNlbGVjdG9yLmRpc3BsYXlzZWxlY3Rpb24pO1xuICAgIGNvbnN0IGRpc3BsYXlyZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLm9wdGlvbnMuc2VsZWN0b3IuZGlzcGxheXJlc3VsdCk7XG4gICAgaWYgKCFkaXNwbGF5c2VsZWN0aW9uIHx8ICFkaXNwbGF5cmVzdWx0KSByZXR1cm47XG4gICAgaWYgKCF0aGlzLm15RmlsZXMpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgSnNNeUZpbGVzXG4gICAgICB9ID1cbiAgICAgIGF3YWl0IGltcG9ydCgnLi4vbW9kdWxlcy9qcy1teS1maWxlcy5qcycpO1xuICAgICAgdGhpcy5teUZpbGVzID0gbmV3IEpzTXlGaWxlcyhkaXNwbGF5c2VsZWN0aW9uLCB7XG4gICAgICAgIGVuYWJsZXVwbG9hZDogdHJ1ZSxcbiAgICAgICAgZW5hYmxlc3RvcmU6IHRydWUsXG4gICAgICAgIGJ0bmZpbGVsaXN0OiB0aGlzLm9wdGlvbnMuc2hvd2ZpbGVzLFxuICAgICAgICB1cGxvYWQ6IHtcbiAgICAgICAgICBsYWJlbDogKGRpc3BsYXlzZWxlY3Rpb24uZGF0YXNldC51cGxvYWRsYWJlbCkgPyAoZGlzcGxheXNlbGVjdGlvbi5kYXRhc2V0LnVwbG9hZGxhYmVsKSA6ICd1cGxvYWQnLFxuICAgICAgICAgIGNhbGxiYWNrOiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmFkZEltcG9ydFBhdGgoJy90bXAvZWNvdGF4YV91c2VyLjc2MC9lY290YXhhX2ltcG9ydCcpO1xuICAgICAgICAgICAgdGhpcy5zaG93U3VibWl0KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocmVmcmVzaCA9PT0gdHJ1ZSkgYXBwbHlfZmlsdGVycygpO1xuXG4gIH1cbiAgYWRkSW1wb3J0UGF0aCh2YWx1ZSkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMub3B0aW9ucy5zZWxlY3Rvci5pbXBvcnR6b25lKS52YWx1ZSA9IHZhbHVlO1xuICAgIGNvbnN0IGRpc3BsYXlyZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLm9wdGlvbnMuc2VsZWN0b3IuZGlzcGxheXJlc3VsdCk7XG4gICAgaWYgKGRpc3BsYXlyZXN1bHQpIGRpc3BsYXlyZXN1bHQuaW5uZXJIVE1MID0gYDxsaT4ke3ZhbHVlLnNwbGl0KCcvJykucG9wKCl9PC9saT5gO1xuICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcjJyArIHRoaXMub3B0aW9ucy5zZWxlY3Rvci5pbXBvcnRvcHRpb25zKTtcbiAgfVxuXG4gIHNob3dTdWJtaXQoc2hvdyA9IHRydWUpIHtcbiAgICBjb25zdCBzdWJtaXQgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCdbdHlwZT1cInN1Ym1pdFwiXScpO1xuICAgIGNvbnNvbGUubG9nKCdzdWInLCBzdWJtaXQpXG4gICAgaWYgKHNob3cpIHtcbiAgICAgIHN1Ym1pdC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlJyk7XG4gICAgICBzdWJtaXQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9IGVsc2Ugc3VibWl0LmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/js-import.js\n")}}]);