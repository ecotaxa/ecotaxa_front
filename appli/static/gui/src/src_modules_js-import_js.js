/*! For license information please see src_modules_js-import_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-import_js"],{"./src/modules/js-import.js":(module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsImport: () => (/* binding */ JsImport)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.es.mjs\");\n/* harmony import */ var _modules_activ_request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/activ-request.js */ \"./src/modules/activ-request.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/module-event-emitter.js */ \"./src/modules/module-event-emitter.js\");\n/* harmony import */ var _modules_entry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../modules/entry.js */ \"./src/modules/entry.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_modules_activ_request_js__WEBPACK_IMPORTED_MODULE_1__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_modules_activ_request_js__WEBPACK_IMPORTED_MODULE_1__, _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__, _modules_entry_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__.css.displayimport = 'displayimport';\nfunction JsImport(container, options = {}) {\n  const defaultOptions = {\n    selectors: {\n      typeimport: \"typeimport\",\n      inputname: \"file_to_load\",\n      showfiles: \".showfiles\",\n      importzoneid: \"import-list\",\n      sourcezone: \"dirlist\",\n    },\n    url: {\n      import: \"gui/import\",\n      dirlist: \"gui/files\"\n    },\n    browse: ['directory', 'file'],\n    textimport: 'to import'\n  };\n  let selected=null;\n  container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n  if (!container) return;\n  options = { ...defaultOptions,\n    ...options\n  };\n  let url = {};\n  url.dirlist = (container.dataset.dirlist) ? container.dataset.dirlist : options.url.dirlist;\n  url.import = (container.dataset.import) ? container.dataset.import : options.url.import;\n  options.selectors.importzoneid = (container.dataset.importzoneid) ? container.dataset.importzoneid : options.selectors.importzoneid;\n  options.browse = (container.dataset.browse) ? container.dataset.browse.split(',') : options.browse;\n  options.textimport = (container.dataset.textimport) ? container.dataset.textimport : options.textimport;\n  const submitbtn = container.querySelector('[type=\"submit\"]');\n  let typeimport;\n  let myFiles;\n  let eventnames = {\n    import: 'import',\n    select: 'select',\n  };\n  let importliste = \"\";\n  let filetoload = document.getElementById(options.selectors.inputname);\n  let importzone = null;\n  let dragentry = null;\n\n  function init() {\n    // init steps to display import sequence\n    addImportZone();\n    container.querySelectorAll('input[name=\"' + options.selectors.typeimport + '\"]').forEach(typeimport => {\n      typeimport.addEventListener('change', (e) => {\n        if (e.currentTarget.checked) {\n          typeimport = e.currentTarget.value;\n          showSelection(true);\n        }\n      });\n    });\n    container.formsubmit.addHandler('submit', async () => {\n      return processImport();\n    });\n    showSelection();\n  }\n\n  function addImportZone() {\n    if (!filetoload) {\n      const importzoneid = (container.dataset.importzone) ? container.dataset.importzone : options.selectors.importzone;\n      let zone = document.getElementById(importzoneid);\n      if (zone === null) {\n        zone = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.create_box)('div', {\n          id: importzoneid\n        }, container);\n      };\n      filetoload = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.create_box)('input', {\n        type: \"hidden\",\n        id: options.selectors.inputname,\n        name: options.selectors.inputname,\n        class: \"form-input\",\n        required: true\n      }, zone);\n      const response = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.create_box)('div', {\n        class: \"response-summary\"\n      }, zone);\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.create_box)('div', {\n        id: \"total-objects\",\n        class: _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__.css.info,\n        data: {\n          text: \"Total objects\"\n        }\n      }, response);\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.create_box)('div', {\n        id: \"total-tsv\",\n        class: _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_3__.css.info,\n        data: {\n          text: \"Total TSV\"\n        }\n      }, response);\n    }\n  }\n  async function showSelection(refresh = false) {\n    const apply_filters = () => {\n      let filters = typeimport.split('-');\n      filters = filters.map(filter => {\n        return new Set([...(filter_files[filter] ? filter_files[filter] : [])]);\n      });\n      myFiles.container.querySelectorAll('[data-ftype]').forEach(entry => {\n        if (filters.has(entry.dataset.ftype)) entry.classList.remove('disabled');\n        else entry.classList.add('disabled');\n      });\n    }\n    const displayselection = document.getElementById(options.selectors.sourcezone);\n    if (!displayselection) return;\n    if (!myFiles) {\n      const {\n        JsMyFiles\n      } = await __webpack_require__.e(/*! import() */ \"src_modules_js-my-files_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/js-my-files.js */ \"./src/modules/js-my-files.js\"));\n      myFiles = new JsMyFiles(displayselection, {\n        import: url.toimport,\n        url: url.dirlist,\n        browse: options.browse,\n        upload: {\n          label: (displayselection.dataset.uploadlabel) ? (displayselection.dataset.uploadlabel) : 'upload',\n          callback: () => {\n            showSubmit(false);\n          }\n        }\n      });\n       myFiles.eventnames.clearother='clearother';\n        _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(myFiles.eventnames.clearother, (e) => {deSelect();},myFiles.uuid);\n      _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.on(eventnames.select, (e) => {\n        myFiles.detachDropzone();\n      }, myFiles.uuid);\n      addImportControls(myFiles.jsDirList, myFiles.uuid);\n      const detachcallback=function() {deSelect();showSubmit(false);}\n      myFiles.jsDirList.detachcallback=detachcallback;\n      container.querySelectorAll('[data-import]').forEach(async (item) => {\n        item.dataset.request = item.dataset.import;\n        await _modules_activ_request_js__WEBPACK_IMPORTED_MODULE_1__.ActivRequest.makeRequest(item);\n        item.addEventListener('click',(e) => {\n        showSubmit((selected!==null));\n        });\n        const other= item.previousElementSibling || item.nextElementSibling;\n        if (other && other.dataset.summary) other.addEventListener('click',(e) => {\n        showSubmit(false);\n        });\n        if (item.jstree) {\n            item.jstree.entrycontrols.options.controls = {};\n            item.jstree.setDetachcallback(detachcallback);\n         addImportControls(item.jstree, item.jstree.uuid, [_modules_entry_js__WEBPACK_IMPORTED_MODULE_5__.entryTypes.branch, _modules_entry_js__WEBPACK_IMPORTED_MODULE_5__.entryTypes.node]);\n         }\n      })\n        // detach entry controls if accordion or tabs when not active\n        const accordion=container.querySelector('.js-accordion')?container.querySelector('.js-accordion'):container.querySelector('.js-tabs');\n        if (accordion && accordion.dataset.detail) {\n        const summaries=accordion.querySelectorAll(accordion.dataset.detail);\n        summaries.forEach(summary=> {\n         summary.emitevent= () => { deSelect();}\n        });\n        }\n       //\n    }\n    if (refresh === true) apply_filters();\n  }\n  function deSelect() {\n  if(selected!==null) {selected.setSelected(false);selected.active=true;selected.emitEvent();selected=null;}\n  }\n  function addImportPath(value) {\n    document.getElementById(options.selector.importzone).value = value;\n    const displayresult = document.getElementById(options.selector.displayresult);\n    if (displayresult) displayresult.innerHTML = `<li>${value.split('/').pop()}</li>`;\n    const options = container.querySelector('#' + options.selector.importoptions);\n  }\n\n  function addImportEntry(entry) {\n    filetoload.value = entry.getCurrentPath().join(_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.dirseparator);\n    showSubmit();\n  }\n\n  function addImportControls(entrylist, uploaduuid, typentries = null) {\n    function add_remove_import(e) {\n      if (selected) {\n        delete selected.label.dataset.selected;\n        selected.setSelected(false);\n      }\n      const activentry = entrylist.getActiventry();\n      if (selected === activentry) {\n        selected = null;\n        return;\n      }\n      const cl = activentry.options.css.selected;\n      activentry.setSelected(true);\n      activentry.label.dataset.selected = options.textimport;\n      entrylist.entrycontrols.showControls(false);\n      selected = activentry;\n    }\n      const control = {\n      import: {\n        action: 'import',\n        class:[\"control-select\"],\n        //icon: 'icon-check',\n        typentries: (typentries) ? typentries : [_modules_entry_js__WEBPACK_IMPORTED_MODULE_5__.entryTypes.branch],\n        text: (options.toselect)?(options.toselect):'select to import',\n        callback: add_remove_import\n      }\n    };\n    entrylist.entrycontrols.options.controls = {\n      ...entrylist.entrycontrols.options.controls,\n      ...control\n    };\n\n    const import_action = function(entry) {\n      if (entrylist.activentry) entrylist.activentry.setSelected(false);\n      addImportEntry(entry);\n      _modules_module_event_emitter_js__WEBPACK_IMPORTED_MODULE_4__.ModuleEventEmitter.emit(eventnames.select, {\n        value: false\n      }, uploaduuid);\n\n    }\n    entrylist.entrycontrols.addControl(control.import, 0, import_action);\n    entrylist.entrycontrols.activateControl(control.import);\n  }\n\n  function showSubmit(show = true) {\n    const submit = container.querySelector('[type=\"submit\"]');\n      if (show) {\n      submit.classList.remove('hide');\n      submit.disabled = false;\n    } else submit.disabled = true;\n  }\n\n  function processImport() {\n    if (filetoload.value === \"\") {\n      alert('nothing to upload');\n      return false;\n    }\n    return true;\n  }\n  init();\n}\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/js-import.js\n")}}]);