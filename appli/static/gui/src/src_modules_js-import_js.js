/*! For license information please see src_modules_js-import_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_js-import_js"],{"./src/modules/js-import.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsImport: () => (/* binding */ JsImport)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n\n\n\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_2__.css.displayimport = 'displayimport';\nclass JsImport {\n  typeimport;\n  myFiles;\n  eventnames = {\n    import: 'import'\n  };\n  url = {};\n  constructor(container, options = {}) {\n    container = (container instanceof HTMLElement) ? container : document.querySelector(container);\n    if (!container) return;\n    this.container = container;\n    const defaultOptions = {\n      selector: {\n        typeimport: \"typeimport\",\n        importzone: \"file_to_load\",\n        showfiles: \".showfiles\",\n      },\n      url: {\n        import: \"gui/import\",\n        dirlist: \"gui/files\"\n      },\n      importzone: \"import-list\",\n      sourcezone: \"dirlist\"\n    };\n\n    this.options = Object.assign(defaultOptions, options);\n    this.url.dirlist = (container.dataset.dirlist) ? container.dataset.dirlist : this.options.url.dirlist;\n    this.url.import = (container.dataset.import) ? container.dataset.import : this.options.url.import;\n    const importzoneid = (container.dataset.importzone) ? container.dataset.importzone : this.options.importzone;\n    console.log('container ' + importzoneid, container)\n    this.init(importzoneid);\n  }\n\n  init(importzoneid) {\n    // init steps to display import sequence\n    this.addImportZone(importzoneid);\n    this.container.querySelectorAll('input[name=\"' + this.options.selector.typeimport + '\"]').forEach(typeimport => {\n      typeimport.addEventListener('change', (e) => {\n        if (e.currentTarget.checked) {\n          console.log(e.currentTarget)\n          this.typeimport = e.currentTarget.value;\n          this.showSelection(true);\n        }\n      })\n    });\n    this.showSelection();\n  }\n  addImportZone(importzoneid) {\n    let importzone = document.getElementById(importzoneid);\n    console.log('importzone ' + importzoneid, importzone)\n    importzone.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_2__.css.displayimport);\n    if (importzone === null) return;\n    if (importzone.children.length === 0) {\n      const input = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.create_box)('input', {\n        type: \"hidden\",\n        id: \"files_to_load\",\n        name: \"files_to_load\",\n        class: \"form-input\",\n        required: true\n      })\n      const response = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.create_box)('div', {\n        class: \"response-summary\"\n      }, );\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.create_box)('div', {\n        id: \"total-objects\",\n        class: \"info\",\n        data: {\n          text: \"Total objects\"\n        }\n      }, response);\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.create_box)('div', {\n        id: \"total-tsv\",\n        class: \"info\",\n        data: {\n          text: \"Total TSV\"\n        }\n      }, response);\n    }\n    return importzone;\n  }\n  async showSelection(refresh = false) {\n    console.log('showselection')\n    const apply_filters = () => {\n      let filters = this.typeimport.split('-');\n      filters = filters.map(filter => {\n        return new Set([...(filter_files[filter] ? filter_files[filter] : [])]);\n      });\n      this.myFiles.container.querySelectorAll('[data-ftype]').forEach(entry => {\n        if (filters.has(entry.dataset.ftype)) entry.classList.remove('disabled');\n        else entry.classList.add('disabled');\n      });\n    }\n    const displayselection = document.getElementById(this.options.sourcezone);\n    const displayresult = document.getElementById(this.options.importzone);\n    if (!displayselection || !displayresult) return;\n    console.log('displayselection', displayselection)\n    if (!this.myFiles) {\n\n      const {\n        JsMyFiles\n      } =\n      await __webpack_require__.e(/*! import() */ \"src_modules_js-my-files_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/js-my-files.js */ \"./src/modules/js-my-files.js\"));\n\n\n      this.myFiles = new JsMyFiles(displayselection, {\n        import: this.url.toimport,\n        url: this.url.dirlist,\n        upload: {\n          label: (displayselection.dataset.uploadlabel) ? (displayselection.dataset.uploadlabel) : 'upload',\n          callback: () => {\n            this.showSubmit();\n          }\n        }\n      });\n      this.addImportControls();\n    }\n\n    if (refresh === true) apply_filters();\n\n  }\n  addImportPath(value) {\n    document.getElementById(this.options.selector.importzone).value = value;\n    const displayresult = document.getElementById(this.options.selector.displayresult);\n    if (displayresult) displayresult.innerHTML = `<li>${value.split('/').pop()}</li>`;\n    const options = this.container.querySelector('#' + this.options.selector.importoptions);\n  }\n  addImportControls() {\n    const import_entry = (entry) => {\n\n    }\n    const control = {\n      import: {\n        action: 'import',\n        icon: 'icon-arrow-down-on-square-stack',\n        typentries: ['D', 'F'],\n        text: 'import into project',\n        callback: import_entry\n      }\n    };\n    this.myFiles.jsDirList.options.entrycontrols.controls = { ...control,\n      ...this.myFiles.jsDirList.options.entrycontrols.controls\n    };\n    this.myFiles.jsDirList.import = (entry) => {\n      console.log('yes good , very googd', entry);\n\n    }\n  }\n  showSubmit(show = true) {\n    const submit = this.container.querySelector('[type=\"submit\"]');\n    console.log('sub', submit)\n    if (show) {\n      submit.classList.remove('hide');\n      submit.disabled = false;\n    } else submit.disabled = true;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/js-import.js\n")}}]);