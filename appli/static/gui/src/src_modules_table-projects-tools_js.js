/*! For license information please see src_modules_table-projects-tools_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_table-projects-tools_js"],{"./src/modules/table-projects-tools.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImportList: () => (/* binding */ ImportList)\n/* harmony export */ });\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\n\n\nfunction ImportList(state, attach = null) {\n  const rowimported = -1;\n  const cellid = state.getCellId(state.cellidname);\n  const toggle = function(tr, value, idx) {\n    tr.hidden = value;\n    /*  if (value === true) tr.classList.add(css.disabled);\n      else {\n        tr.classList.remove(css.disabled);\n        state.dataImport.resetSelector(tr);\n      }*/\n  }\n\n  async function compileProjectRecords(newone = 0) {\n    const ts = state.dataImport.importzone.tomselect;\n    const ids = (ts) ? ts.items : Array.from(state.dataImport.importzone.selectedOptions).map(option => option.value);\n    if (ids.length === 0) return null;\n    const url = '/gui/collection/aggregated' + '?' + new URLSearchParams({\n      project_ids: ids.join(','),\n      simulate:\"y\"\n    });\n    const response = await fetch(url, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.fetchSettings)({\n      method: 'GET',\n    }))\n    let results = await response.json();\n    const excluded = results.excluded;\n    delete results.excluded;\n    const collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: 'base'\n    })\n   const key='creator';\n   if (newone === 0 && Object.keys(results).indexOf(key+\"_users\") >= 0) {\n      const users = results[key+\"_users\"].map(u => ({\n        key: u.id,\n        value: u.name,\n        text: u.name + ' ' + u.email\n      }));\n      results[key+\"_persons\"] = users\n      delete results[key+\"_users\"];\n      results[key+\"_persons\"].sort((a, b) => {\n        return collator.compare(a.value, b.value)\n      });\n    };\n    return results;\n  }\n\n  function initList() {\n    const plugin = state.dataImport;\n    if (plugin.targetimport) {\n      let selected = null;\n      if (plugin.targetimport.tagName.toLowerCase() === 'select') {\n        selected = [...plugin.targetimport.options].filter(opt => opt.selected);\n        selected = selected.map(opt => parseInt(opt.value));\n      } else selected = plugin.targetimport.value;\n      plugin.selectors.forEach(selector => {\n        if (selected.indexOf(parseInt(selector.value)) >= 0) selector.click();\n      });\n    }\n  }\n\n  function filterByRecord(record, recordindex) {\n    // display only lines with fields values equals to record fields values - criteria is a list of cellnames\n    const criteria_names = ['instrument', 'access'];\n    const criteria_ids = [];\n    criteria_names.forEach(colname => {\n      const index = state.getCellId(colname);\n      if (index > -1) criteria_ids.push(index);\n    });\n    if (criteria_ids.length !== criteria_names.length) return;\n\n    let datas = state.grid.data;\n    const indexes = [];\n    datas = datas.filter((row, i) => {\n      let compare = true;\n      if (i !== recordindex) criteria_ids.forEach(idx => {\n        compare = compare && (record[idx] === row[idx]);\n      });\n      if (compare) indexes.push(String(row[cellid]));\n      return compare;\n    });\n    state.displaySelected(criteria_ids, indexes, cellid, toggle);\n  }\n\n  function resetFilter() {\n    state.displaySelected([], [], cellid, toggle);\n  }\n\n  if (attach) {\n    attach.filterByRecord = filterByRecord;\n    attach.resetFilter = resetFilter;\n    attach.compileProjectRecords = compileProjectRecords;\n    attach.initList = initList;\n  } else return {\n    filterByRecord,\n    resetFilter,\n    initList\n  }\n\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy90YWJsZS1wcm9qZWN0cy10b29scy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFHc0M7QUFJVDs7O0FBRzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzQ0FBc0MsZ0VBQWE7QUFDbkQ7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy90YWJsZS1wcm9qZWN0cy10b29scy5qcz83NDhjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIG1vZGVscyxcbiAgY3NzLFxufSBmcm9tICcuLi9tb2R1bGVzL21vZHVsZXMtY29uZmlnLmpzJztcbmltcG9ydCB7XG4gIHVuZXNjYXBlX2h0bWwsXG4gIGZldGNoU2V0dGluZ3Ncbn0gZnJvbSAnLi4vbW9kdWxlcy91dGlscy5qcyc7XG5cblxuZnVuY3Rpb24gSW1wb3J0TGlzdChzdGF0ZSwgYXR0YWNoID0gbnVsbCkge1xuICBjb25zdCByb3dpbXBvcnRlZCA9IC0xO1xuICBjb25zdCBjZWxsaWQgPSBzdGF0ZS5nZXRDZWxsSWQoc3RhdGUuY2VsbGlkbmFtZSk7XG4gIGNvbnN0IHRvZ2dsZSA9IGZ1bmN0aW9uKHRyLCB2YWx1ZSwgaWR4KSB7XG4gICAgdHIuaGlkZGVuID0gdmFsdWU7XG4gICAgLyogIGlmICh2YWx1ZSA9PT0gdHJ1ZSkgdHIuY2xhc3NMaXN0LmFkZChjc3MuZGlzYWJsZWQpO1xuICAgICAgZWxzZSB7XG4gICAgICAgIHRyLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmRpc2FibGVkKTtcbiAgICAgICAgc3RhdGUuZGF0YUltcG9ydC5yZXNldFNlbGVjdG9yKHRyKTtcbiAgICAgIH0qL1xuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gY29tcGlsZVByb2plY3RSZWNvcmRzKG5ld29uZSA9IDApIHtcbiAgICBjb25zdCB0cyA9IHN0YXRlLmRhdGFJbXBvcnQuaW1wb3J0em9uZS50b21zZWxlY3Q7XG4gICAgY29uc3QgaWRzID0gKHRzKSA/IHRzLml0ZW1zIDogQXJyYXkuZnJvbShzdGF0ZS5kYXRhSW1wb3J0LmltcG9ydHpvbmUuc2VsZWN0ZWRPcHRpb25zKS5tYXAob3B0aW9uID0+IG9wdGlvbi52YWx1ZSk7XG4gICAgaWYgKGlkcy5sZW5ndGggPT09IDApIHJldHVybiBudWxsO1xuICAgIGNvbnN0IHVybCA9ICcvZ3VpL2NvbGxlY3Rpb24vYWdncmVnYXRlZCcgKyAnPycgKyBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgIHByb2plY3RfaWRzOiBpZHMuam9pbignLCcpLFxuICAgICAgc2ltdWxhdGU6XCJ5XCJcbiAgICB9KTtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwgZmV0Y2hTZXR0aW5ncyh7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgIH0pKVxuICAgIGxldCByZXN1bHRzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGNvbnN0IGV4Y2x1ZGVkID0gcmVzdWx0cy5leGNsdWRlZDtcbiAgICBkZWxldGUgcmVzdWx0cy5leGNsdWRlZDtcbiAgICBjb25zdCBjb2xsYXRvciA9IG5ldyBJbnRsLkNvbGxhdG9yKHVuZGVmaW5lZCwge1xuICAgICAgbnVtZXJpYzogdHJ1ZSxcbiAgICAgIHNlbnNpdGl2aXR5OiAnYmFzZSdcbiAgICB9KVxuICAgY29uc3Qga2V5PSdjcmVhdG9yJztcbiAgIGlmIChuZXdvbmUgPT09IDAgJiYgT2JqZWN0LmtleXMocmVzdWx0cykuaW5kZXhPZihrZXkrXCJfdXNlcnNcIikgPj0gMCkge1xuICAgICAgY29uc3QgdXNlcnMgPSByZXN1bHRzW2tleStcIl91c2Vyc1wiXS5tYXAodSA9PiAoe1xuICAgICAgICBrZXk6IHUuaWQsXG4gICAgICAgIHZhbHVlOiB1Lm5hbWUsXG4gICAgICAgIHRleHQ6IHUubmFtZSArICcgJyArIHUuZW1haWxcbiAgICAgIH0pKTtcbiAgICAgIHJlc3VsdHNba2V5K1wiX3BlcnNvbnNcIl0gPSB1c2Vyc1xuICAgICAgZGVsZXRlIHJlc3VsdHNba2V5K1wiX3VzZXJzXCJdO1xuICAgICAgcmVzdWx0c1trZXkrXCJfcGVyc29uc1wiXS5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgIHJldHVybiBjb2xsYXRvci5jb21wYXJlKGEudmFsdWUsIGIudmFsdWUpXG4gICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdExpc3QoKSB7XG4gICAgY29uc3QgcGx1Z2luID0gc3RhdGUuZGF0YUltcG9ydDtcbiAgICBpZiAocGx1Z2luLnRhcmdldGltcG9ydCkge1xuICAgICAgbGV0IHNlbGVjdGVkID0gbnVsbDtcbiAgICAgIGlmIChwbHVnaW4udGFyZ2V0aW1wb3J0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ3NlbGVjdCcpIHtcbiAgICAgICAgc2VsZWN0ZWQgPSBbLi4ucGx1Z2luLnRhcmdldGltcG9ydC5vcHRpb25zXS5maWx0ZXIob3B0ID0+IG9wdC5zZWxlY3RlZCk7XG4gICAgICAgIHNlbGVjdGVkID0gc2VsZWN0ZWQubWFwKG9wdCA9PiBwYXJzZUludChvcHQudmFsdWUpKTtcbiAgICAgIH0gZWxzZSBzZWxlY3RlZCA9IHBsdWdpbi50YXJnZXRpbXBvcnQudmFsdWU7XG4gICAgICBwbHVnaW4uc2VsZWN0b3JzLmZvckVhY2goc2VsZWN0b3IgPT4ge1xuICAgICAgICBpZiAoc2VsZWN0ZWQuaW5kZXhPZihwYXJzZUludChzZWxlY3Rvci52YWx1ZSkpID49IDApIHNlbGVjdG9yLmNsaWNrKCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBmaWx0ZXJCeVJlY29yZChyZWNvcmQsIHJlY29yZGluZGV4KSB7XG4gICAgLy8gZGlzcGxheSBvbmx5IGxpbmVzIHdpdGggZmllbGRzIHZhbHVlcyBlcXVhbHMgdG8gcmVjb3JkIGZpZWxkcyB2YWx1ZXMgLSBjcml0ZXJpYSBpcyBhIGxpc3Qgb2YgY2VsbG5hbWVzXG4gICAgY29uc3QgY3JpdGVyaWFfbmFtZXMgPSBbJ2luc3RydW1lbnQnLCAnYWNjZXNzJ107XG4gICAgY29uc3QgY3JpdGVyaWFfaWRzID0gW107XG4gICAgY3JpdGVyaWFfbmFtZXMuZm9yRWFjaChjb2xuYW1lID0+IHtcbiAgICAgIGNvbnN0IGluZGV4ID0gc3RhdGUuZ2V0Q2VsbElkKGNvbG5hbWUpO1xuICAgICAgaWYgKGluZGV4ID4gLTEpIGNyaXRlcmlhX2lkcy5wdXNoKGluZGV4KTtcbiAgICB9KTtcbiAgICBpZiAoY3JpdGVyaWFfaWRzLmxlbmd0aCAhPT0gY3JpdGVyaWFfbmFtZXMubGVuZ3RoKSByZXR1cm47XG5cbiAgICBsZXQgZGF0YXMgPSBzdGF0ZS5ncmlkLmRhdGE7XG4gICAgY29uc3QgaW5kZXhlcyA9IFtdO1xuICAgIGRhdGFzID0gZGF0YXMuZmlsdGVyKChyb3csIGkpID0+IHtcbiAgICAgIGxldCBjb21wYXJlID0gdHJ1ZTtcbiAgICAgIGlmIChpICE9PSByZWNvcmRpbmRleCkgY3JpdGVyaWFfaWRzLmZvckVhY2goaWR4ID0+IHtcbiAgICAgICAgY29tcGFyZSA9IGNvbXBhcmUgJiYgKHJlY29yZFtpZHhdID09PSByb3dbaWR4XSk7XG4gICAgICB9KTtcbiAgICAgIGlmIChjb21wYXJlKSBpbmRleGVzLnB1c2goU3RyaW5nKHJvd1tjZWxsaWRdKSk7XG4gICAgICByZXR1cm4gY29tcGFyZTtcbiAgICB9KTtcbiAgICBzdGF0ZS5kaXNwbGF5U2VsZWN0ZWQoY3JpdGVyaWFfaWRzLCBpbmRleGVzLCBjZWxsaWQsIHRvZ2dsZSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldEZpbHRlcigpIHtcbiAgICBzdGF0ZS5kaXNwbGF5U2VsZWN0ZWQoW10sIFtdLCBjZWxsaWQsIHRvZ2dsZSk7XG4gIH1cblxuICBpZiAoYXR0YWNoKSB7XG4gICAgYXR0YWNoLmZpbHRlckJ5UmVjb3JkID0gZmlsdGVyQnlSZWNvcmQ7XG4gICAgYXR0YWNoLnJlc2V0RmlsdGVyID0gcmVzZXRGaWx0ZXI7XG4gICAgYXR0YWNoLmNvbXBpbGVQcm9qZWN0UmVjb3JkcyA9IGNvbXBpbGVQcm9qZWN0UmVjb3JkcztcbiAgICBhdHRhY2guaW5pdExpc3QgPSBpbml0TGlzdDtcbiAgfSBlbHNlIHJldHVybiB7XG4gICAgZmlsdGVyQnlSZWNvcmQsXG4gICAgcmVzZXRGaWx0ZXIsXG4gICAgaW5pdExpc3RcbiAgfVxuXG59XG5leHBvcnQge1xuICBJbXBvcnRMaXN0XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/table-projects-tools.js\n")}}]);