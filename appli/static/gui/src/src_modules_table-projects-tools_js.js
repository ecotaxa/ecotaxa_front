/*! For license information please see src_modules_table-projects-tools_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_table-projects-tools_js"],{"./src/modules/table-projects-tools.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImportList: () => (/* binding */ ImportList)\n/* harmony export */ });\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\n\n\nfunction ImportList(state, attach = null) {\n  const rowimported = -1;\n  const selectimports=[];\n  const importindexes=[];\n  const cellid = state.getCellId(state.cellidname);\n  // display only lines with fields values equals to record fields values - criteria is a list of cellnames\n  const criteria_names = ['instrument', 'access'];\n  const criteria_ids = [];\n  criteria_names.forEach(colname => {\n      const index = state.getCellId(colname);\n      if (index > -1) criteria_ids.push(index);\n    });\n  state.toggle = function(tr, value, idx, filtered=false) {\n   if (filtered) { if(value) tr.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_0__.css.hide);\n     else {tr.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_0__.css.hide);\n    // state.dataImport.resetSelector(tr);\n    }\n     } else tr.hidden = value;\n  }\n\n  async function compileProjectRecords(newone = 0) {\n    const ts = state.dataImport.importzone.tomselect;\n    const ids = (ts) ? ts.items : Array.from(state.dataImport.importzone.selectedOptions).map(option => option.value);\n    if (ids.length === 0) return null;\n    const url = '/gui/collection/aggregated' + '?' + new URLSearchParams({\n      project_ids: ids.join(','),\n      simulate:\"y\"\n    });\n    const response = await fetch(url, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_1__.fetchSettings)({\n      method: 'GET',\n    }))\n    let results = await response.json();\n    const excluded = results.excluded;\n    delete results.excluded;\n    const collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: 'base'\n    })\n   const key='creator';\n   if (newone === 0 && Object.keys(results).indexOf(key+\"_users\") >= 0) {\n      const users = results[key+\"_users\"].map(u => ({\n        key: u.id,\n        value: u.name,\n        text: u.name + ' ' + u.email\n      }));\n      results[key+\"_persons\"] = users\n      delete results[key+\"_users\"];\n      results[key+\"_persons\"].sort((a, b) => {\n        return collator.compare(a.value, b.value)\n      });\n    };\n    return results;\n  }\n\n  function initList() {\n    if (!state.dataImport) return;\n    const plugin = state.dataImport;\n    if (plugin.targetimport) {\n      let selected = null;\n      if (plugin.targetimport.tagName.toLowerCase() === 'select') {\n        selected = [...plugin.targetimport.options].filter(opt => opt.selected);\n        selected = selected.map(opt => parseInt(opt.value));\n      } else selected = plugin.targetimport.value;\n      plugin.selectors.forEach(selector => {\n        if (selected.indexOf(parseInt(selector.value)) >= 0) selector.click();\n      });\n    }\n  }\n\n  function filterByRecord(record, recordindex) {\n    if (criteria_ids.length !== criteria_names.length) return;\n    let datas = state.grid.data;\n    selectimports.push(record[cellid]);\n    datas = datas.filter((row, i) => {\n      let compare = true;\n      if (i !== recordindex) criteria_ids.forEach(idx => {\n        compare = compare && (record[idx] === row[idx]);\n      });\n      const val = String(row[cellid])\n      if (compare && importindexes.indexOf(val)===-1) importindexes.push(val);\n      return compare;\n    });\n    state.displaySelected(criteria_ids, importindexes, cellid,true);\n  }\n\n  function resetFilter(record, recordindex) {\n    let index = selectimports.indexOf(record[cellid]);\n    if (index > -1)  selectimports.splice(index, 1);\n    index = importindexes.indexOf(String(record[cellid]));\n    if (index > -1)  importindexes.splice(index, 1);\n    if (selectimports.length===0) state.displaySelected([],[], cellid, true);\n    else state.displaySelected(criteria_ids, importindexes, cellid,true);\n  }\n\n  if (attach) {\n    attach.filterByRecord = filterByRecord;\n    attach.resetFilter = resetFilter;\n    attach.compileProjectRecords = compileProjectRecords;\n    attach.initList = initList;\n  } else return {\n    filterByRecord,\n    resetFilter,\n    initList\n  }\n\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy90YWJsZS1wcm9qZWN0cy10b29scy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFHc0M7QUFLVDs7O0FBRzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxtQkFBbUIsMkJBQTJCLDJEQUFHO0FBQ2pELFdBQVcsb0JBQW9CLDJEQUFHO0FBQ2xDO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsc0NBQXNDLGdFQUFhO0FBQ25EO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvdGFibGUtcHJvamVjdHMtdG9vbHMuanM/NzQ4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBtb2RlbHMsXG4gIGNzcyxcbn0gZnJvbSAnLi4vbW9kdWxlcy9tb2R1bGVzLWNvbmZpZy5qcyc7XG5pbXBvcnQge1xuICB1bmVzY2FwZV9odG1sLFxuICBmZXRjaFNldHRpbmdzLFxuICBleGVjX2hhbmRsZXJzXG59IGZyb20gJy4uL21vZHVsZXMvdXRpbHMuanMnO1xuXG5cbmZ1bmN0aW9uIEltcG9ydExpc3Qoc3RhdGUsIGF0dGFjaCA9IG51bGwpIHtcbiAgY29uc3Qgcm93aW1wb3J0ZWQgPSAtMTtcbiAgY29uc3Qgc2VsZWN0aW1wb3J0cz1bXTtcbiAgY29uc3QgaW1wb3J0aW5kZXhlcz1bXTtcbiAgY29uc3QgY2VsbGlkID0gc3RhdGUuZ2V0Q2VsbElkKHN0YXRlLmNlbGxpZG5hbWUpO1xuICAvLyBkaXNwbGF5IG9ubHkgbGluZXMgd2l0aCBmaWVsZHMgdmFsdWVzIGVxdWFscyB0byByZWNvcmQgZmllbGRzIHZhbHVlcyAtIGNyaXRlcmlhIGlzIGEgbGlzdCBvZiBjZWxsbmFtZXNcbiAgY29uc3QgY3JpdGVyaWFfbmFtZXMgPSBbJ2luc3RydW1lbnQnLCAnYWNjZXNzJ107XG4gIGNvbnN0IGNyaXRlcmlhX2lkcyA9IFtdO1xuICBjcml0ZXJpYV9uYW1lcy5mb3JFYWNoKGNvbG5hbWUgPT4ge1xuICAgICAgY29uc3QgaW5kZXggPSBzdGF0ZS5nZXRDZWxsSWQoY29sbmFtZSk7XG4gICAgICBpZiAoaW5kZXggPiAtMSkgY3JpdGVyaWFfaWRzLnB1c2goaW5kZXgpO1xuICAgIH0pO1xuICBzdGF0ZS50b2dnbGUgPSBmdW5jdGlvbih0ciwgdmFsdWUsIGlkeCwgZmlsdGVyZWQ9ZmFsc2UpIHtcbiAgIGlmIChmaWx0ZXJlZCkgeyBpZih2YWx1ZSkgdHIuY2xhc3NMaXN0LmFkZChjc3MuaGlkZSk7XG4gICAgIGVsc2Uge3RyLmNsYXNzTGlzdC5yZW1vdmUoY3NzLmhpZGUpO1xuICAgIC8vIHN0YXRlLmRhdGFJbXBvcnQucmVzZXRTZWxlY3Rvcih0cik7XG4gICAgfVxuICAgICB9IGVsc2UgdHIuaGlkZGVuID0gdmFsdWU7XG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiBjb21waWxlUHJvamVjdFJlY29yZHMobmV3b25lID0gMCkge1xuICAgIGNvbnN0IHRzID0gc3RhdGUuZGF0YUltcG9ydC5pbXBvcnR6b25lLnRvbXNlbGVjdDtcbiAgICBjb25zdCBpZHMgPSAodHMpID8gdHMuaXRlbXMgOiBBcnJheS5mcm9tKHN0YXRlLmRhdGFJbXBvcnQuaW1wb3J0em9uZS5zZWxlY3RlZE9wdGlvbnMpLm1hcChvcHRpb24gPT4gb3B0aW9uLnZhbHVlKTtcbiAgICBpZiAoaWRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XG4gICAgY29uc3QgdXJsID0gJy9ndWkvY29sbGVjdGlvbi9hZ2dyZWdhdGVkJyArICc/JyArIG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgcHJvamVjdF9pZHM6IGlkcy5qb2luKCcsJyksXG4gICAgICBzaW11bGF0ZTpcInlcIlxuICAgIH0pO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBmZXRjaFNldHRpbmdzKHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgfSkpXG4gICAgbGV0IHJlc3VsdHMgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc3QgZXhjbHVkZWQgPSByZXN1bHRzLmV4Y2x1ZGVkO1xuICAgIGRlbGV0ZSByZXN1bHRzLmV4Y2x1ZGVkO1xuICAgIGNvbnN0IGNvbGxhdG9yID0gbmV3IEludGwuQ29sbGF0b3IodW5kZWZpbmVkLCB7XG4gICAgICBudW1lcmljOiB0cnVlLFxuICAgICAgc2Vuc2l0aXZpdHk6ICdiYXNlJ1xuICAgIH0pXG4gICBjb25zdCBrZXk9J2NyZWF0b3InO1xuICAgaWYgKG5ld29uZSA9PT0gMCAmJiBPYmplY3Qua2V5cyhyZXN1bHRzKS5pbmRleE9mKGtleStcIl91c2Vyc1wiKSA+PSAwKSB7XG4gICAgICBjb25zdCB1c2VycyA9IHJlc3VsdHNba2V5K1wiX3VzZXJzXCJdLm1hcCh1ID0+ICh7XG4gICAgICAgIGtleTogdS5pZCxcbiAgICAgICAgdmFsdWU6IHUubmFtZSxcbiAgICAgICAgdGV4dDogdS5uYW1lICsgJyAnICsgdS5lbWFpbFxuICAgICAgfSkpO1xuICAgICAgcmVzdWx0c1trZXkrXCJfcGVyc29uc1wiXSA9IHVzZXJzXG4gICAgICBkZWxldGUgcmVzdWx0c1trZXkrXCJfdXNlcnNcIl07XG4gICAgICByZXN1bHRzW2tleStcIl9wZXJzb25zXCJdLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgcmV0dXJuIGNvbGxhdG9yLmNvbXBhcmUoYS52YWx1ZSwgYi52YWx1ZSlcbiAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cblxuICBmdW5jdGlvbiBpbml0TGlzdCgpIHtcbiAgICBpZiAoIXN0YXRlLmRhdGFJbXBvcnQpIHJldHVybjtcbiAgICBjb25zdCBwbHVnaW4gPSBzdGF0ZS5kYXRhSW1wb3J0O1xuICAgIGlmIChwbHVnaW4udGFyZ2V0aW1wb3J0KSB7XG4gICAgICBsZXQgc2VsZWN0ZWQgPSBudWxsO1xuICAgICAgaWYgKHBsdWdpbi50YXJnZXRpbXBvcnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2VsZWN0Jykge1xuICAgICAgICBzZWxlY3RlZCA9IFsuLi5wbHVnaW4udGFyZ2V0aW1wb3J0Lm9wdGlvbnNdLmZpbHRlcihvcHQgPT4gb3B0LnNlbGVjdGVkKTtcbiAgICAgICAgc2VsZWN0ZWQgPSBzZWxlY3RlZC5tYXAob3B0ID0+IHBhcnNlSW50KG9wdC52YWx1ZSkpO1xuICAgICAgfSBlbHNlIHNlbGVjdGVkID0gcGx1Z2luLnRhcmdldGltcG9ydC52YWx1ZTtcbiAgICAgIHBsdWdpbi5zZWxlY3RvcnMuZm9yRWFjaChzZWxlY3RvciA9PiB7XG4gICAgICAgIGlmIChzZWxlY3RlZC5pbmRleE9mKHBhcnNlSW50KHNlbGVjdG9yLnZhbHVlKSkgPj0gMCkgc2VsZWN0b3IuY2xpY2soKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGZpbHRlckJ5UmVjb3JkKHJlY29yZCwgcmVjb3JkaW5kZXgpIHtcbiAgICBpZiAoY3JpdGVyaWFfaWRzLmxlbmd0aCAhPT0gY3JpdGVyaWFfbmFtZXMubGVuZ3RoKSByZXR1cm47XG4gICAgbGV0IGRhdGFzID0gc3RhdGUuZ3JpZC5kYXRhO1xuICAgIHNlbGVjdGltcG9ydHMucHVzaChyZWNvcmRbY2VsbGlkXSk7XG4gICAgZGF0YXMgPSBkYXRhcy5maWx0ZXIoKHJvdywgaSkgPT4ge1xuICAgICAgbGV0IGNvbXBhcmUgPSB0cnVlO1xuICAgICAgaWYgKGkgIT09IHJlY29yZGluZGV4KSBjcml0ZXJpYV9pZHMuZm9yRWFjaChpZHggPT4ge1xuICAgICAgICBjb21wYXJlID0gY29tcGFyZSAmJiAocmVjb3JkW2lkeF0gPT09IHJvd1tpZHhdKTtcbiAgICAgIH0pO1xuICAgICAgY29uc3QgdmFsID0gU3RyaW5nKHJvd1tjZWxsaWRdKVxuICAgICAgaWYgKGNvbXBhcmUgJiYgaW1wb3J0aW5kZXhlcy5pbmRleE9mKHZhbCk9PT0tMSkgaW1wb3J0aW5kZXhlcy5wdXNoKHZhbCk7XG4gICAgICByZXR1cm4gY29tcGFyZTtcbiAgICB9KTtcbiAgICBzdGF0ZS5kaXNwbGF5U2VsZWN0ZWQoY3JpdGVyaWFfaWRzLCBpbXBvcnRpbmRleGVzLCBjZWxsaWQsdHJ1ZSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldEZpbHRlcihyZWNvcmQsIHJlY29yZGluZGV4KSB7XG4gICAgbGV0IGluZGV4ID0gc2VsZWN0aW1wb3J0cy5pbmRleE9mKHJlY29yZFtjZWxsaWRdKTtcbiAgICBpZiAoaW5kZXggPiAtMSkgIHNlbGVjdGltcG9ydHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICBpbmRleCA9IGltcG9ydGluZGV4ZXMuaW5kZXhPZihTdHJpbmcocmVjb3JkW2NlbGxpZF0pKTtcbiAgICBpZiAoaW5kZXggPiAtMSkgIGltcG9ydGluZGV4ZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICBpZiAoc2VsZWN0aW1wb3J0cy5sZW5ndGg9PT0wKSBzdGF0ZS5kaXNwbGF5U2VsZWN0ZWQoW10sW10sIGNlbGxpZCwgdHJ1ZSk7XG4gICAgZWxzZSBzdGF0ZS5kaXNwbGF5U2VsZWN0ZWQoY3JpdGVyaWFfaWRzLCBpbXBvcnRpbmRleGVzLCBjZWxsaWQsdHJ1ZSk7XG4gIH1cblxuICBpZiAoYXR0YWNoKSB7XG4gICAgYXR0YWNoLmZpbHRlckJ5UmVjb3JkID0gZmlsdGVyQnlSZWNvcmQ7XG4gICAgYXR0YWNoLnJlc2V0RmlsdGVyID0gcmVzZXRGaWx0ZXI7XG4gICAgYXR0YWNoLmNvbXBpbGVQcm9qZWN0UmVjb3JkcyA9IGNvbXBpbGVQcm9qZWN0UmVjb3JkcztcbiAgICBhdHRhY2guaW5pdExpc3QgPSBpbml0TGlzdDtcbiAgfSBlbHNlIHJldHVybiB7XG4gICAgZmlsdGVyQnlSZWNvcmQsXG4gICAgcmVzZXRGaWx0ZXIsXG4gICAgaW5pdExpc3RcbiAgfVxuXG59XG5leHBvcnQge1xuICBJbXBvcnRMaXN0XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/table-projects-tools.js\n")}}]);