/*! For license information please see src_modules_job-monitor_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_job-monitor_js"],{"./src/modules/job-monitor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jobMonitor: () => (/* binding */ jobMonitor)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\nfunction jobMonitor(item) {\n  const jobid = item.dataset.id;\n  const jobStates = {\n    E: 'Error',\n    F: 'Done',\n    R: 'Running',\n    A: 'Question',\n    P: 'Waiting'\n  }\n  if (!jobid) return;\n  if (item.dataset.state && ['E', 'F', 'A'].indexOf(item.dataset.state) >= 0) return;\n  const divstate = document.getElementById(\"divstate\");\n  let responsediv = document.getElementById(\"responsediv\");\n  if (responsediv === null) {\n    responsediv = document.createElement('div');\n    responsediv.id = 'responsediv';\n    item.prepend(responsediv);\n  }\n\n  let stop = false;\n  let cl = 'is-pending';\n  const progress_bar = function(state, percent = 0, msg = \"\") {\n    if (!percent) percent = 0;\n    const progressbar = document.getElementById('progressbar');\n    responsediv.textContent = msg;\n    if (divstate) divstate.textContent = msg;\n    if (progressbar !== null) {\n      progressbar.firstChild.textContent = percent + '%';\n      const progressbarsz = progressbar.querySelector('.percent');\n      if (progressbarsz) {\n        progressbarsz.classList.remove(cl);\n        cl = 'is-running';\n        switch (state) {\n          case 'E':\n            cl = 'is-error';\n            break;\n          case 'F':\n            cl = 'is-done';\n            break;\n          case 'A':\n            cl = 'is-warning';\n            break;\n        }\n        if (!progressbarsz.classList.contains(cl)) progressbarsz.classList.add(cl);\n        progressbarsz.style.width = percent + '%';\n\n      }\n    }\n  }\n\n  const spinner_icon = function(state) {\n    const spinner = document.getElementById('spinner-icon');\n    if (spinner === null) return;\n    switch (state) {\n      case 'R':\n      case 'P':\n        if (spinner) spinner.classList.remove('hidden');\n        const svg = spinner.querySelector('svg');\n        if (svg === null) spinner.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.html_spinner)('text-stone-700'));\n        break;\n      default:\n        spinner.remove();\n        break;\n    }\n  }\n\n  const display_errors = (errors, jobstate) => {\n    if (!errors || errors.length === 0) return;\n    if (errors.length && jobstate != 'E' && jobstate !== 'F') {\n      const divalert = responsediv.querySelector('.alert');\n      if (divalert === null) responsediv.insertAdjacentHTML('beforeend', `<div class=\"alert danger inverse\" data-dismissible=\"true\">${errors.join(`<br>`)}</div> `);\n      else divalert.insertAdjacentHTML('beforeend', errors.join(`<br>`));\n    }\n  }\n  const display_next = async (url) => {\n    fetch(url, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)()).then(response => response.text()).then(response => {\n      responsediv.insertAdjacentHTML('beforeend', response);\n    });\n\n  }\n  const go_next = (url, title, type = \"secondary\") => {\n    return `<a href=\"${url}\" class=\"button  is-${type}\">${title}</a>`;\n  }\n  const set_jobstate = (state) => {\n    if (!divstate) return;\n    divstate.innerText = jobStates[state];\n  }\n  let html = [];\n  const check_job_status = () => {\n    fetch(\"/gui/job/status/\" + jobid, _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings).then(response => response.json()).then(job => {\n\n      if (job) {\n        if (job.state) {\n          set_jobstate(job.state);\n          spinner_icon(job.state);\n          progress_bar(job.state, job.progress_pct, job.progress_msg);\n        }\n        switch (job.state) {\n          case \"A\":\n            // question\n            stop = true;\n            //window.location.href = window.location.origin + \"/Job/Question/\" + job.id;\n            responsediv.innerHTML = `Question waiting for an answer ` + go_next(window.location.origin + \"/Job/Question/\" + job.id, 'Go', 'warning')\n            break;\n          case \"F\":\n            stop = true;\n            if (job.finalaction) html.push(job.finalaction);\n            break;\n          case \"E\":\n            if (job.errors.length) {\n              display_errors(job.errors, job.state);\n            }\n            stop = true;\n            break;\n          case \"P\":\n            // pending\n            break;\n          case \"R\":\n            // running\n            display_errors(job.errors, job.state);\n            break;\n        }\n\n        if (job.state && job.state == \"E\" || (job.state == 'F' && !job.out)) {\n          if (responsediv) {\n            responsediv.insertAdjacentHTML('afterbegin', html.join(''));\n            responsediv.classList.remove('hidden');\n          }\n          return;\n        }\n      }\n      if (stop === false) setTimeout(check_job_status, 1000);\n\n      return;\n    }).catch((err) => {\n      console.log('err', err);\n    });\n  }\n  check_job_status();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9qb2ItbW9uaXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUc2Qjs7QUFFdEI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsK0RBQVk7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0lBQXNJLG9CQUFvQjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0VBQWE7QUFDNUI7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSx1QkFBdUIsSUFBSSxzQkFBc0IsS0FBSyxJQUFJLE1BQU07QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNERBQWE7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9qb2ItbW9uaXRvci5qcz8yMDUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGZldGNoU2V0dGluZ3MsXG4gIGh0bWxfc3Bpbm5lclxufSBmcm9tICcuLi9tb2R1bGVzL3V0aWxzLmpzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGpvYk1vbml0b3IoaXRlbSkge1xuICBjb25zdCBqb2JpZCA9IGl0ZW0uZGF0YXNldC5pZDtcbiAgY29uc3Qgam9iU3RhdGVzID0ge1xuICAgIEU6ICdFcnJvcicsXG4gICAgRjogJ0RvbmUnLFxuICAgIFI6ICdSdW5uaW5nJyxcbiAgICBBOiAnUXVlc3Rpb24nLFxuICAgIFA6ICdXYWl0aW5nJ1xuICB9XG4gIGlmICgham9iaWQpIHJldHVybjtcbiAgaWYgKGl0ZW0uZGF0YXNldC5zdGF0ZSAmJiBbJ0UnLCAnRicsICdBJ10uaW5kZXhPZihpdGVtLmRhdGFzZXQuc3RhdGUpID49IDApIHJldHVybjtcbiAgY29uc3QgZGl2c3RhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRpdnN0YXRlXCIpO1xuICBsZXQgcmVzcG9uc2VkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlc3BvbnNlZGl2XCIpO1xuICBpZiAocmVzcG9uc2VkaXYgPT09IG51bGwpIHtcbiAgICByZXNwb25zZWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHJlc3BvbnNlZGl2LmlkID0gJ3Jlc3BvbnNlZGl2JztcbiAgICBpdGVtLnByZXBlbmQocmVzcG9uc2VkaXYpO1xuICB9XG5cbiAgbGV0IHN0b3AgPSBmYWxzZTtcbiAgbGV0IGNsID0gJ2lzLXBlbmRpbmcnO1xuICBjb25zdCBwcm9ncmVzc19iYXIgPSBmdW5jdGlvbihzdGF0ZSwgcGVyY2VudCA9IDAsIG1zZyA9IFwiXCIpIHtcbiAgICBpZiAoIXBlcmNlbnQpIHBlcmNlbnQgPSAwO1xuICAgIGNvbnN0IHByb2dyZXNzYmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2dyZXNzYmFyJyk7XG4gICAgcmVzcG9uc2VkaXYudGV4dENvbnRlbnQgPSBtc2c7XG4gICAgaWYgKGRpdnN0YXRlKSBkaXZzdGF0ZS50ZXh0Q29udGVudCA9IG1zZztcbiAgICBpZiAocHJvZ3Jlc3NiYXIgIT09IG51bGwpIHtcbiAgICAgIHByb2dyZXNzYmFyLmZpcnN0Q2hpbGQudGV4dENvbnRlbnQgPSBwZXJjZW50ICsgJyUnO1xuICAgICAgY29uc3QgcHJvZ3Jlc3NiYXJzeiA9IHByb2dyZXNzYmFyLnF1ZXJ5U2VsZWN0b3IoJy5wZXJjZW50Jyk7XG4gICAgICBpZiAocHJvZ3Jlc3NiYXJzeikge1xuICAgICAgICBwcm9ncmVzc2JhcnN6LmNsYXNzTGlzdC5yZW1vdmUoY2wpO1xuICAgICAgICBjbCA9ICdpcy1ydW5uaW5nJztcbiAgICAgICAgc3dpdGNoIChzdGF0ZSkge1xuICAgICAgICAgIGNhc2UgJ0UnOlxuICAgICAgICAgICAgY2wgPSAnaXMtZXJyb3InO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnRic6XG4gICAgICAgICAgICBjbCA9ICdpcy1kb25lJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ0EnOlxuICAgICAgICAgICAgY2wgPSAnaXMtd2FybmluZyc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXByb2dyZXNzYmFyc3ouY2xhc3NMaXN0LmNvbnRhaW5zKGNsKSkgcHJvZ3Jlc3NiYXJzei5jbGFzc0xpc3QuYWRkKGNsKTtcbiAgICAgICAgcHJvZ3Jlc3NiYXJzei5zdHlsZS53aWR0aCA9IHBlcmNlbnQgKyAnJSc7XG5cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCBzcGlubmVyX2ljb24gPSBmdW5jdGlvbihzdGF0ZSkge1xuICAgIGNvbnN0IHNwaW5uZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3Bpbm5lci1pY29uJyk7XG4gICAgaWYgKHNwaW5uZXIgPT09IG51bGwpIHJldHVybjtcbiAgICBzd2l0Y2ggKHN0YXRlKSB7XG4gICAgICBjYXNlICdSJzpcbiAgICAgIGNhc2UgJ1AnOlxuICAgICAgICBpZiAoc3Bpbm5lcikgc3Bpbm5lci5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgY29uc3Qgc3ZnID0gc3Bpbm5lci5xdWVyeVNlbGVjdG9yKCdzdmcnKTtcbiAgICAgICAgaWYgKHN2ZyA9PT0gbnVsbCkgc3Bpbm5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBodG1sX3NwaW5uZXIoJ3RleHQtc3RvbmUtNzAwJykpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHNwaW5uZXIucmVtb3ZlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGRpc3BsYXlfZXJyb3JzID0gKGVycm9ycywgam9ic3RhdGUpID0+IHtcbiAgICBpZiAoIWVycm9ycyB8fCBlcnJvcnMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgaWYgKGVycm9ycy5sZW5ndGggJiYgam9ic3RhdGUgIT0gJ0UnICYmIGpvYnN0YXRlICE9PSAnRicpIHtcbiAgICAgIGNvbnN0IGRpdmFsZXJ0ID0gcmVzcG9uc2VkaXYucXVlcnlTZWxlY3RvcignLmFsZXJ0Jyk7XG4gICAgICBpZiAoZGl2YWxlcnQgPT09IG51bGwpIHJlc3BvbnNlZGl2Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgYDxkaXYgY2xhc3M9XCJhbGVydCBkYW5nZXIgaW52ZXJzZVwiIGRhdGEtZGlzbWlzc2libGU9XCJ0cnVlXCI+JHtlcnJvcnMuam9pbihgPGJyPmApfTwvZGl2PiBgKTtcbiAgICAgIGVsc2UgZGl2YWxlcnQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBlcnJvcnMuam9pbihgPGJyPmApKTtcbiAgICB9XG4gIH1cbiAgY29uc3QgZGlzcGxheV9uZXh0ID0gYXN5bmMgKHVybCkgPT4ge1xuICAgIGZldGNoKHVybCwgZmV0Y2hTZXR0aW5ncygpKS50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSkudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICByZXNwb25zZWRpdi5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHJlc3BvbnNlKTtcbiAgICB9KTtcblxuICB9XG4gIGNvbnN0IGdvX25leHQgPSAodXJsLCB0aXRsZSwgdHlwZSA9IFwic2Vjb25kYXJ5XCIpID0+IHtcbiAgICByZXR1cm4gYDxhIGhyZWY9XCIke3VybH1cIiBjbGFzcz1cImJ1dHRvbiAgaXMtJHt0eXBlfVwiPiR7dGl0bGV9PC9hPmA7XG4gIH1cbiAgY29uc3Qgc2V0X2pvYnN0YXRlID0gKHN0YXRlKSA9PiB7XG4gICAgaWYgKCFkaXZzdGF0ZSkgcmV0dXJuO1xuICAgIGRpdnN0YXRlLmlubmVyVGV4dCA9IGpvYlN0YXRlc1tzdGF0ZV07XG4gIH1cbiAgbGV0IGh0bWwgPSBbXTtcbiAgY29uc3QgY2hlY2tfam9iX3N0YXR1cyA9ICgpID0+IHtcbiAgICBmZXRjaChcIi9ndWkvam9iL3N0YXR1cy9cIiArIGpvYmlkLCBmZXRjaFNldHRpbmdzKS50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSkudGhlbihqb2IgPT4ge1xuXG4gICAgICBpZiAoam9iKSB7XG4gICAgICAgIGlmIChqb2Iuc3RhdGUpIHtcbiAgICAgICAgICBzZXRfam9ic3RhdGUoam9iLnN0YXRlKTtcbiAgICAgICAgICBzcGlubmVyX2ljb24oam9iLnN0YXRlKTtcbiAgICAgICAgICBwcm9ncmVzc19iYXIoam9iLnN0YXRlLCBqb2IucHJvZ3Jlc3NfcGN0LCBqb2IucHJvZ3Jlc3NfbXNnKTtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKGpvYi5zdGF0ZSkge1xuICAgICAgICAgIGNhc2UgXCJBXCI6XG4gICAgICAgICAgICAvLyBxdWVzdGlvblxuICAgICAgICAgICAgc3RvcCA9IHRydWU7XG4gICAgICAgICAgICAvL3dpbmRvdy5sb2NhdGlvbi5ocmVmID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArIFwiL0pvYi9RdWVzdGlvbi9cIiArIGpvYi5pZDtcbiAgICAgICAgICAgIHJlc3BvbnNlZGl2LmlubmVySFRNTCA9IGBRdWVzdGlvbiB3YWl0aW5nIGZvciBhbiBhbnN3ZXIgYCArIGdvX25leHQod2luZG93LmxvY2F0aW9uLm9yaWdpbiArIFwiL0pvYi9RdWVzdGlvbi9cIiArIGpvYi5pZCwgJ0dvJywgJ3dhcm5pbmcnKVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkZcIjpcbiAgICAgICAgICAgIHN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKGpvYi5maW5hbGFjdGlvbikgaHRtbC5wdXNoKGpvYi5maW5hbGFjdGlvbik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiRVwiOlxuICAgICAgICAgICAgaWYgKGpvYi5lcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIGRpc3BsYXlfZXJyb3JzKGpvYi5lcnJvcnMsIGpvYi5zdGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdG9wID0gdHJ1ZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJQXCI6XG4gICAgICAgICAgICAvLyBwZW5kaW5nXG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiUlwiOlxuICAgICAgICAgICAgLy8gcnVubmluZ1xuICAgICAgICAgICAgZGlzcGxheV9lcnJvcnMoam9iLmVycm9ycywgam9iLnN0YXRlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGpvYi5zdGF0ZSAmJiBqb2Iuc3RhdGUgPT0gXCJFXCIgfHwgKGpvYi5zdGF0ZSA9PSAnRicgJiYgIWpvYi5vdXQpKSB7XG4gICAgICAgICAgaWYgKHJlc3BvbnNlZGl2KSB7XG4gICAgICAgICAgICByZXNwb25zZWRpdi5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBodG1sLmpvaW4oJycpKTtcbiAgICAgICAgICAgIHJlc3BvbnNlZGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdG9wID09PSBmYWxzZSkgc2V0VGltZW91dChjaGVja19qb2Jfc3RhdHVzLCAxMDAwKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdlcnInLCBlcnIpO1xuICAgIH0pO1xuICB9XG4gIGNoZWNrX2pvYl9zdGF0dXMoKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/job-monitor.js\n")}}]);