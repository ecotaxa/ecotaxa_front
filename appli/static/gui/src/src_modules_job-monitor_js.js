/*! For license information please see src_modules_job-monitor_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_job-monitor_js"],{"./src/modules/job-monitor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jobMonitor: () => (/* binding */ jobMonitor)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n\n\n\nfunction jobMonitor(item) {\n  const jobid = item.dataset.id;\n  const jobStates = {\n    E: 'Error',\n    F: 'Done',\n    R: 'Running',\n    A: 'Question',\n    P: 'Waiting'\n  }\n  if (!jobid) return;\n  if (item.dataset.state && ['E', 'F', 'A'].indexOf(item.dataset.state) >= 0) return;\n  const divstate = document.getElementById(\"divstate\");\n  let responsediv = document.getElementById(\"responsediv\");\n  if (responsediv === null) {\n    responsediv = document.createElement('div');\n    responsediv.id = 'responsediv';\n    item.prepend(responsediv);\n  }\n\n\n  let stop = false;\n  let cl = 'is-pending';\n  const progress_bar = function(state, percent = 0, msg = \"\") {\n    if (!percent) percent = 0;\n    const progressbar = document.getElementById('progressbar');\n    responsediv.textContent = msg;\n    if (divstate) divstate.textContent = msg;\n    if (progressbar !== null) {\n      progressbar.firstChild.textContent = percent + '%';\n      const progressbarsz = progressbar.querySelector('.percent');\n      if (progressbarsz) {\n        progressbarsz.classList.remove(cl);\n        cl = 'is-running';\n        switch (state) {\n          case 'E':\n            cl = 'is-error';\n            break;\n          case 'F':\n            cl = 'is-done';\n            break;\n          case 'A':\n            cl = 'is-warning';\n            break;\n        }\n        if (!progressbarsz.classList.contains(cl)) progressbarsz.classList.add(cl);\n        progressbarsz.style.width = percent + '%';\n\n      }\n    }\n  }\n\n  const spinner_icon = function(state) {\n    const spinner = document.getElementById('spinner-icon');\n    if (spinner === null) return;\n    switch (state) {\n      case 'R':\n      case 'P':\n        if (spinner) spinner.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n        const svg = spinner.querySelector('svg');\n        if (svg === null) spinner.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.html_spinner)('text-stone-700'));\n        break;\n      default:\n        spinner.remove();\n        break;\n    }\n  }\n\n  const display_errors = (errors, jobstate) => {\n    if (!errors || errors.length === 0) return;\n    if (errors.length && jobstate != 'E' && jobstate !== 'F') {\n      const divalert = responsediv.querySelector('.alert');\n      if (divalert === null) responsediv.insertAdjacentHTML('beforeend', `<div class=\"alert danger inverse\" data-dismissible=\"true\">${errors.join(`<br>`)}</div> `);\n      else divalert.insertAdjacentHTML('beforeend', errors.join(`<br>`));\n    }\n  }\n\n  const go_next = (url, title, type = \"secondary\") => {\n    return `<a href=\"${url}\" class=\"button  is-${type}\">${title}</a>`;\n  }\n  const set_jobstate = (state) => {\n    if (!divstate) return;\n    divstate.innerText = jobStates[state];\n  }\n  let html = [];\n  const check_job_status = () => {\n    fetch(\"/gui/job/status/\" + jobid, _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings).then(response => response.json()).then(job => {\n\n      if (job) {\n        if (job.state) {\n          set_jobstate(job.state);\n          spinner_icon(job.state);\n          progress_bar(job.state, job.progress_pct, job.progress_msg);\n        }\n\n        switch (job.state) {\n          case \"A\":\n            // question\n            stop = true;\n            //window.location.href = window.location.origin + \"/Job/Question/\" + job.id;\n            responsediv.innerHTML = `Question waiting for an answer ` + go_next(window.location.origin + \"/Job/Question/\" + job.id, 'Go', 'warning')\n            break;\n          case \"F\":\n            stop = true;\n            if (job.finalaction) html.push(job.finalaction);\n            break;\n          case \"E\":\n            if (job.errors.length) {\n              display_errors(job.errors, job.state);\n            }\n            stop = true;\n            break;\n          case \"P\":\n            // pending\n            break;\n          case \"R\":\n            // running\n            display_errors(job.errors, job.state);\n            break;\n        }\n\n        if (job.state && job.state === \"E\" || job.state === 'F' || job.type === \"Prediction\") {\n          //  display_final(job.finalaction);\n          if (responsediv) {\n            responsediv.insertAdjacentHTML('afterbegin', html.join(''));\n            responsediv.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.hide);\n          }\n          return;\n        }\n      }\n      if (stop === false) setTimeout(check_job_status, 1000);\n\n      return;\n    }).catch((err) => {\n      console.log('err', err);\n    });\n  }\n  check_job_status();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9qb2ItbW9uaXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFHNkI7QUFHUzs7QUFFL0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsMkRBQUc7QUFDakQ7QUFDQSxtRUFBbUUsK0RBQVk7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0lBQXNJLG9CQUFvQjtBQUMxSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsSUFBSSxzQkFBc0IsS0FBSyxJQUFJLE1BQU07QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsNERBQWE7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywyREFBRztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL2pvYi1tb25pdG9yLmpzPzIwNTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZmV0Y2hTZXR0aW5ncyxcbiAgaHRtbF9zcGlubmVyXG59IGZyb20gJy4uL21vZHVsZXMvdXRpbHMuanMnO1xuaW1wb3J0IHtcbiAgY3NzXG59IGZyb20gJy4uL21vZHVsZXMvbW9kdWxlcy1jb25maWcuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gam9iTW9uaXRvcihpdGVtKSB7XG4gIGNvbnN0IGpvYmlkID0gaXRlbS5kYXRhc2V0LmlkO1xuICBjb25zdCBqb2JTdGF0ZXMgPSB7XG4gICAgRTogJ0Vycm9yJyxcbiAgICBGOiAnRG9uZScsXG4gICAgUjogJ1J1bm5pbmcnLFxuICAgIEE6ICdRdWVzdGlvbicsXG4gICAgUDogJ1dhaXRpbmcnXG4gIH1cbiAgaWYgKCFqb2JpZCkgcmV0dXJuO1xuICBpZiAoaXRlbS5kYXRhc2V0LnN0YXRlICYmIFsnRScsICdGJywgJ0EnXS5pbmRleE9mKGl0ZW0uZGF0YXNldC5zdGF0ZSkgPj0gMCkgcmV0dXJuO1xuICBjb25zdCBkaXZzdGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGl2c3RhdGVcIik7XG4gIGxldCByZXNwb25zZWRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzcG9uc2VkaXZcIik7XG4gIGlmIChyZXNwb25zZWRpdiA9PT0gbnVsbCkge1xuICAgIHJlc3BvbnNlZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcmVzcG9uc2VkaXYuaWQgPSAncmVzcG9uc2VkaXYnO1xuICAgIGl0ZW0ucHJlcGVuZChyZXNwb25zZWRpdik7XG4gIH1cblxuXG4gIGxldCBzdG9wID0gZmFsc2U7XG4gIGxldCBjbCA9ICdpcy1wZW5kaW5nJztcbiAgY29uc3QgcHJvZ3Jlc3NfYmFyID0gZnVuY3Rpb24oc3RhdGUsIHBlcmNlbnQgPSAwLCBtc2cgPSBcIlwiKSB7XG4gICAgaWYgKCFwZXJjZW50KSBwZXJjZW50ID0gMDtcbiAgICBjb25zdCBwcm9ncmVzc2JhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcm9ncmVzc2JhcicpO1xuICAgIHJlc3BvbnNlZGl2LnRleHRDb250ZW50ID0gbXNnO1xuICAgIGlmIChkaXZzdGF0ZSkgZGl2c3RhdGUudGV4dENvbnRlbnQgPSBtc2c7XG4gICAgaWYgKHByb2dyZXNzYmFyICE9PSBudWxsKSB7XG4gICAgICBwcm9ncmVzc2Jhci5maXJzdENoaWxkLnRleHRDb250ZW50ID0gcGVyY2VudCArICclJztcbiAgICAgIGNvbnN0IHByb2dyZXNzYmFyc3ogPSBwcm9ncmVzc2Jhci5xdWVyeVNlbGVjdG9yKCcucGVyY2VudCcpO1xuICAgICAgaWYgKHByb2dyZXNzYmFyc3opIHtcbiAgICAgICAgcHJvZ3Jlc3NiYXJzei5jbGFzc0xpc3QucmVtb3ZlKGNsKTtcbiAgICAgICAgY2wgPSAnaXMtcnVubmluZyc7XG4gICAgICAgIHN3aXRjaCAoc3RhdGUpIHtcbiAgICAgICAgICBjYXNlICdFJzpcbiAgICAgICAgICAgIGNsID0gJ2lzLWVycm9yJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ0YnOlxuICAgICAgICAgICAgY2wgPSAnaXMtZG9uZSc7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICdBJzpcbiAgICAgICAgICAgIGNsID0gJ2lzLXdhcm5pbmcnO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFwcm9ncmVzc2JhcnN6LmNsYXNzTGlzdC5jb250YWlucyhjbCkpIHByb2dyZXNzYmFyc3ouY2xhc3NMaXN0LmFkZChjbCk7XG4gICAgICAgIHByb2dyZXNzYmFyc3ouc3R5bGUud2lkdGggPSBwZXJjZW50ICsgJyUnO1xuXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc3Bpbm5lcl9pY29uID0gZnVuY3Rpb24oc3RhdGUpIHtcbiAgICBjb25zdCBzcGlubmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NwaW5uZXItaWNvbicpO1xuICAgIGlmIChzcGlubmVyID09PSBudWxsKSByZXR1cm47XG4gICAgc3dpdGNoIChzdGF0ZSkge1xuICAgICAgY2FzZSAnUic6XG4gICAgICBjYXNlICdQJzpcbiAgICAgICAgaWYgKHNwaW5uZXIpIHNwaW5uZXIuY2xhc3NMaXN0LnJlbW92ZShjc3MuaGlkZSk7XG4gICAgICAgIGNvbnN0IHN2ZyA9IHNwaW5uZXIucXVlcnlTZWxlY3Rvcignc3ZnJyk7XG4gICAgICAgIGlmIChzdmcgPT09IG51bGwpIHNwaW5uZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgaHRtbF9zcGlubmVyKCd0ZXh0LXN0b25lLTcwMCcpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzcGlubmVyLnJlbW92ZSgpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBjb25zdCBkaXNwbGF5X2Vycm9ycyA9IChlcnJvcnMsIGpvYnN0YXRlKSA9PiB7XG4gICAgaWYgKCFlcnJvcnMgfHwgZXJyb3JzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGlmIChlcnJvcnMubGVuZ3RoICYmIGpvYnN0YXRlICE9ICdFJyAmJiBqb2JzdGF0ZSAhPT0gJ0YnKSB7XG4gICAgICBjb25zdCBkaXZhbGVydCA9IHJlc3BvbnNlZGl2LnF1ZXJ5U2VsZWN0b3IoJy5hbGVydCcpO1xuICAgICAgaWYgKGRpdmFsZXJ0ID09PSBudWxsKSByZXNwb25zZWRpdi5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGA8ZGl2IGNsYXNzPVwiYWxlcnQgZGFuZ2VyIGludmVyc2VcIiBkYXRhLWRpc21pc3NpYmxlPVwidHJ1ZVwiPiR7ZXJyb3JzLmpvaW4oYDxicj5gKX08L2Rpdj4gYCk7XG4gICAgICBlbHNlIGRpdmFsZXJ0Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgZXJyb3JzLmpvaW4oYDxicj5gKSk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgZ29fbmV4dCA9ICh1cmwsIHRpdGxlLCB0eXBlID0gXCJzZWNvbmRhcnlcIikgPT4ge1xuICAgIHJldHVybiBgPGEgaHJlZj1cIiR7dXJsfVwiIGNsYXNzPVwiYnV0dG9uICBpcy0ke3R5cGV9XCI+JHt0aXRsZX08L2E+YDtcbiAgfVxuICBjb25zdCBzZXRfam9ic3RhdGUgPSAoc3RhdGUpID0+IHtcbiAgICBpZiAoIWRpdnN0YXRlKSByZXR1cm47XG4gICAgZGl2c3RhdGUuaW5uZXJUZXh0ID0gam9iU3RhdGVzW3N0YXRlXTtcbiAgfVxuICBsZXQgaHRtbCA9IFtdO1xuICBjb25zdCBjaGVja19qb2Jfc3RhdHVzID0gKCkgPT4ge1xuICAgIGZldGNoKFwiL2d1aS9qb2Ivc3RhdHVzL1wiICsgam9iaWQsIGZldGNoU2V0dGluZ3MpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKS50aGVuKGpvYiA9PiB7XG5cbiAgICAgIGlmIChqb2IpIHtcbiAgICAgICAgaWYgKGpvYi5zdGF0ZSkge1xuICAgICAgICAgIHNldF9qb2JzdGF0ZShqb2Iuc3RhdGUpO1xuICAgICAgICAgIHNwaW5uZXJfaWNvbihqb2Iuc3RhdGUpO1xuICAgICAgICAgIHByb2dyZXNzX2Jhcihqb2Iuc3RhdGUsIGpvYi5wcm9ncmVzc19wY3QsIGpvYi5wcm9ncmVzc19tc2cpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoIChqb2Iuc3RhdGUpIHtcbiAgICAgICAgICBjYXNlIFwiQVwiOlxuICAgICAgICAgICAgLy8gcXVlc3Rpb25cbiAgICAgICAgICAgIHN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgLy93aW5kb3cubG9jYXRpb24uaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyBcIi9Kb2IvUXVlc3Rpb24vXCIgKyBqb2IuaWQ7XG4gICAgICAgICAgICByZXNwb25zZWRpdi5pbm5lckhUTUwgPSBgUXVlc3Rpb24gd2FpdGluZyBmb3IgYW4gYW5zd2VyIGAgKyBnb19uZXh0KHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyBcIi9Kb2IvUXVlc3Rpb24vXCIgKyBqb2IuaWQsICdHbycsICd3YXJuaW5nJylcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJGXCI6XG4gICAgICAgICAgICBzdG9wID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChqb2IuZmluYWxhY3Rpb24pIGh0bWwucHVzaChqb2IuZmluYWxhY3Rpb24pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkVcIjpcbiAgICAgICAgICAgIGlmIChqb2IuZXJyb3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgICBkaXNwbGF5X2Vycm9ycyhqb2IuZXJyb3JzLCBqb2Iuc3RhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RvcCA9IHRydWU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiUFwiOlxuICAgICAgICAgICAgLy8gcGVuZGluZ1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIlJcIjpcbiAgICAgICAgICAgIC8vIHJ1bm5pbmdcbiAgICAgICAgICAgIGRpc3BsYXlfZXJyb3JzKGpvYi5lcnJvcnMsIGpvYi5zdGF0ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChqb2Iuc3RhdGUgJiYgam9iLnN0YXRlID09PSBcIkVcIiB8fCBqb2Iuc3RhdGUgPT09ICdGJyB8fCBqb2IudHlwZSA9PT0gXCJQcmVkaWN0aW9uXCIpIHtcbiAgICAgICAgICAvLyAgZGlzcGxheV9maW5hbChqb2IuZmluYWxhY3Rpb24pO1xuICAgICAgICAgIGlmIChyZXNwb25zZWRpdikge1xuICAgICAgICAgICAgcmVzcG9uc2VkaXYuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgaHRtbC5qb2luKCcnKSk7XG4gICAgICAgICAgICByZXNwb25zZWRpdi5jbGFzc0xpc3QucmVtb3ZlKGNzcy5oaWRlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3RvcCA9PT0gZmFsc2UpIHNldFRpbWVvdXQoY2hlY2tfam9iX3N0YXR1cywgMTAwMCk7XG5cbiAgICAgIHJldHVybjtcbiAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnZXJyJywgZXJyKTtcbiAgICB9KTtcbiAgfVxuICBjaGVja19qb2Jfc3RhdHVzKCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/job-monitor.js\n")}}]);