/*! For license information please see src_modules_form-submit_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_form-submit_js"],{"./src/modules/form-submit.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormSubmit: () => (/* binding */ FormSubmit)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\n\n\n\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.captcha = '.js-captcha';\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid = 'invalid';\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.inputvalid = 'valid';\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.required = 'required';\n_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.tshidden = 'ts-hidden-accessible';\nclass FormSubmit {\n  handlers = {\n    validate: [],\n    submit: []\n  };\n  form = null;\n  listener = null;\n  constructor(form, options = {}) {\n    if (!form) return;\n    if (!form.formsubmit) {\n      this.form = form instanceof HTMLElement ? form : document.querySelector(form);\n      const defaultOptions = {\n        fetch: null,\n      };\n      options = Object.assign(options, this.form.dataset);\n      this.options = Object.assign(defaultOptions, options);\n      if (!this.form) return;\n      this.tabs = this.form.querySelectorAll(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.tabs.tab);\n      this.validateFields(true);\n      this.init();\n      form.formsubmit = this;\n    }\n    return form.formsubmit;\n  }\n  init() {\n\n    // init the form ( options like beforeunload etc...)\n    this.form.addEventListener('keydown', (e) => {\n      // prevent enter submit\n      if (e.key === 'Enter' && e.target instanceof HTMLInputElement) e.preventDefault();\n    });\n    window.addEventListener(\"pageshow\", (e) => {\n      const historytraversal = event.persisted ||\n        (typeof window.performance != \"undefined\" &&\n          window.performance.navigation.type === 2);\n      if (historytraversal) {\n        this.enableForm();\n      }\n    });\n    this.form.addEventListener('validate', (e) => {\n      this.validateFields();\n    });\n    this.form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const res = await this.submitForm();\n      return res;\n    });\n    this.specialFields();\n  }\n  specialFields() {\n    // check if there is a password confirm input\n    // add show text for password fields\n\n    this.form.querySelectorAll('input[data-match]').forEach(input => { //\n      const match = input.dataset.match;\n      if (!match) return;\n      const target = document.getElementById(match);\n      if (!target) return;\n      const invalid = (input.dataset.matchinvalid) ? input.dataset.matchinvalid : \"no match\";\n      const check_match = (item, itemtarget) => {\n        const label = item.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.form.formbox).querySelector('label[for=\"' + item.id + '\"]');\n        const labeltarget = itemtarget.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.form.formbox).querySelector('label[for=\"' + itemtarget.id + '\"]');\n        const {\n          patternMismatch = false\n        } = item.validity;\n        const customvalidity = (patternMismatch) ? this.getMessage(item, 'invalid') : ``;\n        if (item.checkValidity() === true) {\n          item.setCustomValidity('');\n          if (item == input && label !== null) label.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n          else if (labeltarget !== null) labeltarget.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n          item.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n          if (item.value !== itemtarget.value) {\n            itemtarget.setCustomValidity(invalid);\n            if (labeltarget) {\n              labeltarget.dataset.invalid = invalid;\n              labeltarget.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n            }\n            itemtarget.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n          } else {\n            itemtarget.setCustomValidity(\"\");\n            if (labeltarget) labeltarget.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n            itemtarget.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n          }\n        } else {\n          item.setCustomValidity(customvalidity);\n          label.dataset.invalid = customvalidity;\n          if (label) label.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n          item.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n        }\n        item.focus();\n      };\n      [input, target].forEach(item => {\n        item.addEventListener('keyup', (e) => {\n          const itemtarget = (item === input) ? target : input;\n          const itemsrc = (item === input) ? input : target;\n          check_match(itemsrc, itemtarget);\n        });\n      });\n\n    });\n  }\n  getMessage(field, type = 'invalid') {\n    const {\n      valueMissing = true\n    } = field.validity;\n    if (valueMissing) return `* ` + ((field.dataset.required) ? field.dataset.required : ((this.form.dataset.required) ? this.form.dataset.required : (field.validationMessage) ? (field.validationMessage) : 'required'));\n    else return (field.dataset[type]) ? field.dataset[type] : (field.validationMessage) ? (field.validationMessage) : 'input invalid';\n  }\n  setLabelState(field, valid) {\n    const label = this.getFieldLabel(field);\n    if (label == null) return;\n    if (valid === true) {\n      label.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n    } else {\n      label.dataset.invalid = this.getMessage(field);\n      label.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.invalid);\n      const rect = label.getBoundingClientRect();\n      const x = rect.left;\n      const y = rect.top;\n      window.scrollTo({\n        top: y,\n        left: x,\n        behavior: 'smooth'\n      });\n    }\n  }\n  validateField(field, init = false) {\n    if (['select'].indexOf(field.tagName.toLowerCase()) >= 0) {\n      field.querySelectorAll('option:checked').forEach(option => {\n        option.value = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.decode_HTMLEntities)(dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(option.value));\n      });\n    } else field.value = (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.decode_HTMLEntities)(dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(field.value));\n    if (field.tomselect) field.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.tshidden);\n    let rep = field.checkValidity();\n    if (field.tomselect) field.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.tshidden);\n    if (rep && field.dataset.unique !== undefined) {\n      rep = this.validateFieldUnique(field);\n    }\n    const evt = document.createEvent(\"Event\");\n    evt.initEvent(((rep) ? 'valid' : 'invalid'), true, true);\n    field.dispatchEvent(evt);\n    return rep;\n  }\n\n  getFieldLabel(field) {\n    let label = field.closest('[for=\"' + field.name + '\"]') ? field.closest('[for=\"' + field.name + '\"]') : (field.closest('[data-for=\"' + field.name + '\"]')) ? field.closest('[data-for=\"' + field.name + '\"]') : null;\n    if (label === null) {\n      label = (field.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.form.formbox)) ? ((field.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.form.formbox).querySelector('.label')) ? field.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.form.formbox).querySelector('.label') : field.closest(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.form.formbox).querySelector('label')) : null;\n    }\n    if (label === null) {\n      label = (field.parentElement && field.parentElement.dataset.elem) ? ((field.closest('fieldset')) ? field.closest('fieldset').querySelector('.' + field.parentElement.dataset.elem) : null) : null;\n    }\n\n    return label;\n  }\n  validateFieldUnique(field) {\n    const label = this.getFieldLabel(field);\n    if (String(field.dataset.unique).toLowerCase() === String(field.value).toLowerCase()) {\n      //field.dataset.invalid = window.alertbox.i18nmessages.noduplicate;\n      // just send a warning for the moment\n      if (label) {\n        label.dataset.confirm = window.alertbox.i18nmessages.noduplicate;\n        label.classList.add(window.alertbox.alertconfig.css.confirm);\n      }\n      const callback_cancel = function() {\n        field.dataset.unique = false;\n        if (label) {\n          label.classList.remove(window.alertbox.alertconfig.css.confirm);\n          delete label.dataset.confirm;\n        }\n      }\n      const confirm = window.alertbox.createConfirm(((label) ? label.textContent + ` : ` : ``) + window.alertbox.i18nmessages.noduplicate, {\n        callback_cancel: callback_cancel,\n        buttons: {\n          ok: {\n            text: window.alertbox.i18nmessages.modify\n          },\n          cancel: {\n            text: window.alertbox.i18nmessages.saveanyway\n          }\n        }\n      });\n      return confirm;\n    } else if (label.dataset.confirm) {\n      label.classList.remove(window.alertbox.alertconfig.css.confirm);\n      delete label.dataset.confirm;\n    }\n    return true;\n  }\n  async validateFields(init = false) {\n    //todo: complete validation foreach field type\n    let resp = true,\n      r = true;\n    [...this.form.elements].forEach(field => {\n      if (init === true) {\n        if (!field.dataset.listen) {\n          if (field.required) {\n            const label = this.getFieldLabel(field);\n            if (label) label.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.required);\n          }\n          field.addEventListener('change', (e) => {\n            this.validateField(e.target);\n          });\n          field.dataset.listen = true;\n          field.addEventListener('invalid', (e) => {\n            this.setLabelState(field, false);\n          });\n          field.addEventListener('valid', (e) => {\n            this.setLabelState(field, true);\n          });\n        }\n      } else if (field.name && field.type && (['submit', 'hidden'].indexOf(field.type) < 0 && (['radio', 'checkbox'].indexOf(field.type) < 0 || field.required))) {\n        r = this.validateField(field, false);\n        resp = (resp && r);\n      }\n\n    });\n    if (init === false) {\n      // add/remove error class on tabs tab-control elements\n      this.tabs.forEach(tab => {\n        if (tab.querySelector(':invalid') || tab.querySelector(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.component.alert.danger)) tab.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.error);\n        else tab.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.css.error);\n      });\n      r = await this.execHandler('validate');\n    }\n    return (r && resp);\n  }\n\n  addHandler(type, handler) {\n    this.handlers[type].push(handler);\n  }\n  fieldEnable(enable = true) {\n    this.form.querySelectorAll('input[data-sub=\"enable\"]').forEach(input => {\n      if (enable === true) {\n        input.disabled = false;\n      } else input.disabled = true;\n    });\n  }\n\n  async execHandler(type) {\n    if (this.handlers[type].length === 0) return true;\n    let resp = true;\n    // series\n    /*  for (const handler of this.handlers) {\n          const rep = await handler()\n          resp = (resp && rep)\n      }*/\n    // concurrent\n    await Promise.all(this.handlers[type].map(async handler => {\n      const rep = await handler();\n      resp = (resp && rep);\n    }));\n    //  if (resp === true) this.handlers[type] = [];\n    return resp;\n  }\n  // no redirection when using data-fetch\n  formFetch(format = null) {\n    const formdata = new FormData(this.form);\n    formdata[\"fetch\"] = true;\n    fetch(this.form.action, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.fetchSettings)({\n        method: 'POST',\n        body: formdata,\n      }))\n      .then(response => {\n        if (response.redirected) {\n          window.location = response.url;\n          return null;\n        }\n        switch (format) {\n          case \"text\":\n          case \"html\":\n            return response.text();\n            break;\n          default:\n            return response.json();\n        }\n      })\n      .then(response => {\n        this.displayResponse(response);\n      })\n      .catch(err => {\n        this.displayResponse(err, true)\n      }).finally(response => {\n        this.form.disabled = true;\n      });\n    return false;\n  }\n\n  async submitForm() {\n    this.fieldEnable();\n    // important async\n    const valid = await this.validateFields(false);\n\n    if (valid) {\n      const isbot = (this.form.querySelector(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_1__.domselectors.captcha)) ? (this.form.dataset.isbot ? (this.form.dataset.isbot === true) : true) : false;\n      if (isbot === true) return false;\n      const yessubmit = await this.execHandler('submit');\n      if (yessubmit) {\n        if (this.options.fetch) this.formFetch(this.options.fetch);\n        else this.form.submit();\n        this.disableForm();\n        return true;\n      }\n    }\n    return false;\n  }\n  enableForm() {\n    this.form.disabled = false;\n    const btn = (this.form.querySelector('[type=\"submit\"] svg'));\n    if (btn) btn.remove();\n  }\n  disableForm() {\n    this.form.disabled = true;\n    const btn = this.form.querySelector('[type=\"submit\"]');\n    if (btn) btn.insertAdjacentHTML('afterbegin', (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_2__.html_spinner)('text-stone-50 ml-1 mr-2 align-text-bottom inline-block'));\n\n  }\n  displayResponse(response, error = false) {\n    const el = document.createElement('div');\n    el.insertAdjacentHTML('afterbegin', response);\n    if (error !== false) el.classList.add('is-error');\n    this.form.parentElement.insertBefore(el, this.form);\n    this.form.remove();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/form-submit.js\n")}}]);