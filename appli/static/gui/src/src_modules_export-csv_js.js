/*! For license information please see src_modules_export-csv_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_export-csv_js"],{"./src/modules/export-csv.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportCSV: () => (/* binding */ exportCSV)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n\n\n/**\n * Export table to CSV\n * @param {TableComponent) TableComponent instance.\n\n * @return {Array}\n */\n\nfunction exportCSV(state, options = {}, hidden = true) {\n\n  if (!state.grid.columns.length || (hidden === true && !state.grid.data.length)) return false;\n  const defaults = {\n    download: true,\n    skipcolumns: [],\n    linedelimiter: \"\\n\",\n    columndelimiter: \",\"\n  }\n  options = { ...defaults,\n    ...options\n  };\n\n  function text_convert(text) {\n     if (text === null || text === undefined) return null;\n    const make_text=function(text) {\n       text = text.trim();\n       text = text.replace(/\\s{2,}/g, \" \");\n       text = text.replace(/\\n/g, \"  \");\n       text = text.replace(/\"/g, \"\\\"\\\"\");\n       //have to manually encode \"#\" as encodeURI leaves it as is.\n       text = text.replace(/#/g, \"%23\");\n       if (text.includes(\",\")) text = `\"${text}\"`\n       return text;\n    }\n    if (typeof(text) ==='object') {\n        const stringify= function(obj) {\n        const txt=[];\n        ['name','email','label'].forEach(k => {if(obj.hasOwnProperty(k)) txt.push(k+': '+obj[k]);});\n         return txt.join(', ');}\n         if (Array.isArray(text)) {\n         const newtext=[];\n         text.forEach((t,i)=> {newtext.push(stringify(t));});\n         text=newtext.join('; ');  } else text=stringify(text);\n        }\n        text=make_text(text);\n\n    return text;\n  }\n\n  function make_line(row) {\n    row = row.join(options.columndelimiter);\n    return row.trim();\n  }\n  let rows = [],\n    row = [];\n  const columns = [];\n  const theads = state.dom.querySelectorAll('thead th');\n  let j=0;\n  state.grid.columns.forEach(column => {\n    if ((hidden === true || !column.hasOwnProperty('hidden')) && (options.skipcolumns.length === 0 || options.skipcolumns.indexOf(column.index) < 0)) {\n      const obj = {\n        name: (column.hidden)?(column.name) ? column.name : ((column.label) ? column.label : String(column.index)):theads[j].textContent,\n        hidden: (column.hasOwnProperty('hidden')) ? true : false,\n        index: column.index\n      };\n      //headings\n        let label =obj.name;\n        console.log('obj.name',label)\n        if (!label) label = 'C' + column.index;\n        row.push(text_convert(label));\n        columns.push(obj);\n    }\n     if (!column.hidden ) j++;\n  });\n  rows.push(make_line(row));\n  const trs = state.dom.querySelectorAll('tbody tr');\n\n  for (let i = 0; i < trs.length; i++) {\n    row = [];\n    j=0;\n    const tds = trs[i].querySelectorAll('th,td');\n    state.grid.columns.forEach((column) => {\n      const index = column.index;\n      if ((hidden === true || !column.hidden) && (options.skipcolumns.length === 0 || options.skipcolumns.indexOf(index) < 0)) {\n        const value = (column.hidden) ? state.grid.data[i][index] : (tds[j]) ? tds[j].innerText : 'None';\n        row.push(text_convert(value));\n      }\n      if(!column.hidden) j++;\n    });\n    rows.push(make_line(row));\n  }\n\n  const str = rows.join(options.linedelimiter);\n  // Download\n  if (options.download) {\n    // Create a link to trigger the download\n    link = document.createElement(\"a\")\n    link.href = encodeURI(`data:text/csv;charset=utf-8,${str}`)\n    link.download = `${options.filename || \"datatable_export\"}.csv`\n    // Append the link\n    document.body.appendChild(link);\n    // Trigger the download\n    link.click();\n    // Remove the link\n    document.body.removeChild(link);\n  }\n  return str;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9leHBvcnQtY3N2LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRTRCOztBQUU1QjtBQUNBO0FBQ0EsV0FBVzs7QUFFWCxZQUFZO0FBQ1o7O0FBRU8sc0NBQXNDOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLEdBQUc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsS0FBSztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLG1EQUFtRDtBQUNsRztBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNEJBQTRCO0FBQzNELDhCQUE4QixPQUFPO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxnQkFBZ0IsSUFBSTtBQUM3RCx1QkFBdUIsdUNBQXVDO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL2V4cG9ydC1jc3YuanM/ODE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBpc19vYmplY3Rcbn0gZnJvbSBcIi4uL21vZHVsZXMvdXRpbHMuanNcIlxuXG4vKipcbiAqIEV4cG9ydCB0YWJsZSB0byBDU1ZcbiAqIEBwYXJhbSB7VGFibGVDb21wb25lbnQpIFRhYmxlQ29tcG9uZW50IGluc3RhbmNlLlxuXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZXhwb3J0Q1NWKHN0YXRlLCBvcHRpb25zID0ge30sIGhpZGRlbiA9IHRydWUpIHtcblxuICBpZiAoIXN0YXRlLmdyaWQuY29sdW1ucy5sZW5ndGggfHwgKGhpZGRlbiA9PT0gdHJ1ZSAmJiAhc3RhdGUuZ3JpZC5kYXRhLmxlbmd0aCkpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgZGVmYXVsdHMgPSB7XG4gICAgZG93bmxvYWQ6IHRydWUsXG4gICAgc2tpcGNvbHVtbnM6IFtdLFxuICAgIGxpbmVkZWxpbWl0ZXI6IFwiXFxuXCIsXG4gICAgY29sdW1uZGVsaW1pdGVyOiBcIixcIlxuICB9XG4gIG9wdGlvbnMgPSB7IC4uLmRlZmF1bHRzLFxuICAgIC4uLm9wdGlvbnNcbiAgfTtcblxuICBmdW5jdGlvbiB0ZXh0X2NvbnZlcnQodGV4dCkge1xuICAgICBpZiAodGV4dCA9PT0gbnVsbCB8fCB0ZXh0ID09PSB1bmRlZmluZWQpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IG1ha2VfdGV4dD1mdW5jdGlvbih0ZXh0KSB7XG4gICAgICAgdGV4dCA9IHRleHQudHJpbSgpO1xuICAgICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xcc3syLH0vZywgXCIgXCIpO1xuICAgICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xcbi9nLCBcIiAgXCIpO1xuICAgICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1wiL2csIFwiXFxcIlxcXCJcIik7XG4gICAgICAgLy9oYXZlIHRvIG1hbnVhbGx5IGVuY29kZSBcIiNcIiBhcyBlbmNvZGVVUkkgbGVhdmVzIGl0IGFzIGlzLlxuICAgICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoLyMvZywgXCIlMjNcIik7XG4gICAgICAgaWYgKHRleHQuaW5jbHVkZXMoXCIsXCIpKSB0ZXh0ID0gYFwiJHt0ZXh0fVwiYFxuICAgICAgIHJldHVybiB0ZXh0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mKHRleHQpID09PSdvYmplY3QnKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZ2lmeT0gZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIGNvbnN0IHR4dD1bXTtcbiAgICAgICAgWyduYW1lJywnZW1haWwnLCdsYWJlbCddLmZvckVhY2goayA9PiB7aWYob2JqLmhhc093blByb3BlcnR5KGspKSB0eHQucHVzaChrKyc6ICcrb2JqW2tdKTt9KTtcbiAgICAgICAgIHJldHVybiB0eHQuam9pbignLCAnKTt9XG4gICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0ZXh0KSkge1xuICAgICAgICAgY29uc3QgbmV3dGV4dD1bXTtcbiAgICAgICAgIHRleHQuZm9yRWFjaCgodCxpKT0+IHtuZXd0ZXh0LnB1c2goc3RyaW5naWZ5KHQpKTt9KTtcbiAgICAgICAgIHRleHQ9bmV3dGV4dC5qb2luKCc7ICcpOyAgfSBlbHNlIHRleHQ9c3RyaW5naWZ5KHRleHQpO1xuICAgICAgICB9XG4gICAgICAgIHRleHQ9bWFrZV90ZXh0KHRleHQpO1xuXG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cblxuICBmdW5jdGlvbiBtYWtlX2xpbmUocm93KSB7XG4gICAgcm93ID0gcm93LmpvaW4ob3B0aW9ucy5jb2x1bW5kZWxpbWl0ZXIpO1xuICAgIHJldHVybiByb3cudHJpbSgpO1xuICB9XG4gIGxldCByb3dzID0gW10sXG4gICAgcm93ID0gW107XG4gIGNvbnN0IGNvbHVtbnMgPSBbXTtcbiAgY29uc3QgdGhlYWRzID0gc3RhdGUuZG9tLnF1ZXJ5U2VsZWN0b3JBbGwoJ3RoZWFkIHRoJyk7XG4gIGxldCBqPTA7XG4gIHN0YXRlLmdyaWQuY29sdW1ucy5mb3JFYWNoKGNvbHVtbiA9PiB7XG4gICAgaWYgKChoaWRkZW4gPT09IHRydWUgfHwgIWNvbHVtbi5oYXNPd25Qcm9wZXJ0eSgnaGlkZGVuJykpICYmIChvcHRpb25zLnNraXBjb2x1bW5zLmxlbmd0aCA9PT0gMCB8fCBvcHRpb25zLnNraXBjb2x1bW5zLmluZGV4T2YoY29sdW1uLmluZGV4KSA8IDApKSB7XG4gICAgICBjb25zdCBvYmogPSB7XG4gICAgICAgIG5hbWU6IChjb2x1bW4uaGlkZGVuKT8oY29sdW1uLm5hbWUpID8gY29sdW1uLm5hbWUgOiAoKGNvbHVtbi5sYWJlbCkgPyBjb2x1bW4ubGFiZWwgOiBTdHJpbmcoY29sdW1uLmluZGV4KSk6dGhlYWRzW2pdLnRleHRDb250ZW50LFxuICAgICAgICBoaWRkZW46IChjb2x1bW4uaGFzT3duUHJvcGVydHkoJ2hpZGRlbicpKSA/IHRydWUgOiBmYWxzZSxcbiAgICAgICAgaW5kZXg6IGNvbHVtbi5pbmRleFxuICAgICAgfTtcbiAgICAgIC8vaGVhZGluZ3NcbiAgICAgICAgbGV0IGxhYmVsID1vYmoubmFtZTtcbiAgICAgICAgY29uc29sZS5sb2coJ29iai5uYW1lJyxsYWJlbClcbiAgICAgICAgaWYgKCFsYWJlbCkgbGFiZWwgPSAnQycgKyBjb2x1bW4uaW5kZXg7XG4gICAgICAgIHJvdy5wdXNoKHRleHRfY29udmVydChsYWJlbCkpO1xuICAgICAgICBjb2x1bW5zLnB1c2gob2JqKTtcbiAgICB9XG4gICAgIGlmICghY29sdW1uLmhpZGRlbiApIGorKztcbiAgfSk7XG4gIHJvd3MucHVzaChtYWtlX2xpbmUocm93KSk7XG4gIGNvbnN0IHRycyA9IHN0YXRlLmRvbS5xdWVyeVNlbGVjdG9yQWxsKCd0Ym9keSB0cicpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdHJzLmxlbmd0aDsgaSsrKSB7XG4gICAgcm93ID0gW107XG4gICAgaj0wO1xuICAgIGNvbnN0IHRkcyA9IHRyc1tpXS5xdWVyeVNlbGVjdG9yQWxsKCd0aCx0ZCcpO1xuICAgIHN0YXRlLmdyaWQuY29sdW1ucy5mb3JFYWNoKChjb2x1bW4pID0+IHtcbiAgICAgIGNvbnN0IGluZGV4ID0gY29sdW1uLmluZGV4O1xuICAgICAgaWYgKChoaWRkZW4gPT09IHRydWUgfHwgIWNvbHVtbi5oaWRkZW4pICYmIChvcHRpb25zLnNraXBjb2x1bW5zLmxlbmd0aCA9PT0gMCB8fCBvcHRpb25zLnNraXBjb2x1bW5zLmluZGV4T2YoaW5kZXgpIDwgMCkpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSAoY29sdW1uLmhpZGRlbikgPyBzdGF0ZS5ncmlkLmRhdGFbaV1baW5kZXhdIDogKHRkc1tqXSkgPyB0ZHNbal0uaW5uZXJUZXh0IDogJ05vbmUnO1xuICAgICAgICByb3cucHVzaCh0ZXh0X2NvbnZlcnQodmFsdWUpKTtcbiAgICAgIH1cbiAgICAgIGlmKCFjb2x1bW4uaGlkZGVuKSBqKys7XG4gICAgfSk7XG4gICAgcm93cy5wdXNoKG1ha2VfbGluZShyb3cpKTtcbiAgfVxuXG4gIGNvbnN0IHN0ciA9IHJvd3Muam9pbihvcHRpb25zLmxpbmVkZWxpbWl0ZXIpO1xuICAvLyBEb3dubG9hZFxuICBpZiAob3B0aW9ucy5kb3dubG9hZCkge1xuICAgIC8vIENyZWF0ZSBhIGxpbmsgdG8gdHJpZ2dlciB0aGUgZG93bmxvYWRcbiAgICBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIilcbiAgICBsaW5rLmhyZWYgPSBlbmNvZGVVUkkoYGRhdGE6dGV4dC9jc3Y7Y2hhcnNldD11dGYtOCwke3N0cn1gKVxuICAgIGxpbmsuZG93bmxvYWQgPSBgJHtvcHRpb25zLmZpbGVuYW1lIHx8IFwiZGF0YXRhYmxlX2V4cG9ydFwifS5jc3ZgXG4gICAgLy8gQXBwZW5kIHRoZSBsaW5rXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcbiAgICAvLyBUcmlnZ2VyIHRoZSBkb3dubG9hZFxuICAgIGxpbmsuY2xpY2soKTtcbiAgICAvLyBSZW1vdmUgdGhlIGxpbmtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xuICB9XG4gIHJldHVybiBzdHI7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/export-csv.js\n")}}]);