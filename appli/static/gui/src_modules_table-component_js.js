/*! For license information please see src_modules_table-component_js.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_table-component_js"],{"./src/modules/table-component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TableComponent\": () => (/* binding */ TableComponent)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"./node_modules/dompurify/dist/purify.js\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dompurify__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var simple_datatables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! simple-datatables */ \"./node_modules/simple-datatables/dist/module.js\");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deep-equal */ \"./node_modules/deep-equal/index.js\");\n/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(deep_equal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var diff_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! diff-dom */ \"./node_modules/diff-dom/dist/module.js\");\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/utils.js */ \"./src/modules/utils.js\");\n/* harmony import */ var _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../modules/modules-config.js */ \"./src/modules/modules-config.js\");\n\n\n\n\n\n\nlet instance = [];\n// valid fetch urlparts\nconst fetchfroms = {\n  prjlist: '/gui/prjlist/',\n  prjsamplestats: '/gui/prjsamplestats',\n  userslist: '/gui/admin/userslist'\n};\n// specifc css\nconst tablecss = {\n  showfull: 'showfull',\n  tipinline: \"tip-inline\",\n  searchresults: \"search-results\",\n  selectaction: \"selectaction\",\n  absinput: 'absinput',\n  disabled: 'datatable-disabled',\n  ascending: 'datable-ascending',\n  descending: 'datatable-descending',\n  tipover: 'tipover absolute z-10 text-stone-50 rounded bg-stone-600 px-2 py-0.5 -mt-5 ml-12 '\n};\nconst tableselectors = {\n  datatable: '.datatable-table',\n  datatable_wrapper: '.datatable-wrapper',\n  datatable_top: '.datatable-top',\n  datatable_search: '.datatable-input',\n  table_filters: 'table-filters',\n  datatable_sorter: '.datatable-sorter',\n  details: 'details[data-what=\"about\"]',\n  tip: '.' + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.component.table.tip,\n  tipover: '.tipover',\n  wait: 'wait-please',\n  sorton: '.sorton',\n};\n\nObject.freeze(tablecss);\nObject.freeze(tableselectors);\nconst dynamics = {};\nclass TableComponent {\n  instanceid = null;\n  columns = {};\n  headings = [];\n  datas = [];\n  grid = null;\n  params = null;\n  importfields = null;\n\n  constructor(container, options = {}) {\n    if (!container) return;\n    container = container instanceof HTMLElement ? container : document.querySelector(container);\n    if (!container) return;\n    //can select multiples tables in one page  or load data in the same table\n    this.instanceid = (container.dataset.instanceid) ? container.dataset.instanceid : document.querySelectorAll('table').length;\n    if (!instance[this.instanceid] || !deep_equal__WEBPACK_IMPORTED_MODULE_2___default()(container.dataset, instance[this.instanceid].params)) {\n      this.init(container);\n    } else this.refresh();\n    return instance[this.instanceid];\n\n  }\n  init(container) {\n    this.params = container.dataset;\n    // only valid from values - fetchfroms\n    this.params.from = (this.params.from) ? dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(this.params.from) : null;\n    const from = (this.params.from) ? ((Object.keys(fetchfroms).indexOf(this.params.from) >= 0) ? window.location.href.split('/gui/')[0] + fetchfroms[this.params.from] : null) : null;\n    if (from) {\n      if (this.params.defer) this.deferLoad(container, from);\n      else this.fetchData(container, from);\n    } else {\n      this.tableActivate(container).then(() => {\n        instance[this.instanceid] = this;\n      });\n    }\n  }\n\n  waitActivate(container) {\n    let waitdiv = container.querySelector('#' + tableselectors.wait);\n    if (!waitdiv) {\n      waitdiv = document.createElement('div');\n      waitdiv.id = tableselectors.wait;\n      container.append(waitdiv);\n    }\n    this.waitdiv = waitdiv;\n    this.timer = new Date();\n  }\n\n  waitDesactivate(message = null, type = 'info') {\n    if (!this.waitdiv) return;\n    if (message) this.waitdiv.innerHTML = `<div class=\"${type}\">${message}</div>`;\n    else this.waitdiv.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.hide);\n  }\n\n  deferLoad(container, from) {\n    const btn = container.querySelector(this.params.defer);\n    if (!btn) return;\n\n    btn.addEventListener('click', (e) => {\n      this.fetchData(container, from);\n      btn.remove();\n    });\n  }\n  fetchData(container, fromurl, pagestart = 0) {\n    this.waitActivate(container);\n    const pagesize = (this.params.pagesize) ? this.params.pagesize : 0;\n\n    let from = (this.params.import) ? fromurl + '?' + new URLSearchParams({\n      typeimport: dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(this.params.import),\n      window_start: pagestart,\n      window_size: pagesize,\n      gz: true,\n    }) : ((pagesize) ? fromurl + '?' + new URLSearchParams({\n      window_start: pagestart,\n      window_size: pagesize,\n      listall: ((this.params.listall) ? this.params.listall : false)\n    }) : ((this.params.listall) ? fromurl + '?' + new URLSearchParams({\n      listall: ((this.params.listall) ? this.params.listall : false)\n    }) : fromurl));\n    if (this.params.fromid) from += '/' + this.params.fromid;\n\n    fetch(from, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_4__.fetchSettings)()).then(response => {\n      if (response.ok) return response.json();\n      return Promise.reject(response);\n    }).then(async tabledef => {\n      if (this.waitdiv) this.waitdiv.innerHTML = ((this.waitdiv.dataset.loaded) ? dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(this.waitdiv.dataset.loaded) : default_messages.dataloaded);\n      if (tabledef.columns) this.columns = tabledef.columns;\n      else if (this.params.columns) {\n        this.columns = JSON.parse(this.params.columns);\n      }\n      if (pagestart === 0) {\n        container.addEventListener('dissmisstable', (e) => {\n          console.log('destroy table');\n          this.destroy();\n        });\n        this.tableActivate(container, tabledef).then(() => {\n          instance[this.instanceid] = this;\n        });\n        // dismiss table when dismiss modal\n\n\n      } else if (tabledef.length) this.tableInsertRows(tabledef);\n      else pagesize = 0;\n      if (pagesize > 0) this.fetchData(container, fromurl, pagestart + pagesize);\n    })\n  }\n\n  async tableActivate(container, tabledef = null) {\n    let table = container.querySelector('table');\n    if (!table) {\n      table = document.createElement('table');\n      container.append(table);\n    }\n    table.id = 'table-' + container.id;\n    let options = {\n      type: \"main\",\n      searchable: (this.params.searchable) ? (this.params.searchable === 'true') : false,\n      sortable: (this.params.sortable) ? (this.params.sortable === 'true') : false,\n      paginate: (this.params.paginate) ? (this.params.paginate === 'true') : false,\n      fixedHeight: false,\n      paging: (this.params.paging) ? (this.params.paging === 'true') : false,\n      noPaging: true,\n      perPage: (this.params.paging) ? ((this.params.perpage) ? (this.params.perpage === 'true') : 100) : 1000000,\n      perPageSelect: (this.params.paging === 'true') ? [10, 50, 100, 500, 1000] : false,\n      scrollY: \"\",\n      footer: (this.params.footer) ? (this.params.footer === 'true') : ((container.querySelector('tfoot')) ? true : false),\n      labels: (this.params.labels) ? this.params.labels : {\n        placeholder: \"Search...\",\n        perPage: \"{select} entries per page\",\n        noRows: \"No entries found\",\n        info: \"Showing {start} to {end} of {rows} entries\",\n        noResults: \"No result match your search query\"\n      },\n    };\n    if (tabledef) {\n      tabledef = await this.convertDatas(tabledef);\n      const lastused = (tabledef.lastused) ? tabledef.lastused : [];\n      const cellidname = ((this.params.hasOwnProperty(\"cellid\")) ? this.params.cellid : 'id');\n\n      options = { ...options,\n        ...{\n          data: {\n            headings: tabledef.headings,\n            data: tabledef.data\n          },\n          columns: tabledef.columns,\n          rowRender: (rowValue, tr, rowIndex) => {\n            rowValue.forEach(value => {\n              return dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(value);\n            })\n            const id = this.getCellData(rowIndex, cellidname);\n            tr.attributes = (tr.hasOwnProperty('attributes')) ? tr.attributes : {};\n            tr.attributes['data-id'] = id;\n            if (lastused.indexOf(id) >= 0) {\n              tr.attributes[\"class\"] = (tr.attributes[\"class\"]) ? tr.attributes[\"class\"] + \" last-used\" : \"last-used\";\n            }\n          }\n        }\n      };\n    } else {\n      const footer = table.querySelectorAll('tfoot th');\n      if (footer.length) options.footer = true;\n      options.rowRender = function(rowValue, tr, rowIndex) {\n        rowValue.forEach(value => {\n          return dompurify__WEBPACK_IMPORTED_MODULE_0___default().sanitize(value);\n        })\n      }\n      options.tableRender = function(tableValue, table) {\n        const l = table.childNodes.length - 1;\n        if (table.childNodes[l].nodeName === 'TFOOT' && footer.length) {\n          const footercells = Array.from(footer).map(cell => {\n            return (0,diff_dom__WEBPACK_IMPORTED_MODULE_3__.nodeToObj)(cell);\n          });\n\n          table.childNodes[l].childNodes = [{\n            nodeName: \"TR\",\n            childnodes: footercells\n          }];\n\n        }\n      }\n    }\n\n    /*  DataTable.extend('search', (query) => {\n      this.searchTable(query);\n    });*/\n\n    this.grid = new simple_datatables__WEBPACK_IMPORTED_MODULE_1__.DataTable(table, options);\n\n    this.grid.on('datatable.init', () => {\n      // hide and move waitdiv in the wrapper for inner elements display\n      this.waitDesactivate();\n      // move import zones and/or search zone - reorg the page display\n      container.style.top = container.offsetTop + 'px';\n      // fetch once the same table\n      container.dataset.table = this.params.table = true;\n      this.grid.dom.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.hide);\n      this.datas = null;\n      const search = this.grid.wrapperDOM.querySelector(tableselectors.datatable_search);\n      if (search) {\n        // style like any other form element\n        search.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.input);\n      }\n      this.initPlugins(container);\n\n    });\n\n\n  }\n  tableAppendRows(rows) {\n    console.log('rows');\n  }\n  destroy() {\n    if (this.dataImport) this.dataImport = null;\n    this.grid = null;\n    delete instance[this.instanceid];\n  }\n  refresh(e) {\n    if (this.dataImport && this.dataImport.selectors) this.dataImport.selectors.forEach(selector => {\n      if (this.disabled) this.disabled = false;\n    });\n  }\n  labelFormatter(field, column) {\n    let align = ``;\n    if (['number', 'progress', 'decimal'].find(format => format === column.format)) align = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.right;\n    if (column.subfield) return `${column.label} <span class=\"sublabel\">${column.sublabel}</span>`;\n    else if (column.label) return `<span class=\"col-${field} ${align}\">${column.label}</span>`;\n    else return ``;\n  }\n  getCellId(name, state = null) {\n    return this.headings.indexOf(name);\n  }\n  getCellData(rowIndex, name) {\n    const cellIndex = this.getCellId(name);\n    if (cellIndex < 0) return null;\n    return (this.grid) ? ((this.grid.data.data[rowIndex]) ? this.grid.data.data[rowIndex][cellIndex].data : null) : (this.datas && this.datas[rowIndex]) ? this.datas[rowIndex][cellIndex] : null;\n  }\n\n\n  setTextNode(value) {\n    return {\n      nodeName: \"#text\",\n      data: value\n    };\n  }\n\n  async convertDatas(tabledef) {\n\n    const headings = Object.entries(this.columns).map(([key, column], index) => {\n      const heading = {\n        data: key,\n        text: (column.label) ? column.label : ``,\n        //  html: this.labelFormatter(key, column),\n      }\n      if (column.hasOwnProperty('hidden')) heading['hidden'] = true;\n      return heading;\n    });\n    const keys = Object.keys(this.columns);\n    this.headings = keys;\n    const columns = this.convertColumns();\n    // convert json rows => sorted array by columns\n    if (!tabledef.hasOwnProperty('data') || (tabledef.hasOwnProperty('type') && tabledef.type === \"json\")) {\n      tabledef = ((tabledef.hasOwnProperty('data')) ? tabledef.data : tabledef).map((data) => {\n        let row = [];\n        let hidden = [];\n        keys.forEach((key, index) => {\n          let r = row;\n          if (data.hasOwnProperty(key)) r.push((data[key] === NaN) ? null : data[key]);\n          else r.push(null);\n        });\n        return [...row, ...hidden];\n      });\n      this.datas = tabledef;\n      tabledef = {\n        data: tabledef\n      }\n    } else {\n      const l = tabledef.data.length;\n      for (let i = 0; i < l; i++) {\n        const lr = tabledef.data[i].length;\n        for (let j = 0; j < lr; j++) {\n          tabledef.data[i][j] = tabledef.data[i][j];\n        }\n      }\n    }\n    this.datas = tabledef.data;\n    tabledef.columns = columns;\n    tabledef.headings = headings;\n    let formatters = {\n      controls: (value, td, rowIndex, cellIndex) => {\n        const column = Object.values(this.columns)[cellIndex];\n        const id = this.getCellData(rowIndex, column.field);\n        const actions = (column.actions) ? column.actions : null;\n        if (!actions) return ``;\n        let controls = [];\n        Object.entries(actions).forEach(([key, action]) => {\n          controls.push({\n            nodeName: \"A\",\n            attributes: {\n              class: `btn is-${key} `,\n              href: `${action.link}/${id}`\n            },\n            childNodes: [this.setTextNode(action.label)]\n          });\n\n        });\n        if (!td.hasOwnProperty('attributes')) td.attributes = {};\n        td.attributes.class = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.component.table.controls;\n        td.childNodes = controls;\n\n      },\n      select: (value, td, rowIndex, cellIndex) => {\n        const column = Object.values(this.columns)[cellIndex];\n        value = (isNaN(value)) ? this.getCellData(rowIndex, column.field) : value;\n\n        td.childNodes = [{\n          nodeName: \"INPUT\",\n          attributes: {\n            type: \"radio\",\n            name: `${this.instanceid}select`,\n            value: String(value)\n          }\n        }];\n\n      },\n      selectmultiple: (value, td, rowIndex, cellIndex) => {\n        const column = Object.values(this.columns)[cellIndex];\n        value = (isNaN(value)) ? ((column.hasOwnProperty('field')) ? this.getCellData(rowIndex, column.field) : value) : value;\n        td.childNodes = [{\n          nodeName: \"INPUT\",\n          attributes: {\n            type: \"checkbox\",\n            name: `${this.instanceid}select[]`,\n            value: String(value)\n          }\n        }];\n\n      },\n      decimal: (value, td, rowIndex, cellIndex) => {\n        if (isNaN(value)) value = 0;\n        value = parseFloat(value).toFixed(2);\n        if (value - parseInt(value) === 0) value = parseInt(value);\n\n        if (!td.hasOwnProperty('attributes')) td.attributes = {};\n        td.attributes.class = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.number;\n        td.childNodes[0].data = value;\n      },\n      number: (value, td, rowIndex, cellIndex) => {\n        if (isNaN(value)) value = 0;\n        if (!td.hasOwnProperty('attributes')) td.attributes = {};\n        td.attributes.class = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.number;\n        td.childNodes[0].data = value;\n      },\n      check: (value, td, rowIndex, cellIndex) => {\n\n        if (isNaN(value)) value = ``;\n        switch (value) {\n          case true:\n          case 'Y':\n          case 1:\n            value = \"\";\n            break;\n          default:\n            value = \"no-\";\n            break;\n        }\n        const icon = {\n          nodeName: \"I\",\n          attributes: {\n            class: `icon-sm  icon-${value}check `\n          },\n          childNodes: []\n        }\n        const column = Object.values(this.columns)[cellIndex];\n        const id = this.getCellData(rowIndex, column.field);\n        if (column.hasOwnProperty(\"toggle\")) td.childNodes = [{\n          nodeName: \"A\",\n          attributes: {\n            \"data-request\": \"toggle\",\n            \"data-action\": `${column.toggle.link}/${id}`,\n            \"href\": \"javascript:void()\"\n\n          },\n          childNodes: [icon]\n\n        }]\n        else td.childNodes = [icon];\n      },\n      text: (value, td, rowIndex, cellIndex) => {\n        if (value === null) td.childNodes = [];\n        else {\n          value = value.replaceAll('\\r\\n', ', ');\n          if (value !== ``) td.childNodes = [{\n            nodeName: \"DIV\",\n            attributes: {\n              class: _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.component.table.tip\n            },\n            childNodes: [this.setTextNode(value)]\n          }];\n          else td.childNodes = [];\n        }\n\n      },\n      default: (value, td, rowIndex, cellIndex) => {\n        if (value === null || value === ``) td.childNodes = [];\n        else td.childNodes = [this.setTextNode(value)];\n      }\n\n    }\n    let tablecustom = null;\n\n    switch (this.params.from) {\n      case 'prjlist':\n        tablecustom = await __webpack_require__.e(/*! import() */ \"src_modules_table-project_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/table-project.js */ \"./src/modules/table-project.js\"));\n        this.cellid = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.models.projid;\n        break;\n      case 'prjsamplestats':\n        tablecustom = await __webpack_require__.e(/*! import() */ \"src_modules_table-sample_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/table-sample.js */ \"./src/modules/table-sample.js\"));\n        this.cellid = _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.models.sampleid;\n        break;\n      default:\n        this.cellid = 'id';\n        break;\n    }\n\n    formatters = (tablecustom) ? { ...formatters,\n      ...tablecustom.default(this)\n    } : formatters;\n    Object.entries(this.columns).forEach(([field, column], index) => {\n      if (!column.hasOwnProperty('hidden')) {\n        const select = (column.select && column.select == _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.models.controls) ? _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.models.controls : ((column.selectcells) ? _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.models.imports : column.select)\n        const format = (column.format) ? column.format : ((column.subfield) ? column.subfield : ((select) ? select : \"default\"));\n        if (formatters && formatters[format]) tabledef.columns[index].render = formatters[format];\n      }\n    });\n    return tabledef;\n  }\n\n  convertColumns() {\n    const map_column = (key, column, index) => {\n      if (!column) return {\n        select: index,\n        name: key,\n\n        hidden: true\n      };\n      const col = {\n        select: index,\n        name: this.labelFormatter(key, column),\n      };\n      if (column.notsortable) col.sortable = false;\n      if (!column.notsearchable) col.searchable = true;\n      if (column.hidden) col.hidden = Boolean(column.hidden);\n      if (column.sort && column.sort === \"desc\") column.sortSequence = [\"desc\", \"asc\"];\n      if (['number', 'decimal'].find(format => format === column.format)) col.type = 'number';\n      let render = null;\n      switch (key) {\n        case 'select':\n          const select = (column.select && column.select == \"controls\") ? \"controls\" : ((column.selectcells) ? \"imports\" : column.select)\n          if (select) {\n            this.importfields = (column.selectcells) ? column.selectcells : null;\n            col.sortable = false;\n            col.searchable = false;\n          }\n          break;\n      }\n      return col;\n    }\n    return Object.entries(this.columns).map(([key, column], index) => map_column(key, column, index));\n\n  }\n  initEvents() {\n    this.grid.on('datatable.update', () => {\n      if (this.grid.dom.classList.contains('hide')) this.grid.dom.classList.remove('hide');\n\n    });\n  }\n  initPlugins(container) {\n    if (this.params.import && this.initImport) this.initImport();\n    if (this.params.expand) this.makeExpandable(container);\n    if (this.params.export) this.makeExportable(container);\n    if (this.params.details || this.grid.dom.querySelector(tableselectors.details)) this.initDetails();\n    else this.initEvents();\n    if (this.params.onselect) this.initSelect(container);\n    if (this.grid.dom.querySelector(tableselectors.tip)) this.initTips();\n    if (this.grid.dom.querySelectorAll('thead [data-altsort]').length) this.initAlternateSort(this.grid.dom.querySelectorAll('thead [data-altsort]'));\n    if (this.params.filters) {\n      const top = this.grid.wrapperDOM.querySelector(tableselectors.datatable_top);\n      if (top && top.children.length) {\n        const filters = document.querySelector(tableselectors.table_filters);\n        // insert  filters node  in datatable top\n        if (filters) top.prepend(filters);\n      }\n    }\n  }\n  initSelect(container) {\n    const inputs = this.grid.dom.querySelectorAll('input[name^=\"' + this.instanceid + '\"]');\n    if (inputs.length === 0) return;\n    const inputname = inputs[0].name;\n    let selectaction = container.querySelector('.' + tablecss.selectaction);\n    if (!selectaction) return;\n    document.body.append(selectaction);\n    selectaction.querySelector('a').addEventListener('click', (e) => {\n      let vals = [];\n      inputs.forEach(input => {\n        if (input.checked) vals.push(input.value);\n      });\n      e.currentTarget.href = this.params.onselect + encodeURI(vals.join(','));\n    });\n    const close = selectaction.querySelector('[data-dismiss]');\n    if (close) close.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      popup_selected(null, null);\n    });\n\n    const popup_selected = (top = null, left = null, forceclose = false) => {\n      if (selectaction.dataset.close) {\n        document.body.append(selectaction);\n        close.classList.remove('hidden');\n        selectaction.classList.add(tablecss.absinput);\n      }\n      if (top !== null && left !== null) {\n        selectaction.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.hide);\n        selectaction.style.top = top + 'px';\n        selectaction.style.left = left + 'px';\n\n      } else {\n        if (forceclose === true) {\n          selectaction.classList.add(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.hide);\n          delete selectaction.dataset.close;\n        } else {\n          selectaction.dataset.close = true;\n          close.classList.add('hidden');\n          const toptable = this.grid.wrapperDOM.querySelector(tableselectors.datatable_top) ? this.grid.wrapperDOM.querySelector(tableselectors.datatable_top) : this.grid.wrapperDOM;\n          toptable.prepend(selectaction);\n          selectaction.classList.remove(tablecss.absinput);\n\n        }\n      }\n    }\n    inputs.forEach(input => {\n      input.addEventListener('change', (e) => {\n        if (input.checked) popup_selected(input.offsetTop, input.offsetLeft);\n        else {\n          if (this.grid.dom.querySelectorAll('input[name^=\"' + this.instanceid + '\"]:checked').length === 0) popup_selected(null, null, true);\n        }\n      });\n    });\n  }\n  async initDetails() { // TODO : generic\n    // about - one div to display cell details make it appear as table row expanding\n    const wrapper = this.grid.wrapperDOM;\n\n    const about = wrapper.querySelector('#' + tablecss.tipinline) ? wrapper.querySelector('#' + tablecss.tipinline) : tablecss.tipinline;\n    if (!dynamics.JsDetail) {\n      const {\n        JsDetail\n      } = await\n      __webpack_require__.e(/*! import() */ \"src_modules_js-detail_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/js-detail.js */ \"./src/modules/js-detail.js\"));\n      dynamics.JsDetail = JsDetail;\n    }\n    const jsDetail = new dynamics.JsDetail(about, wrapper, {\n      waitdiv: this.waitdiv\n    }); // specific to about details in table\n    // hide / show disable details zone\n    const callbackclose = (el, callback = null) => {\n      jsDetail.activeDetail(false);\n      if (callback) callback();\n    }\n\n    const callbackopen = (el, callback = null) => {\n      jsDetail.activeDetail(true);\n      if (jsDetail.current && jsDetail.current === el) {\n        jsDetail.expandDetail(el);\n        if (callback) callback();\n      } else {\n        if (jsDetail.current) jsDetail.current.querySelector('summary').click();\n        const url = this.params.detailsurl + el.dataset.id + '?' +\n          new URLSearchParams({\n            partial: true\n          });\n        jsDetail.activeDetail(true);\n        // append to cell details and display\n\n        fetch(url, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_4__.fetchSettings)()).then(response => response.text()).then(html => {\n          jsDetail.expandDetail(el, html);\n          if (callback) callback();\n        }).catch(err => {\n          console.log('request', err);\n        })\n      }\n\n    }\n    if (!dynamics.JsAccordion) {\n      const {\n        JsAccordion\n      } = await __webpack_require__.e(/*! import() */ \"src_modules_js-accordion_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/js-accordion.js */ \"./src/modules/js-accordion.js\"));\n      dynamics.JsAccordion = JsAccordion;\n    }\n\n    const refresh_details = () => {\n      if (this.grid.dom.classList.contains(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.hide)) this.grid.dom.classList.remove(_modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.hide);\n      const details = this.grid.dom.querySelectorAll(tableselectors.details);\n      if (!details) return;\n      details.forEach(item => {\n        if (!item.dataset.id) return;\n\n        item = new dynamics.JsAccordion(item, callbackopen, callbackclose, jsDetail.detail);\n      });\n    }\n\n    // remove details when sorting\n    this.grid.on('datatable.sort', function(column, direction) {\n      jsDetail.activeDetail(false);\n    });\n    let timesearch = false;\n    this.grid.on('datatable.search', (query, matched) => {\n      if (!this.grid.dom.dataset.issearching) {\n        jsDetail.activeDetail(false);\n        this.grid.dom.dataset.issearching = true\n      }\n      // trouble when match is empty and returning to full table - remove hide ( in refresh_details)\n\n      /*  if (this.grid.dom.classList.contains('datatable-empty') && matched === []) {\n          thid.grid.dom.querySelector('.datatable-search > input').addEventListener('click', (e) => {\n            this.update();\n            this.grid.wrapperDOM.classList.remove(\"search-results\");\n            this.grid.dom.classList.remove('hide');\n            return false;\n          }, {\n            once: true\n          });\n        }*/\n    });\n    this.grid.on('datatable.update', () => {\n      if (timesearch === false) {\n        timesearch = true;\n        setTimeout(() => {\n          refresh_details();\n          delete this.grid.dom.dataset.issearching;\n          timesearch = false;\n        }, 300);\n      }\n    });\n    refresh_details();\n  }\n\n  initAlternateSort(cols) {\n    const columns = this.grid.data.headings;\n    let coltosort;\n    const sortalternate = (col) => {\n      let todir;\n      // keep the same dir if sort on col changes\n      if (col.dataset.sortactive === String(coltosort)) {\n        todir = (col.classList.contains(tablecss.ascending)) ? tablecss.descending : tablecss.ascending;\n      } else todir = (col.classList.contains(tablecss.descending)) ? tablecss.descending : tablecss.ascending;\n      columns.sort(coltosort, todir);\n      this.grid.on('datatable.sort', (column, direction) => {\n        if (coltosort !== col.cellIndex) {\n          col.classList.remove(tablecss.ascending);\n          col.classList.remove(tablecss.descending);\n          this.grid.headings[coltosort].classList.remove(direction);\n          col.classList.add(direction);\n        }\n        col.dataset.sortactive = coltosort;\n      });\n\n    }\n    cols.forEach(col => {\n      const altsort = (col.dataset.altsort) ? col.dataset.altsort.split(',') : null;\n      if (!altsort) return;\n      col.querySelector(tablecss.datatable_sorter).classList.add(tablecss.disabled);\n      const control = col.querySelector(tableselectors.sorton);\n      // prevents imbricated links\n      col.append(control);\n      const triggers = col.querySelectorAll('[role=\"button\"]');\n      coltosort = col.cellIndex;\n      col.addEventListener('click', (e) => {\n        sortalternate(col);\n      }, false);\n      const changecoltosort = (col, index) => {\n        if (index === 0) coltosort = col.cellIndex;\n        else coltosort = this.grid.headings.findIndex(heading => (heading.dataset.name === altsort[index - 1]));\n      }\n      col.dataset.sortactive = col.cellIndex;\n      triggers.forEach((trigger, index) => {\n        trigger.addEventListener('click', (e) => {\n          e.preventDefault();\n          const active = e.currentTarget.parentElement.querySelector('.active');\n          if (active) active.classList.remove('active');\n          e.currentTarget.classList.add('active');\n          changecoltosort(col, index);\n        });\n      });\n      if (col.dataset.tip) {\n\n        Object.values(this.grid.dom.rows).forEach((row, index) => {\n          if (index === 0) return;\n          const coltip = this.grid.headings.findIndex(heading => (heading.dataset.name === altsort[parseInt(col.dataset.tip) - 1]));\n          if (coltip === col.cellIndex) return;\n\n          row.cells[col.cellIndex].addEventListener('mouseenter', (e) => {\n            const tip = document.createElement('div');\n            tip.setAttribute('class', tablecss.tipover);\n            tip.innerHTML = row.cells[coltip].innerHTML;\n            e.currentTarget.append(tip);\n          });\n          row.cells[col.cellIndex].addEventListener('mouseout', (e) => {\n            const tip = e.currentTarget.querySelector(tableselectors.tipover);\n            if (tip) tip.remove();\n          });\n        });\n      }\n    });\n\n  }\n\n\n  closeShowfull() {\n    const showfull = document.querySelector('.' + _modules_modules_config_js__WEBPACK_IMPORTED_MODULE_5__.css.component.table.tip + '.' + tablecss.showfull);\n    if (showfull) showfull.click();\n  }\n  makeExpandable(container) {\n    if (container.querySelector('table').offsetHeight < container.offsetHeight + container.querySelector('table tbody tr').offsetHeight) return;\n    const btn = document.createElement('div');\n    btn.classList.add('button-expand');\n    btn.classList.add('border-t');\n    btn.title = this.params.expand;\n    btn.innerHTML = `<span class=\"small-caps block mx-auto p-0\">${this.params.expand}</span><i class=\"clear-both p-0 mx-auto icon icon-chevron-down hover:fill-secondblue-500\"></i><span class=\"small-caps block mx-auto p-0 hidden\">${\n                  this.params.shrink}</span>`;\n    container.parentElement.insertBefore(btn, container.nextElementSibling);\n    container.classList.add('overflow-y-hidden');\n    container.classList.remove('max-tabstat-h');\n    container.parentElement.style.height = 'auto';\n    const h = parseInt(this.grid.wrapperDOM.querySelector('tbody tr').offsetHeight) * ((this.params.maxrows) ? this.params.maxrows : 20);\n    container.classList.add('max-h-[' + h + 'px]');\n    container.style.height = h + 'px';\n    btn.addEventListener('click', (e) => {\n      this.closeShowfull();\n      btn.classList.toggle('border-t');\n      btn.classList.toggle('border-b');\n      const ico = btn.querySelector('i');\n      ico.classList.toggle('icon-chevron-down');\n      ico.classList.toggle('icon-chevron-up');\n      container.classList.toggle('overflow-y-hidden');\n      container.classList.toggle('max-h-[' + h + 'px]');\n      btn.querySelectorAll('span').forEach(span => {\n        span.classList.toggle('hidden');\n      });\n      if (container.classList.contains('overflow-y-hidden')) container.style.height = h + 'px';\n      else container.style.height = 'auto';\n    });\n  }\n  makeExportable(container) {\n    const btn = document.createElement('div');\n    btn.classList.add('button-export');\n    btn.classList.add('is-pick');\n    btn.innerHTML = `<i class=\"icon icon-arrow-down-on-square\"></i><span>${((this.params.exportlabel) ? this.params.exportlabel : 'export to ' + this.params.export)}</span>`;\n    container.prepend(btn);\n    const columns = this.grid.columns;\n    let exclude_columns = [];\n    Object.keys(this.columns).forEach((name, index) => {\n      if (name === 'select') exclude_columns.push(index);\n    });\n    btn.addEventListener('click', async (e) => {\n      e.preventDefault();\n      if (exclude_columns.length) columns.hide(exclude_columns);\n      if (!this.dynamics) this.dynamics = {};\n      if (!this.dynamics.exportCSV) {\n        const {\n          exportCSV // or exportJSON, exportSQL\n        } = await\n        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! simple-datatables */ \"./node_modules/simple-datatables/dist/module.js\"));\n\n        this.dynamics.exportCSV = exportCSV;\n      }\n      let str = this.dynamics.exportCSV(this.grid, {\n        download: false,\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \"\\t\",\n      });\n      str = encodeURI(`data:text/tsv;charset=utf-8,${str}`);\n\n      (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_4__.download_url)(str, ((container.id) ? container.id : 'stats_proj') + '.tsv');\n      if (exclude_columns.length) columns.show(exclude_columns);\n    });\n  }\n  initTips() {\n    // show big cell content\n    let current = null;\n    this.grid.dom.querySelectorAll(tableselectors.tip).forEach(tip => {\n      tip.addEventListener('mouseenter', (e) => {\n        if (tip.classList.contains(tablecss.showfull) || (tip.scrollHeight > tip.offsetHeight)) {\n          tip.style.cursor = 'pointer';\n        }\n      });\n      tip.addEventListener('click', (e) => {\n        const styleparent = window.getComputedStyle(tip.parentElement);\n        const style = window.getComputedStyle(tip.parentElement);\n        if (tip.classList.contains(tablecss.showfull)) {\n          tip.classList.remove(tablecss.showfull);\n          tip.parentElement.style.minHeight = 'none';\n          tip.parentElement.style.height = 'auto';\n          tip.style.maxWidth = tip.dataset.w + 'px';\n          tip.style.padding = tip.dataset.p + 'px';\n          current = null;\n        } else if (tip.scrollHeight > tip.offsetHeight) {\n          if (current) current.classList.remove(tablecss.showfull);\n          const h = parseInt(tip.clientHeight);\n          tip.parentElement.style.minHeight = tip.parentElement.style.height = (((h < parseInt(styleparent.maxHeight)) ? h : parseInt(styleparent.maxHeight)) - 2 * parseInt(styleparent.padding)) + 'px';\n          if (!tip.dataset.w) tip.dataset.w = parseInt(tip.clientWidth);\n          if (!tip.dataset.p) tip.dataset.p = parseInt(style.padding);\n          tip.style.maxWidth = parseInt(tip.clientWidth) + 'px';\n          tip.classList.add(tablecss.showfull);\n          tip.style.top = (parseInt(tip.offsetTop) - parseInt(styleparent.padding)) + 'px';\n          current = tip;\n\n        }\n\n      });\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/table-component.js\n")},"?4f7e":()=>{}}]);