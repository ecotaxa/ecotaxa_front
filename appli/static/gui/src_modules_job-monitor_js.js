/*! For license information please see src_modules_job-monitor_js.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["src_modules_job-monitor_js"],{"./src/modules/job-monitor.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jobMonitor: () => (/* binding */ jobMonitor)\n/* harmony export */ });\n/* harmony import */ var _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utils.js */ "./src/modules/utils.js");\n\n\nfunction jobMonitor(item) {\n  let intervalHandle;\n  const jobid = item.dataset.id;\n  if (!jobid) return;\n  const spinner = item.querySelector(\'#spinner-icon\');\n  const statusdiv = item.querySelector("#statusdiv");\n  let stop = false;\n  const progress_bar = (show, percent = 0, description = ``) => {\n    if (!percent) percent = 0;\n    if (!description) description = "In progress";\n    const progressbar = item.querySelector(\'#progressbar\');\n    if (show === false) {\n      if (spinner) spinner.remove();\n    } else {\n      if (spinner) spinner.classList.remove(\'hidden\');\n      if (progressbar) progressbar.classList.remove(\'hidden\');\n\n\n    }\n\n  }\n  const display_errors = (errors) => {\n    const erroone = errors.shift();\n    const other = (errors.lentgh) ? `<a class="font-btn triggershow" data-action="toggle"  data-target=".alert-errors" data-show="View" data-hide="Hide">{{_(\'all errors...\')}}</a><div class="alert-errors hide">${errors.join(`<br>`)}</div>` : ``;\n    statusdiv.firstChild.innerHTML = `<div class="alert alert-danger" data-dismissible="true">${errorone} ${other}</div>`;\n  }\n  const display_next = async (url) => {\n    fetch(url, (0,_modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings)()).then(response => response.text()).then(response => {\n      statusdiv.lastChild.insertAdjacentHTML(\'beforeend\', response);\n    });\n\n  }\n  let html = [];\n  const check_job_status = () => {\n    fetch("/gui/job/status/" + jobid, _modules_utils_js__WEBPACK_IMPORTED_MODULE_0__.fetchSettings).then(response => response.json()).then(job => {\n\n      if (job.errors.length && job.state != \'E\') {\n        clearInterval(intervalHandle);\n        progress_bar(false);\n        display_errors(job.errors);\n      }\n      if (stop === true) return;\n\n      if (job) {\n        switch (job.state) {\n          case "A":\n            // question\n            stop = true;\n            display_next("/gui/job/question/" + job.id);\n            progress_bar(false);\n            clearInterval(intervalHandle);\n            break;\n          case "F":\n            stop = true;\n            progress_bar(false);\n            if (spinner) spinner.remove();\n            clearInterval(intervalHandle);\n            if (job.finalaction) html.push(job.finalaction);\n            if (job.description) statusdiv.firstChild.innerHTML = job.description;\n            //  display_next("/gui/job/show/"+job.id+\'?monitor=true\');\n            break;\n          case "E":\n            stop = true;\n            progress_bar(false);\n            spinner.remove();\n            clearInterval(intervalHandle);\n\n            break;\n          case "P":\n            // pending\n\n            break;\n          case "R":\n            // running\n            display_errors(job.errors);\n            break;\n        }\n        progress_bar(true, job.progress_pct, job.progress_msg);\n      }\n      if (statusdiv) statusdiv.childNodes[1].innerHTML = html.join(\'\');\n      if (job.state && job.state == "E" || (job.state == \'F\' && !job.out)) return;\n      if (stop === false) setTimeout(check_job_status, 1000);\n    });\n  }\n  check_job_status();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9qb2ItbW9uaXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUU2Qjs7QUFFdEI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkpBQTJKLG9CQUFvQixxQ0FBcUMsb0JBQW9CO0FBQ3hPLGdHQUFnRyxVQUFVLEVBQUUsTUFBTTtBQUNsSDtBQUNBO0FBQ0EsZUFBZSxnRUFBYTtBQUM1QjtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDREQUFhOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9qb2ItbW9uaXRvci5qcz8yMDUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGZldGNoU2V0dGluZ3MsXG59IGZyb20gJy4uL21vZHVsZXMvdXRpbHMuanMnO1xuXG5leHBvcnQgZnVuY3Rpb24gam9iTW9uaXRvcihpdGVtKSB7XG4gIGxldCBpbnRlcnZhbEhhbmRsZTtcbiAgY29uc3Qgam9iaWQgPSBpdGVtLmRhdGFzZXQuaWQ7XG4gIGlmICgham9iaWQpIHJldHVybjtcbiAgY29uc3Qgc3Bpbm5lciA9IGl0ZW0ucXVlcnlTZWxlY3RvcignI3NwaW5uZXItaWNvbicpO1xuICBjb25zdCBzdGF0dXNkaXYgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoXCIjc3RhdHVzZGl2XCIpO1xuICBsZXQgc3RvcCA9IGZhbHNlO1xuICBjb25zdCBwcm9ncmVzc19iYXIgPSAoc2hvdywgcGVyY2VudCA9IDAsIGRlc2NyaXB0aW9uID0gYGApID0+IHtcbiAgICBpZiAoIXBlcmNlbnQpIHBlcmNlbnQgPSAwO1xuICAgIGlmICghZGVzY3JpcHRpb24pIGRlc2NyaXB0aW9uID0gXCJJbiBwcm9ncmVzc1wiO1xuICAgIGNvbnN0IHByb2dyZXNzYmFyID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcjcHJvZ3Jlc3NiYXInKTtcbiAgICBpZiAoc2hvdyA9PT0gZmFsc2UpIHtcbiAgICAgIGlmIChzcGlubmVyKSBzcGlubmVyLnJlbW92ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoc3Bpbm5lcikgc3Bpbm5lci5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgIGlmIChwcm9ncmVzc2JhcikgcHJvZ3Jlc3NiYXIuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG5cblxuICAgIH1cblxuICB9XG4gIGNvbnN0IGRpc3BsYXlfZXJyb3JzID0gKGVycm9ycykgPT4ge1xuICAgIGNvbnN0IGVycm9vbmUgPSBlcnJvcnMuc2hpZnQoKTtcbiAgICBjb25zdCBvdGhlciA9IChlcnJvcnMubGVudGdoKSA/IGA8YSBjbGFzcz1cImZvbnQtYnRuIHRyaWdnZXJzaG93XCIgZGF0YS1hY3Rpb249XCJ0b2dnbGVcIiAgZGF0YS10YXJnZXQ9XCIuYWxlcnQtZXJyb3JzXCIgZGF0YS1zaG93PVwiVmlld1wiIGRhdGEtaGlkZT1cIkhpZGVcIj57e18oJ2FsbCBlcnJvcnMuLi4nKX19PC9hPjxkaXYgY2xhc3M9XCJhbGVydC1lcnJvcnMgaGlkZVwiPiR7ZXJyb3JzLmpvaW4oYDxicj5gKX08L2Rpdj5gIDogYGA7XG4gICAgc3RhdHVzZGl2LmZpcnN0Q2hpbGQuaW5uZXJIVE1MID0gYDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIiBkYXRhLWRpc21pc3NpYmxlPVwidHJ1ZVwiPiR7ZXJyb3JvbmV9ICR7b3RoZXJ9PC9kaXY+YDtcbiAgfVxuICBjb25zdCBkaXNwbGF5X25leHQgPSBhc3luYyAodXJsKSA9PiB7XG4gICAgZmV0Y2godXJsLCBmZXRjaFNldHRpbmdzKCkpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgIHN0YXR1c2Rpdi5sYXN0Q2hpbGQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCByZXNwb25zZSk7XG4gICAgfSk7XG5cbiAgfVxuICBsZXQgaHRtbCA9IFtdO1xuICBjb25zdCBjaGVja19qb2Jfc3RhdHVzID0gKCkgPT4ge1xuICAgIGZldGNoKFwiL2d1aS9qb2Ivc3RhdHVzL1wiICsgam9iaWQsIGZldGNoU2V0dGluZ3MpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKS50aGVuKGpvYiA9PiB7XG5cbiAgICAgIGlmIChqb2IuZXJyb3JzLmxlbmd0aCAmJiBqb2Iuc3RhdGUgIT0gJ0UnKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxIYW5kbGUpO1xuICAgICAgICBwcm9ncmVzc19iYXIoZmFsc2UpO1xuICAgICAgICBkaXNwbGF5X2Vycm9ycyhqb2IuZXJyb3JzKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdG9wID09PSB0cnVlKSByZXR1cm47XG5cbiAgICAgIGlmIChqb2IpIHtcbiAgICAgICAgc3dpdGNoIChqb2Iuc3RhdGUpIHtcbiAgICAgICAgICBjYXNlIFwiQVwiOlxuICAgICAgICAgICAgLy8gcXVlc3Rpb25cbiAgICAgICAgICAgIHN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgZGlzcGxheV9uZXh0KFwiL2d1aS9qb2IvcXVlc3Rpb24vXCIgKyBqb2IuaWQpO1xuICAgICAgICAgICAgcHJvZ3Jlc3NfYmFyKGZhbHNlKTtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxIYW5kbGUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkZcIjpcbiAgICAgICAgICAgIHN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgcHJvZ3Jlc3NfYmFyKGZhbHNlKTtcbiAgICAgICAgICAgIGlmIChzcGlubmVyKSBzcGlubmVyLnJlbW92ZSgpO1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbEhhbmRsZSk7XG4gICAgICAgICAgICBpZiAoam9iLmZpbmFsYWN0aW9uKSBodG1sLnB1c2goam9iLmZpbmFsYWN0aW9uKTtcbiAgICAgICAgICAgIGlmIChqb2IuZGVzY3JpcHRpb24pIHN0YXR1c2Rpdi5maXJzdENoaWxkLmlubmVySFRNTCA9IGpvYi5kZXNjcmlwdGlvbjtcbiAgICAgICAgICAgIC8vICBkaXNwbGF5X25leHQoXCIvZ3VpL2pvYi9zaG93L1wiK2pvYi5pZCsnP21vbml0b3I9dHJ1ZScpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkVcIjpcbiAgICAgICAgICAgIHN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgcHJvZ3Jlc3NfYmFyKGZhbHNlKTtcbiAgICAgICAgICAgIHNwaW5uZXIucmVtb3ZlKCk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIlBcIjpcbiAgICAgICAgICAgIC8vIHBlbmRpbmdcblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIlJcIjpcbiAgICAgICAgICAgIC8vIHJ1bm5pbmdcbiAgICAgICAgICAgIGRpc3BsYXlfZXJyb3JzKGpvYi5lcnJvcnMpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcHJvZ3Jlc3NfYmFyKHRydWUsIGpvYi5wcm9ncmVzc19wY3QsIGpvYi5wcm9ncmVzc19tc2cpO1xuICAgICAgfVxuICAgICAgaWYgKHN0YXR1c2Rpdikgc3RhdHVzZGl2LmNoaWxkTm9kZXNbMV0uaW5uZXJIVE1MID0gaHRtbC5qb2luKCcnKTtcbiAgICAgIGlmIChqb2Iuc3RhdGUgJiYgam9iLnN0YXRlID09IFwiRVwiIHx8IChqb2Iuc3RhdGUgPT0gJ0YnICYmICFqb2Iub3V0KSkgcmV0dXJuO1xuICAgICAgaWYgKHN0b3AgPT09IGZhbHNlKSBzZXRUaW1lb3V0KGNoZWNrX2pvYl9zdGF0dXMsIDEwMDApO1xuICAgIH0pO1xuICB9XG4gIGNoZWNrX2pvYl9zdGF0dXMoKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/job-monitor.js\n')}}]);